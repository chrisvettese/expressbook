{"version":3,"sources":["employee/Employee.tsx","customer/Customer.tsx","customer/Name.tsx","customer/Welcome.tsx","customer/HotelBrand.tsx","customer/Hotel.tsx","customer/Reservations.tsx","customer/Rooms.tsx","index.tsx"],"names":["useStyles","makeStyles","sinCentre","paddingTop","display","alignItems","justifyContent","buttonCentre","centreTitle","fontWeight","fontSize","width","centre","marginTop","buttonSpacing","marginLeft","marginRight","theme","root","flexWrap","backgroundColor","palette","background","paper","marginBottom","brandPaper","padding","flexDirection","hotelTitle","grid","boxShadow","height","divider","brandGrid","priceDiv","hotelGrid","radioGroup","GenerateReservations","classes","reservations","editButtonToDisable","radioState","setEditButtonToDisable","setAlertMessage","setAlertStatus","setAlertOpen","customerSIN","setReservations","GridList","cols","cellHeight","className","filter","reservation","status","map","checkIn","Date","check_in_day","replace","checkOut","check_out_day","totalPrice","Math","round","abs","parseFloat","price","toFixed","amenities","length","push","GridListTile","Paper","elevation","Grid","container","spacing","Typography","title","physical_address","join","view","is_extendable","Divider","orientation","flexItem","item","xs","date_of_registration","booking_id","ReservationEditButton","Button","variant","onClick","patchReservation","disabled","action","a","fetch","process","method","headers","body","JSON","stringify","updateReservations","openAlert","console","error","bookingID","i","message","centreTitleNoSpace","smallerTitle","outsideGrid","dateGrid","gridParent","dialogDiv","dialogHeader","dialogTitle","dialogAddress","fontStyle","useStylesBootstrap","arrow","color","common","black","tooltip","BootstrapTooltip","props","Tooltip","ConfirmationDialog","dialogOpen","setDialogOpen","roomToBook","location","checkInDateToBook","checkOutDateToBook","disableBookRoomButton","bookRoom","Dialog","onClose","aria-labelledby","open","DialogTitle","id","align","state","address","customerName","customerAddress","DialogActions","type_id","require","config","useTitleStyles","paddingLeft","TitleBarCustomer","AppBar","position","TitleBarEmployee","ReactDOM","exact","path","component","history","useHistory","useState","SIN","setSIN","disableSignIn","setDisableSignIn","setError","sin_re","validateSIN","test","checkEmployee","then","response","json","customer_sin","customer_name","customer_address","catch","log","TextField","helperText","onChange","event","currentTarget","value","onKeyPress","e","key","keyPressed","label","style","checkCustomer","useLocation","name","setName","setAddress","nameError","setNameError","addressError","setAddressError","disableUseButton","setDisableUseButton","submitInfo","disableHotelButton","setDisableHotelButton","disableReservationButton","setDisableReservationButton","welcomeMessage","addressMessage","goToBrandPage","goToReservationsPage","buttonStateValues","buttonStates","setButtonStates","index","newStates","brand_id","brandName","brand","main_office_address","email_address","phone_number","number_of_hotels","getHotels","hotel_id","hotelID","hotel","number_of_rooms","Rating","star_category","readOnly","sort","r1","r2","setRadioState","alertOpen","alertMessage","alertStatus","closeAlert","RadioGroup","parseInt","target","setReservationRadioState","row","FormControlLabel","control","Radio","Snackbar","autoHideDuration","Alert","severity","checkInDate","setCheckInDate","tomorrow","setDate","getDate","checkOutDate","setCheckOutDate","setCheckInDateToBook","setCheckOutDateToBook","numPeople","setNumPeople","availability","setAvailability","disableAvailability","setDisableAvailability","roomData","setRoomData","numRooms","setNumRooms","setRoomToBook","setDisableBookRoomButton","past","typeID","check_in","check_out","checkAvailability","url","dateToString","availableRooms","newRoomData","parse","roomNum","forEach","room","roomInfo","getRoom","enabled","rooms_available","total_number_rooms","occupancy","date","year","getFullYear","toString","month","getMonth","day","utils","DateFnsUtils","margin","format","minDate","getTime","setMonth","setCheckIn","KeyboardButtonProps","setCheckOut","type","InputLabelProps","shrink","num","aria-label","placement","opacity","room_capacity","numAvailable","total","confirmBookRoom","document","getElementById"],"mappings":"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","file":"static/js/main.427d04c0.chunk.js","sourcesContent":["import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory} from 'react-router-dom';\n\n\nconst useStyles = makeStyles(() => ({\n    sinCentre: {\n        paddingTop: '3em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    }\n}));\n\nexport default function Employee() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [SIN, setSIN] = useState(\"\");\n    const [disableSignIn, setDisableSignIn] = useState(false);\n    const [error, setError] = useState(\"\");\n    const sin_re: RegExp = /^[0-9]{3}-[0-9]{3}-[0-9]{3}$/;\n\n    function validateSIN(): boolean {\n        return !sin_re.test(SIN) && SIN.length !== 0;\n    }\n\n    function keyPressed(e: React.KeyboardEvent<HTMLDivElement>) {\n        if (e.key === 'Enter' && sin_re.test(SIN)) {\n            checkEmployee();\n        }\n    }\n\n    function checkEmployee() {\n        setDisableSignIn(true);\n        fetch(process.env.REACT_APP_SERVER_URL + \"/employees/\" + SIN)\n            .then(response => {\n                if (response.status === 200) {\n                    response.json().then(response => {\n                        history.push('/ui/customer/welcome', {\n                            customerSIN: response.customer_sin,\n                            customerName: response.customer_name,\n                            customerAddress: response.customer_address\n                        })\n                    })\n                } else {\n                    setError(\"Unable to sign in. Please contact the hotel manager or database admin if you think this is a problem.\")\n                    setDisableSignIn(false);\n                }\n            }).catch(error => {\n                console.log('Error:', error);\n                setDisableSignIn(false);\n            }\n        )\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>Sign In</Typography>\n            <div className={classes.sinCentre}>\n                <Typography>Please sign in to access the hotel management system:</Typography>\n            </div>\n            <div className={classes.sinCentre}>\n                <TextField error={validateSIN()} helperText={validateSIN() ? \"SIN must have format XXX-XXX-XXX\" : \"\"}\n                           onChange={event => setSIN(event.currentTarget.value)}\n                           onKeyPress={e => keyPressed(e)}\n                           id=\"outlined-basic\" label=\"Social Insurance Number\" variant=\"outlined\" value={SIN}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => checkEmployee()}\n                        disabled={!sin_re.test(SIN) || disableSignIn}>Sign In</Button>\n            </div>\n            <Typography style={{color: \"red\"}}>{error}</Typography>\n        </>\n    )\n}","import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory} from 'react-router-dom';\n\n\nconst useStyles = makeStyles(() => ({\n    sinCentre: {\n        paddingTop: '3em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    }\n}));\n\nexport default function Customer() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [SIN, setSIN] = useState(\"\");\n    const [disableSignIn, setDisableSignIn] = useState(false);\n    const sin_re: RegExp = /^[0-9]{3}-[0-9]{3}-[0-9]{3}$/;\n\n    function validateSIN(): boolean {\n        return !sin_re.test(SIN) && SIN.length !== 0;\n    }\n\n    function keyPressed(e: React.KeyboardEvent<HTMLDivElement>) {\n        if (e.key === 'Enter' && sin_re.test(SIN)) {\n            checkCustomer();\n        }\n    }\n\n    function checkCustomer() {\n        setDisableSignIn(true);\n        fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + SIN)\n            .then(response => {\n                if (response.status === 404) {\n                    history.push('/ui/customer/name', {customerSIN: SIN})\n                } else {\n                    response.json().then(response => {\n                        history.push('/ui/customer/welcome', {\n                            customerSIN: response.customer_sin,\n                            customerName: response.customer_name,\n                            customerAddress: response.customer_address\n                        })\n                    })\n                }\n            }).catch(error => {\n                console.log('Error:', error);\n                setDisableSignIn(false);\n            }\n        )\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>Sign In</Typography>\n            <div className={classes.sinCentre}>\n                <Typography>To begin searching destinations, enter your social insurance number:</Typography>\n            </div>\n            <div className={classes.sinCentre}>\n                <TextField error={validateSIN()} helperText={validateSIN() ? \"SIN must have format XXX-XXX-XXX\" : \"\"}\n                           onChange={event => setSIN(event.currentTarget.value)}\n                           onKeyPress={e => keyPressed(e)}\n                           id=\"outlined-basic\" label=\"Social Insurance Number\" variant=\"outlined\" value={SIN}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => checkCustomer()}\n                        disabled={!sin_re.test(SIN) || disableSignIn}>Sign In</Button>\n            </div>\n        </>\n    )\n}","import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '5em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}));\n\nexport default function Name() {\n    const classes = useStyles();\n    const location = useLocation<{ customerSIN: string }>();\n    const history = useHistory();\n    const [name, setName] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [nameError, setNameError] = useState(false)\n    const [addressError, setAddressError] = useState(false)\n    const [disableUseButton, setDisableUseButton] = useState(false)\n\n    async function submitInfo() {\n        if (name.length === 0 && address.length === 0) {\n            setNameError(true);\n            setAddressError(true)\n        } else if (name.length !== 0 && address.length === 0) {\n            setNameError(false);\n            setAddressError(true)\n        } else if (name.length === 0 && address.length !== 0) {\n            setNameError(true);\n            setAddressError(false)\n        } else {\n            setDisableUseButton(true);\n            try {\n                let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers\", {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        customer_sin: location.state.customerSIN,\n                        customer_name: name,\n                        customer_address: address\n                    })\n                })\n                if (response.status === 201) {\n                    history.push('/ui/customer/welcome', {\n                        customerSIN: location.state.customerSIN,\n                        customerName: name,\n                        customerAddress: address\n                    })\n                }\n            } catch(error) {\n                console.error('Error:', error);\n                setDisableUseButton(false);\n            }\n        }\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <div className={classes.centre}>\n                <Typography>Welcome to ExpressBook. Please provide some information about yourself:</Typography>\n            </div>\n            <div className={classes.centre}>\n                <TextField label=\"Full Name\" variant=\"outlined\" value={name} error={nameError}\n                           helperText={nameError ? \"Must provide name\" : \"\"}\n                           onChange={event => setName(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.centre}>\n                <TextField label=\"Address\" variant=\"outlined\" value={address} error={addressError}\n                           helperText={addressError ? \"Must provide address\" : \"\"}\n                           onChange={event => setAddress(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => submitInfo()} disabled={disableUseButton}>Sign In</Button>\n            </div>\n        </>\n    )\n}","import {Button, makeStyles, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: '2em'\n    },\n    buttonSpacing: {\n        marginLeft: '1.5em',\n        marginRight: '1.5em'\n    }\n}));\n\nexport default function Welcome() {\n    const classes = useStyles();\n    const location = useLocation<{ customerSIN: string, customerName: string, customerAddress: string }>();\n    const history = useHistory();\n    const [disableHotelButton, setDisableHotelButton] = useState(false);\n    const [disableReservationButton, setDisableReservationButton] = useState(false);\n\n    const welcomeMessage = \"Welcome, \" + location.state.customerName;\n    const addressMessage = \"Your address: \" + location.state.customerAddress;\n\n    async function goToBrandPage() {\n        setDisableHotelButton(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/brands\");\n            if (response.status !== 200) {\n                setDisableHotelButton(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/customer/brands', {\n                customerSIN: location.state.customerSIN,\n                customerAddress: location.state.customerAddress,\n                customerName: location.state.customerName,\n                response: response\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            setDisableHotelButton(false);\n        }\n    }\n\n    async function goToReservationsPage() {\n        setDisableReservationButton(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + location.state.customerSIN + \"/reservations\");\n            if (response.status !== 200) {\n                setDisableReservationButton(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/customer/reservations', {\n                customerName: location.state.customerName,\n                customerSIN: location.state.customerSIN,\n                customerAddress: location.state.customerAddress,\n                response: response\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            setDisableReservationButton(false);\n        }\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>{welcomeMessage}</Typography>\n            <Typography className={classes.centre}>{addressMessage}</Typography>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" className={classes.buttonSpacing} onClick={() => goToBrandPage()}\n                        disabled={disableHotelButton}>Find A Hotel</Button>\n                <Button variant=\"contained\" onClick={() => goToReservationsPage()} disabled={disableReservationButton}>My\n                    Reservations</Button>\n            </div>\n        </>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em',\n        width: '100%'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    brandGrid: {\n        width: '80%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    }\n}));\n\nexport default function HotelBrand() {\n    const classes = useStyles();\n    const location = useLocation<{customerSIN: string, customerName: string, customerAddress: string, response: any }>();\n    const history = useHistory();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n\n    async function getHotels(index: number) {\n        let newStates = [...buttonStates]\n        newStates[index] = true;\n        setButtonStates(newStates);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/brands/\" + location.state.response[index].brand_id + \"/hotels\");\n            if (response.status !== 200) {\n                let newStates = [...buttonStates]\n                newStates[index] = false;\n                setButtonStates(newStates);\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/customer/hotels', {\n                customerSIN: location.state.customerSIN,\n                customerName: location.state.customerName,\n                customerAddress: location.state.customerAddress,\n                response: response,\n                brandName: location.state.response[index].name,\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[index] = false;\n            setButtonStates(newStates);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>Select a hotel brand to view hotels:</Typography>\n            <GridList cols={1} cellHeight={200} className={classes.grid}>\n                {\n                    location.state.response.map((brand: {\n                        brand_id: number;\n                        name: string;\n                        main_office_address: string;\n                        email_address: string;\n                        phone_number: string;\n                        number_of_hotels: number;\n                    }, index: number) => {\n                        return (\n                            <GridListTile key={brand.brand_id} cols={1}>\n                                <Paper elevation={3} key={brand.brand_id} className={classes.brandPaper}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid className={classes.brandGrid}>\n                                            <Typography className={classes.hotelTitle}>{brand.name}</Typography>\n                                            <Typography>Headquarters Address: {brand.main_office_address}</Typography>\n                                            <Typography>Email: {brand.email_address}</Typography>\n                                            <Typography>Phone: {brand.phone_number}</Typography>\n                                            <Typography>Number of hotels: {brand.number_of_hotels}</Typography>\n                                        </Grid>\n                                        <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                        <Grid item xs={2}>\n                                            <Grid className={classes.priceDiv}>\n                                                <Button variant='contained' onClick={() => getHotels(index)}\n                                                        disabled={buttonStates[index]}>Select</Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </GridListTile>\n                        );\n                    })\n                }\n            </GridList>\n        </div>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {Rating} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em',\n        width: '100%'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    hotelGrid: {\n        width: '80%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n\n    }\n}));\n\nexport default function Hotel() {\n    const classes = useStyles();\n    const location = useLocation<{\n        customerSIN: string,\n        customerName: string,\n        customerAddress: string,\n        response: any,\n        brandName: string\n    }>();\n    const history = useHistory();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n\n    async function getHotels(index: number) {\n        let newStates = [...buttonStates]\n        newStates[index] = true;\n        setButtonStates(newStates);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.response[index].hotel_id + \"/rooms\");\n            if (response.status !== 200) {\n                let newStates = [...buttonStates]\n                newStates[index] = false;\n                setButtonStates(newStates);\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/customer/rooms', {\n                customerSIN: location.state.customerSIN,\n                customerName: location.state.customerName,\n                customerAddress: location.state.customerAddress,\n                response: response,\n                brandName: location.state.brandName,\n                address: location.state.response[index].physical_address,\n                hotelID: location.state.response[index].hotel_id\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[index] = false;\n            setButtonStates(newStates);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>{location.state.brandName} Hotels</Typography>\n            <GridList cols={1} cellHeight={175} className={classes.grid}>\n                {\n                    location.state.response.map((hotel: {\n                        physical_address: string;\n                        email_address: string;\n                        phone_number: string;\n                        number_of_rooms: number;\n                        hotel_id: number;\n                        star_category: number;\n                    }, index: number) => {\n                        return (\n                            <GridListTile key={hotel.hotel_id} cols={1}>\n                                <Paper elevation={3} key={hotel.hotel_id} className={classes.brandPaper}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid className={classes.hotelGrid}>\n                                            <Typography\n                                                className={classes.hotelTitle}>{hotel.physical_address}</Typography>\n                                            <Typography>Email: {hotel.email_address}</Typography>\n                                            <Typography>Phone: {hotel.phone_number}</Typography>\n                                            <Typography>Number of rooms: {hotel.number_of_rooms}</Typography>\n                                        </Grid>\n                                        <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                        <Grid item xs={2}>\n                                            <Grid className={classes.priceDiv}>\n                                                <Rating value={hotel.star_category} readOnly/>\n                                                <br/><br/>\n                                                <Button variant='contained' onClick={() => getHotels(index)}\n                                                        disabled={buttonStates[index]}>View Details</Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </GridListTile>\n                        );\n                    })\n                }\n            </GridList>\n        </div>\n    )\n}","import {\n    Button,\n    Divider, FormControlLabel,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper, Radio, RadioGroup, Snackbar,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useLocation} from \"react-router-dom\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    hotelGrid: {\n        width: '70%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    radioGroup: {\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em'\n    }\n}));\n\ntype Reservation = {\n    booking_id: number;\n    physical_address: string;\n    date_of_registration: string;\n    check_in_day: string;\n    check_out_day: string;\n    status: string;\n    title: string;\n    is_extendable: boolean;\n    amenities: string[];\n    view: string;\n    price: string;\n}\n\ntype Severity = \"error\" | \"success\" | \"info\" | \"warning\" | undefined;\n\nconst GenerateReservations = ({\n                                  classes,\n                                  reservations,\n                                  editButtonToDisable,\n                                  radioState,\n                                  setEditButtonToDisable,\n                                  setAlertMessage,\n                                  setAlertStatus,\n                                  setAlertOpen,\n                                  customerSIN,\n                                  setReservations\n                              }: any) => {\n\n    return <GridList cols={1} cellHeight={220} className={classes.grid}>\n        {\n            reservations.filter((reservation: Reservation) => {\n                return !((radioState === 1 && reservation.status !== 'Renting')\n                    || (radioState === 2 && reservation.status !== 'Booked')\n                    || (radioState === 3 && reservation.status !== 'Archived' && reservation.status !== 'Cancelled'))\n            }).map((reservation: Reservation) => {\n                const checkIn: Date = new Date(reservation.check_in_day.replace('-', '/'))\n                const checkOut: Date = new Date(reservation.check_out_day.replace('-', '/'))\n                const days: number = Math.round(Math.abs(+checkIn - +checkOut) / 24 / 60 / 60 / 1000)\n                const totalPrice: string = (days * parseFloat(reservation.price)).toFixed(2)\n\n                if (reservation.amenities.length === 0) {\n                    reservation.amenities.push(\"None\")\n                }\n\n                return (\n                    <GridListTile key={reservation.booking_id} cols={1}>\n                        <Paper elevation={3} key={reservation.booking_id} className={classes.brandPaper}>\n                            <Grid container spacing={2} alignItems=\"center\">\n                                <Grid className={classes.hotelGrid}>\n                                    <Typography\n                                        className={classes.hotelTitle}>Room: {reservation.title} | {reservation.check_in_day} to {reservation.check_out_day}\n                                    </Typography>\n                                    <Typography>{reservation.physical_address}</Typography>\n                                    <Typography>Booking status: {reservation.status}</Typography>\n                                    <Typography>Amenities: {reservation.amenities.join(', ')}</Typography>\n                                    <Typography>View: {reservation.view}</Typography>\n                                    <Typography>\n                                        Extendable: {reservation.is_extendable ? \"Yes\" : \"No\"}\n                                    </Typography>\n                                </Grid>\n                                <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                <Grid item xs={3}>\n                                    <Grid className={classes.priceDiv}>\n                                        <Typography>Booked on {reservation.date_of_registration}</Typography>\n                                        <Typography className={classes.hotelTitle}>Total price:</Typography>\n                                        <Typography className={classes.hotelTitle}>${totalPrice}</Typography>\n                                        <br/>\n                                        <ReservationEditButton reservation={reservation}\n                                                               reservations={reservations}\n                                                               setEditButtonToDisable={setEditButtonToDisable}\n                                                               editButtonToDisable={editButtonToDisable}\n                                                               setAlertMessage={setAlertMessage}\n                                                               setAlertStatus={setAlertStatus}\n                                                               setAlertOpen={setAlertOpen}\n                                                               customerSIN={customerSIN}\n                                                               setReservations={setReservations}/>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </GridListTile>\n                );\n            })\n        }\n    </GridList>\n}\n\ntype ReservationEditProps = {\n    reservation: Reservation;\n    reservations: Reservation[];\n    editButtonToDisable: number;\n    setEditButtonToDisable: any;\n    setAlertMessage: any;\n    setAlertStatus: any;\n    setAlertOpen: any;\n    customerSIN: string;\n    setReservations: any;\n}\n\nconst ReservationEditButton = ({\n                                   reservation,\n                                   reservations,\n                                   editButtonToDisable,\n                                   setEditButtonToDisable,\n                                   setAlertMessage,\n                                   setAlertStatus,\n                                   setAlertOpen,\n                                   customerSIN,\n                                   setReservations\n                               }: ReservationEditProps) => {\n    if (reservation.status === 'Renting') {\n        return <Button variant='contained'\n                       onClick={() => patchReservation('Archived', setEditButtonToDisable, reservations, reservation, setAlertMessage, setAlertStatus, setAlertOpen, customerSIN, setReservations)}\n                       disabled={editButtonToDisable === reservation.booking_id}>Check Out</Button>\n    }\n    if (reservation.status === 'Booked') {\n        return <Button variant='contained'\n                       onClick={() => patchReservation('Cancelled', setEditButtonToDisable, reservations, reservation, setAlertMessage, setAlertStatus, setAlertOpen, customerSIN, setReservations)}\n                       disabled={editButtonToDisable === reservation.booking_id}>Cancel</Button>\n    }\n    return <></>\n}\n\nasync function patchReservation(action: string, setEditButtonToDisable: any, reservations: Reservation[], reservation: Reservation, setAlertMessage: any, setAlertStatus: any, setAlertOpen: any, customerSIN: string, setReservations: any) {\n    setEditButtonToDisable(reservation.booking_id);\n    try {\n        let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + customerSIN + \"/reservations/\" + reservation.booking_id, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                status: action\n            })\n        })\n        if (response.status === 204) {\n            if (action === 'Archived') {\n                updateReservations([...reservations], reservation.booking_id, 'Archived', setReservations);\n                openAlert('Successfully checked out of hotel', 'success', setAlertMessage, setAlertStatus, setAlertOpen);\n\n            } else {\n                updateReservations([...reservations], reservation.booking_id, 'Cancelled', setReservations);\n                openAlert('Successfully cancelled room booking', 'success', setAlertMessage, setAlertStatus, setAlertOpen)\n            }\n        } else {\n            openAlert('Error: Unable to modify reservation', 'error', setAlertMessage, setAlertStatus, setAlertOpen);\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        openAlert('Error: Unable to modify reservation', 'error', setAlertMessage, setAlertStatus, setAlertOpen)\n    }\n    setEditButtonToDisable(-1);\n}\n\nfunction updateReservations(reservations: Reservation[], bookingID: number, status: string, setReservations: any) {\n    for (let i = 0; i < reservations.length; i++) {\n        if (reservations[i].booking_id === bookingID) {\n            reservations[i].status = status;\n            setReservations(reservations);\n            return;\n        }\n    }\n}\n\nfunction openAlert(message: string, status: string, setAlertMessage: any, setAlertStatus: any, setAlertOpen: any) {\n    setAlertMessage(message);\n    setAlertStatus(status);\n    setAlertOpen(true);\n}\n\nexport default function Reservations() {\n    const classes = useStyles();\n    const location = useLocation<{\n        customerName: string;\n        customerSIN: string,\n        response: Reservation[]\n    }>();\n\n    location.state.response.sort((r1: Reservation, r2: Reservation) => (r1.check_in_day > r2.check_in_day) ? 1 : -1);\n\n    const [radioState, setRadioState] = useState(0);\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertStatus, setAlertStatus]: [Severity, any] = useState(\"success\");\n    const [editButtonToDisable, setEditButtonToDisable]: [number, any] = useState(-1);\n    const [reservations, setReservations]: [Reservation[], any] = useState([...location.state.response]);\n\n    function closeAlert() {\n        setAlertOpen(false);\n    }\n\n    function setReservationRadioState(event: React.ChangeEvent<HTMLInputElement>) {\n        const value = parseInt(event.target.value);\n        setRadioState(value);\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>My Reservations - {location.state.customerName}</Typography>\n            <RadioGroup className={classes.radioGroup} value={radioState} onChange={e => setReservationRadioState(e)}\n                        row>\n                <Typography>Filter by:&nbsp;&nbsp;&nbsp;</Typography>\n                <FormControlLabel value={0} control={<Radio/>} label=\"All Reservations\"/>\n                <FormControlLabel value={1} control={<Radio/>} label=\"Ongoing\"/>\n                <FormControlLabel value={2} control={<Radio/>} label=\"Upcoming\"/>\n                <FormControlLabel value={3} control={<Radio/>} label=\"Cancelled/Archived\"/>\n            </RadioGroup>\n            <GenerateReservations classes={classes} reservations={reservations}\n                                  editButtonToDisable={editButtonToDisable} radioState={radioState}\n                                  setEditButtonToDisable={setEditButtonToDisable} setAlertMessage={setAlertMessage}\n                                  setAlertStatus={setAlertStatus} setAlertOpen={setAlertOpen}\n                                  customerSIN={location.state.customerSIN} setReservations={setReservations}/>\n            <Snackbar open={alertOpen} autoHideDuration={6000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity={alertStatus}>\n                    {alertMessage}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}","import {\n    Button, Dialog, DialogActions, DialogTitle,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper, Snackbar, TextField, Tooltip,\n    TooltipProps,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useLocation} from \"react-router-dom\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {MaterialUiPickersDate} from \"@material-ui/pickers/typings/date\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '1em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    centreTitleNoSpace: {\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    smallerTitle: {\n        fontSize: '1.7em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        marginBottom: '0.5em'\n    },\n    brandPaper: {\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        marginTop: '1em'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '50em',\n        width: '85%',\n        marginTop: '10em'\n    },\n    outsideGrid: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        marginBottom: '2em'\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em',\n    },\n    hotelGrid: {\n        width: '70%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n\n    },\n    dateGrid: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    gridParent: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    dialogDiv: {\n        marginLeft: \"0.5em\",\n        marginRight: \"0.5em\"\n    },\n    dialogHeader: {\n        fontWeight: 'bold'\n    },\n    dialogTitle: {\n        fontSize: \"1.8em\",\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    dialogAddress: {\n        marginLeft: \"0.5em\",\n        marginRight: \"0.5em\",\n        fontStyle: \"italic\"\n    }\n}));\n\nconst useStylesBootstrap = makeStyles((theme) => ({\n    arrow: {\n        color: theme.palette.common.black,\n    },\n    tooltip: {\n        backgroundColor: theme.palette.common.black,\n    },\n}));\n\nfunction BootstrapTooltip(props: JSX.IntrinsicAttributes & TooltipProps) {\n    const classes = useStylesBootstrap();\n\n    return <Tooltip arrow classes={classes} {...props} />;\n}\n\ninterface Room {\n    type_id: number;\n    title: string;\n    price: string;\n    amenities: string[];\n    room_capacity: number;\n    view: string;\n    is_extendable: boolean;\n    total_number_rooms: number;\n    rooms_available: number;\n    enabled: undefined | boolean;\n    tooltip: string;\n}\n\ntype Severity = \"error\" | \"success\" | \"info\" | \"warning\" | undefined;\n\ninterface AvailableRoom {\n    type_id: number;\n    occupancy: number;\n}\n\nconst ConfirmationDialog = ({\n                                dialogOpen,\n                                setDialogOpen,\n                                roomToBook,\n                                classes,\n                                location,\n                                checkInDateToBook,\n                                checkOutDateToBook,\n                                disableBookRoomButton,\n                                bookRoom\n                            }: any) => {\n\n    return <Dialog onClose={() => setDialogOpen(false)} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n        <DialogTitle id=\"dialog-title\" className={classes.dialogTitle}>\n            <Typography className={classes.dialogTitle}>Confirm Room Booking</Typography>\n        </DialogTitle>\n        <div className={classes.dialogAddress}>\n            <Typography align=\"center\">{location.state.address}</Typography>\n        </div>\n        <br/>\n        <Divider/>\n        <Typography align=\"center\" className={classes.dialogHeader}>Customer Info</Typography>\n        <Divider/>\n        <div className={classes.dialogDiv}>\n            <Typography>{location.state.customerName}</Typography>\n            <Typography>{location.state.customerAddress}</Typography>\n        </div>\n        <br/>\n        <Divider/>\n        <Typography align=\"center\" className={classes.dialogHeader}>Room Details</Typography>\n        <Divider/>\n        <div className={classes.dialogDiv}>\n            <Typography>Room type: {roomToBook.title}</Typography>\n            <Typography>{checkInDateToBook} to {checkOutDateToBook}</Typography>\n            <Typography>Amenities: {roomToBook.amenities.join(', ')}</Typography>\n            <Typography>View: {roomToBook.view}</Typography>\n            <Typography>\n                Extendable: {roomToBook.is_extendable ? \"Yes\" : \"No\"}\n            </Typography>\n        </div>\n        <br/>\n        <DialogActions>\n            <Button disabled={disableBookRoomButton} onClick={() => bookRoom(roomToBook.type_id)} variant=\"contained\"\n                    color=\"primary\">\n                Book Room\n            </Button>\n            <Button onClick={() => setDialogOpen(false)} variant=\"contained\" color=\"secondary\">\n                Cancel\n            </Button>\n        </DialogActions>\n    </Dialog>\n};\n\nexport default function Rooms() {\n    const classes = useStyles();\n    const location = useLocation<{\n        address: string;\n        customerSIN: string,\n        customerName: string,\n        customerAddress: string,\n        response: Room[],\n        brandName: string,\n        hotelID: string\n    }>();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(true)\n    }\n\n    const [checkInDate, setCheckInDate]: [Date, any] = useState(new Date());\n    const tomorrow: MaterialUiPickersDate = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1)\n    const [checkOutDate, setCheckOutDate]: [Date, any] = useState(tomorrow);\n    const [checkInDateToBook, setCheckInDateToBook]: [string, any] = useState(\"\");\n    const [checkOutDateToBook, setCheckOutDateToBook]: [string, any] = useState(\"\");\n    const [numPeople, setNumPeople]: [number, any] = useState(1);\n    const [availability, setAvailability]: [boolean, any] = useState(false);\n    const [disableAvailability, setDisableAvailability]: [boolean, any] = useState(false);\n    const [roomData, setRoomData]: [Room[], any] = useState(location.state.response);\n    const [numRooms, setNumRooms]: [number, any] = useState(location.state.response.length);\n    const [dialogOpen, setDialogOpen]: [boolean, any] = useState(false);\n    const [roomToBook, setRoomToBook]: [Room, any] = useState(location.state.response[0]);\n    const [disableBookRoomButton, setDisableBookRoomButton]: [boolean, any] = useState(false);\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertStatus, setAlertStatus]: [Severity, any] = useState(\"success\");\n\n    const past: [Date, Date, number] = [tomorrow, tomorrow, -1]\n\n    location.state.response.forEach((room: Room) => {\n        room.enabled = true;\n        room.tooltip = \"\";\n    })\n\n    function confirmBookRoom(room: Room) {\n        setRoomToBook(room);\n        setDialogOpen(true);\n    }\n\n    async function bookRoom(typeID: number) {\n        setDisableBookRoomButton(true);\n        try {\n            let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + location.state.customerSIN + \"/reservations\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    type_id: typeID,\n                    check_in: checkInDateToBook,\n                    check_out: checkOutDateToBook\n                })\n            })\n            if (response.status === 201) {\n                await checkAvailability();\n                openAlert('Successfully booked room', 'success');\n                setDialogOpen(false);\n            } else {\n                openAlert('Error: Unable to book room', 'error');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            openAlert('Error: Unable to book room', 'error');\n        }\n        setDisableBookRoomButton(false);\n    }\n\n    function openAlert(message: string, status: string) {\n        setAlertMessage(message);\n        setAlertStatus(status);\n        setAlertOpen(true);\n    }\n\n    function closeAlert() {\n        setAlertOpen(false);\n    }\n\n    async function checkAvailability() {\n        //Only check availability if filters have been changed\n        if (past[0] !== checkInDate || past[1] !== checkOutDate || past[2] !== numPeople) {\n            setDisableAvailability(true);\n            try {\n                let url: string = process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.hotelID + \"/rooms/availability\"\n                url += \"?check-in=\" + dateToString(checkInDate) + \"&check-out=\" + dateToString(checkOutDate) + \"&people=\" + numPeople;\n\n                let response: Response = await fetch(url);\n                if (response.status !== 200) {\n                    return;\n                }\n                const availableRooms: AvailableRoom[] = await response.json();\n                const newRoomData: Room[] = JSON.parse(JSON.stringify(roomData));\n                let roomNum: number = newRoomData.length;\n                newRoomData.forEach(room => {\n                    const roomInfo = getRoom(room.type_id, availableRooms);\n                    room.enabled = true;\n                    room.tooltip = \"\";\n                    room.rooms_available = room.total_number_rooms - roomInfo.occupancy;\n                    //Room capacity is too small; disable\n                    if (roomInfo.type_id === -1) {\n                        room.enabled = false;\n                        room.tooltip = \"Room capacity is too small\";\n                        roomNum--;\n                    }\n                    if (room.rooms_available <= 0) {\n                        room.enabled = false;\n                        room.tooltip = \"Room is booked up over these dates\"\n                        roomNum--;\n                    }\n                });\n                newRoomData.sort((r1: Room, r2: Room) => {\n                    if (r1.enabled && !r2.enabled) {\n                        return -1;\n                    }\n                    if (!r1.enabled && r2.enabled) {\n                        return 1;\n                    }\n                    return r1.type_id > r2.type_id ? -1 : 1;\n                })\n                setRoomData(newRoomData);\n                setNumRooms(roomNum);\n                setCheckInDateToBook(dateToString(checkInDate));\n                setCheckOutDateToBook(dateToString(checkOutDate));\n            } catch (error) {\n                console.error('Error:', error);\n            }\n            setDisableAvailability(false);\n        }\n        if (!availability) {\n            setAvailability(true);\n        }\n    }\n\n    function getRoom(typeID: number, roomData: AvailableRoom[]): AvailableRoom {\n        for (let i = 0; i < roomData.length; i++) {\n            if (roomData[i].type_id === typeID) {\n                return roomData[i];\n            }\n        }\n        return {\n            type_id: -1,\n            occupancy: -1\n        }\n    }\n\n    function setNumberOfPeople(num: number) {\n        if (num > 0) {\n            setNumPeople(num);\n            setAvailability(false);\n        }\n    }\n\n    function setCheckOut(date: MaterialUiPickersDate) {\n        if (date !== null && checkInDate !== null) {\n            if (date.getTime() <= checkInDate.getTime()) {\n                const checkIn: MaterialUiPickersDate = new Date();\n                checkIn.setMonth(date.getMonth())\n                checkIn.setDate(date.getDate() - 1)\n                setCheckInDate(checkIn);\n            }\n            setAvailability(false);\n            setCheckOutDate(date);\n        }\n    }\n\n    function setCheckIn(date: MaterialUiPickersDate) {\n        if (date !== null && checkOutDate !== null) {\n            if (date.getTime() >= checkOutDate.getTime()) {\n                const checkOut: MaterialUiPickersDate = new Date();\n                checkOut.setMonth(date.getMonth())\n                checkOut.setDate(date.getDate() + 1)\n                setCheckOutDate(checkOut);\n            }\n            setAvailability(false);\n            setCheckInDate(date);\n        }\n    }\n\n    function dateToString(date: Date): string {\n        let year: string = date.getFullYear().toString();\n        let month: string = '' + (date.getMonth() + 1);\n        let day: string = '' + date.getDate();\n\n        if (month.length < 2) {\n            month = '0' + month;\n        }\n        if (day.length < 2) {\n            day = '0' + day;\n        }\n        return year + '-' + month + '-' + day;\n    }\n\n    function getRoomAvailabilityMessage(numAvailable: number, total: number): string {\n        return numAvailable + '/' + total + ' rooms available';\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>{location.state.brandName}</Typography>\n            <Typography className={classes.centreTitleNoSpace}>{location.state.address}</Typography>\n            <GridList className={classes.gridParent}>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <Typography>Enter booking info to select a room:</Typography>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"check-in-dialog\"\n                            label=\"Check in date\"\n                            format=\"yyyy-MM-dd\"\n                            minDate={new Date()}\n                            value={checkInDate}\n                            onChange={(date: MaterialUiPickersDate) => setCheckIn(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"check-out-dialog\"\n                            label=\"Check out date\"\n                            format=\"yyyy-MM-dd\"\n                            minDate={tomorrow}\n                            value={checkOutDate}\n                            onChange={(date: MaterialUiPickersDate) => setCheckOut(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <TextField\n                        id=\"capacity-number\"\n                        label=\"# of people\"\n                        type=\"number\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        variant=\"outlined\"\n                        value={numPeople}\n                        onChange={e => setNumberOfPeople(parseInt(e.target.value))}\n                    />\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <Button variant=\"contained\" onClick={checkAvailability} disabled={disableAvailability}>Check\n                        Availability</Button>\n                </Grid>\n            </GridList>\n            <Typography className={classes.smallerTitle}>{numRooms} Rooms Found</Typography>\n            <div className={classes.outsideGrid}>\n                <GridList cols={1} cellHeight={190} className={classes.grid}>\n                    <div style={{height: '1em'}}/>\n                    {\n                        roomData.map((room: Room) => {\n                            return (\n                                <GridListTile key={room.type_id} cols={1}>\n                                    <BootstrapTooltip title={room.tooltip} aria-label=\"add\" placement=\"top\">\n                                        <Paper elevation={3} key={room.type_id} className={classes.brandPaper}\n                                               style={room.enabled ? {} : {\n                                                   backgroundColor: 'grey'\n                                               }}>\n                                            <div style={room.enabled ? {opacity: '1'} : {\n                                                opacity: '0.40'\n                                            }}>\n                                                <Grid container spacing={2} alignItems=\"center\">\n                                                    <Grid className={classes.hotelGrid}>\n                                                        <Typography\n                                                            className={classes.hotelTitle}>{room.title}</Typography>\n                                                        <Typography>Amenities: {room.amenities.length === 0 ? \"None\" : room.amenities.join(', ')}</Typography>\n                                                        <Typography>Max\n                                                            capacity: {room.room_capacity} adults</Typography>\n                                                        <Typography>View: {room.view}</Typography>\n                                                        <Typography>Extendable: {room.is_extendable ? \"Yes\" : \"No\"}</Typography>\n                                                    </Grid>\n                                                    <Divider orientation=\"vertical\" flexItem\n                                                             className={classes.divider}/>\n                                                    <Grid container item xs={3} alignItems=\"center\">\n                                                        <Grid container className={classes.priceDiv}>\n                                                            <Typography\n                                                                className={classes.hotelTitle}>${room.price}/night</Typography>\n                                                            <Typography>{getRoomAvailabilityMessage(room.rooms_available, room.total_number_rooms)}</Typography>\n                                                            <br/>\n                                                            <BootstrapTooltip\n                                                                title={(!availability && room.enabled) ? \"Check availability to book a room\" : \"\"}\n                                                                aria-label=\"add\" placement=\"top\">\n                                                                <div>\n                                                                    <Button variant='contained'\n                                                                            onClick={() => confirmBookRoom(room)}\n                                                                            disabled={!room.enabled || !availability}>\n                                                                        Book Room\n                                                                    </Button>\n                                                                </div>\n                                                            </BootstrapTooltip>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </div>\n                                        </Paper>\n                                    </BootstrapTooltip>\n                                </GridListTile>\n                            );\n                        })\n                    }\n                </GridList>\n            </div>\n            <ConfirmationDialog dialogOpen={dialogOpen} setDialogOpen={setDialogOpen} roomToBook={roomToBook}\n                                classes={classes} location={location} checkInDateToBook={checkInDateToBook}\n                                bookRoom={bookRoom} checkOutDateToBook={checkOutDateToBook}\n                                disableBookRoomButton={disableBookRoomButton}/>\n            <Snackbar open={alertOpen} autoHideDuration={6000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity={alertStatus}>\n                    {alertMessage}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Employee from \"./employee/Employee\";\nimport Customer from \"./customer/Customer\";\nimport {AppBar, makeStyles, Typography} from \"@material-ui/core\";\nimport Name from \"./customer/Name\";\nimport Welcome from \"./customer/Welcome\";\nimport HotelBrand from \"./customer/HotelBrand\";\nimport Hotel from \"./customer/Hotel\";\nimport Reservations from \"./customer/Reservations\";\nimport Rooms from \"./customer/Rooms\";\n\nrequire('dotenv').config()\n\nconst useTitleStyles = makeStyles(() => ({\n    title: {\n        fontSize: \"2.5em\",\n        fontWeight: \"bold\",\n        paddingLeft: \"1em\"\n    }\n}));\n\nexport function TitleBarCustomer() {\n    const classes = useTitleStyles();\n    return <AppBar position=\"static\">\n        <Typography className={classes.title}>ExpressBook Customer Portal</Typography>\n    </AppBar>\n}\n\nexport function TitleBarEmployee() {\n    const classes = useTitleStyles();\n    return <AppBar position=\"static\">\n        <Typography className={classes.title}>ExpressBook Employee Portal</Typography>\n    </AppBar>\n}\n\nReactDOM.render(\n    <>\n        <Router>\n            <Switch>\n                <Route exact path=\"/ui/employee\" component={Employee}/>\n                <Route exact path=\"/ui/customer\" component={Customer}/>\n                <Route exact path=\"/ui/customer/name\" component={Name}/>\n                <Route exact path=\"/ui/customer/welcome\" component={Welcome}/>\n                <Route exact path=\"/ui/customer/brands\" component={HotelBrand}/>\n                <Route exact path=\"/ui/customer/hotels\" component={Hotel}/>\n                <Route exact path=\"/ui/customer/reservations\" component={Reservations}/>\n                <Route exact path=\"/ui/customer/rooms\" component={Rooms}/>\n            </Switch>\n        </Router>\n    </>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}