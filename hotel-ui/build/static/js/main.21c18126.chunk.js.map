{"version":3,"sources":["customer/Customer.tsx","customer/Name.tsx","customer/Welcome.tsx","customer/HotelBrand.tsx","customer/Hotel.tsx","index.tsx","Employee.tsx"],"names":["useStyles","makeStyles","sinCentre","paddingTop","display","alignItems","justifyContent","buttonCentre","centre","centreTitle","fontWeight","fontSize","marginTop","buttonSpacing","marginLeft","marginRight","theme","root","flexWrap","backgroundColor","palette","background","paper","marginBottom","brandPaper","padding","flexDirection","hotelTitle","width","grid","boxShadow","height","divider","brandGrid","hotelGrid","require","config","useTitleStyles","title","paddingLeft","TitleBar","classes","AppBar","position","Typography","className","ReactDOM","exact","path","component","history","useHistory","useState","SIN","setSIN","disableSignIn","setDisableSignIn","sin_re","validateSIN","test","length","checkCustomer","fetch","process","then","response","status","push","customer_sin","json","catch","error","console","log","TextField","helperText","onChange","event","currentTarget","value","onKeyPress","e","key","keyPressed","id","label","variant","Button","onClick","disabled","location","useLocation","name","setName","address","setAddress","nameError","setNameError","addressError","setAddressError","disableUseButton","setDisableUseButton","a","method","headers","body","JSON","stringify","state","customer_name","customer_address","submitInfo","disableHotelButton","setDisableHotelButton","disableReservationButton","setDisableReservationButton","welcomeMessage","addressMessage","goToBrandPage","goToReservationsPage","buttonStateValues","i","buttonStates","setButtonStates","index","newStates","brand_id","brandName","GridList","cols","cellHeight","map","brand","GridListTile","Paper","elevation","Grid","container","spacing","main_office_address","email_address","phone_number","number_of_hotels","Divider","orientation","flexItem","getHotels","hotel_id","brand_name","physical_address","hotel","number_of_rooms","Rating","star_category","readOnly","document","getElementById"],"mappings":"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","file":"static/js/main.21c18126.chunk.js","sourcesContent":["import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBar} from \"../index\";\nimport {useHistory} from 'react-router-dom';\n\n\nconst useStyles = makeStyles(() => ({\n    sinCentre: {\n        paddingTop: '5em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}));\n\nexport default function Customer() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [SIN, setSIN] = useState(\"\");\n    const [disableSignIn, setDisableSignIn] = useState(false);\n    const sin_re: RegExp = /^[0-9]{3}-[0-9]{3}-[0-9]{3}$/;\n\n    function validateSIN(): boolean {\n        return !sin_re.test(SIN) && SIN.length !== 0;\n    }\n\n    function keyPressed(e: React.KeyboardEvent<HTMLDivElement>) {\n        if (e.key === 'Enter' && sin_re.test(SIN)) {\n            checkCustomer();\n        }\n    }\n\n    function checkCustomer() {\n        setDisableSignIn(true);\n        fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + SIN)\n            .then(response => {\n                if (response.status === 404) {\n                    history.push('/ui/customer/name', {customer_sin: SIN})\n                } else {\n                    response.json().then(response => {\n                        history.push('/ui/customer/welcome', response)\n                    })\n                }\n            }).catch(error => {\n                console.log('Error:', error);\n                setDisableSignIn(false);\n            }\n        )\n    }\n\n    return (\n        <>\n            <TitleBar/>\n            <div className={classes.sinCentre}>\n                <Typography>To begin searching destinations, enter your social insurance number:</Typography>\n            </div>\n            <div className={classes.sinCentre}>\n                <TextField error={validateSIN()} helperText={validateSIN() ? \"SIN must have format XXX-XXX-XXX\" : \"\"}\n                           onChange={event => setSIN(event.currentTarget.value)}\n                           onKeyPress={e => keyPressed(e)}\n                           id=\"outlined-basic\" label=\"Social Insurance Number\" variant=\"outlined\" value={SIN}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => checkCustomer()}\n                        disabled={!sin_re.test(SIN) || disableSignIn}>Sign In</Button>\n            </div>\n        </>\n    )\n}","import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBar} from \"../index\";\nimport {useHistory, useLocation} from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '5em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}));\n\nexport default function Name() {\n    const classes = useStyles();\n    const location = useLocation<{ customer_sin: string }>();\n    const history = useHistory();\n    const [name, setName] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [nameError, setNameError] = useState(false)\n    const [addressError, setAddressError] = useState(false)\n    const [disableUseButton, setDisableUseButton] = useState(false)\n\n    async function submitInfo() {\n        if (name.length === 0 && address.length === 0) {\n            setNameError(true);\n            setAddressError(true)\n        } else if (name.length !== 0 && address.length === 0) {\n            setNameError(false);\n            setAddressError(true)\n        } else if (name.length === 0 && address.length !== 0) {\n            setNameError(true);\n            setAddressError(false)\n        } else {\n            setDisableUseButton(true);\n            try {\n                let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers\", {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        customer_sin: location.state.customer_sin,\n                        customer_name: name,\n                        customer_address: address\n                    })\n                })\n                if (response.status === 201) {\n                    history.push('/ui/customer/welcome', {\n                        customer_sin: location.state.customer_sin,\n                        customer_name: name,\n                        customer_address: address\n                    })\n                }\n            } catch(error) {\n                console.error('Error:', error);\n                setDisableUseButton(false);\n            }\n        }\n    }\n\n    return (\n        <>\n            <TitleBar/>\n            <div className={classes.centre}>\n                <Typography>Welcome to ExpressBook. Please provide some information about yourself:</Typography>\n            </div>\n            <div className={classes.centre}>\n                <TextField label=\"Full Name\" variant=\"outlined\" value={name} error={nameError}\n                           helperText={nameError ? \"Must provide name\" : \"\"}\n                           onChange={event => setName(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.centre}>\n                <TextField label=\"Address\" variant=\"outlined\" value={address} error={addressError}\n                           helperText={addressError ? \"Must provide address\" : \"\"}\n                           onChange={event => setAddress(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => submitInfo()} disabled={disableUseButton}>Sign In</Button>\n            </div>\n        </>\n    )\n}","import {Button, makeStyles, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBar} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: '2em'\n    },\n    buttonSpacing: {\n        marginLeft: '1.5em',\n        marginRight: '1.5em'\n    }\n}));\n\nexport default function Welcome() {\n    const classes = useStyles();\n    const location = useLocation<{ customer_sin: string, customer_name: string, customer_address: string }>();\n    const history = useHistory();\n    const [disableHotelButton, setDisableHotelButton] = useState(false);\n    const [disableReservationButton, setDisableReservationButton] = useState(false);\n\n    const welcomeMessage = \"Welcome, \" + location.state.customer_name;\n    const addressMessage = \"Your address: \" + location.state.customer_address;\n\n    async function goToBrandPage() {\n        setDisableHotelButton(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/brands\");\n            if (response.status !== 200) {\n                setDisableHotelButton(false);\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/customer/brands', {customer_sin: location.state.customer_sin, response: response});\n        } catch (error) {\n            console.error('Error:', error);\n            setDisableHotelButton(false);\n        }\n    }\n\n    async function goToReservationsPage() {\n        setDisableReservationButton(true);\n        history.push('/ui/customer/reservations', {customer_sin: location.state.customer_sin});\n    }\n\n    return (\n        <>\n            <TitleBar/>\n            <Typography className={classes.centreTitle}>{welcomeMessage}</Typography>\n            <Typography className={classes.centre}>{addressMessage}</Typography>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" className={classes.buttonSpacing} onClick={() => goToBrandPage()}\n                        disabled={disableHotelButton}>Find A Hotel</Button>\n                <Button variant=\"contained\" onClick={() => goToReservationsPage()} disabled={disableReservationButton}>My\n                    Reservations</Button>\n            </div>\n        </>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBar} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em',\n        width: '100%'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '5em'\n    },\n    brandGrid: {\n        width: '80%'\n    }\n}));\n\nexport default function HotelBrand() {\n    const classes = useStyles();\n    const location = useLocation<{ customer_sin: string, response: any }>();\n    const history = useHistory();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n\n    async function getHotels(index: number) {\n        let newStates = [...buttonStates]\n        newStates[index] = true;\n        setButtonStates(newStates);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/brands/\" + location.state.response[index].brand_id + \"/hotels\");\n            if (response.status !== 200) {\n                let newStates = [...buttonStates]\n                newStates[index] = false;\n                setButtonStates(newStates);\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/customer/hotels', {\n                customer_sin: location.state.customer_sin,\n                response: response,\n                brandName: location.state.response[index].name\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[index] = false;\n            setButtonStates(newStates);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBar/>\n            <Typography className={classes.centreTitle}>Select a hotel brand to view hotels:</Typography>\n            <GridList cols={1} cellHeight={200} className={classes.grid}>\n                {\n                    location.state.response.map((brand: {\n                        brand_id: number;\n                        name: string;\n                        main_office_address: string;\n                        email_address: string;\n                        phone_number: string;\n                        number_of_hotels: number;\n                    }, index: number) => {\n                        return (\n                            <GridListTile key={brand.brand_id} cols={1}>\n                                <Paper elevation={3} key={brand.brand_id} className={classes.brandPaper}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid className={classes.brandGrid}>\n                                            <Typography className={classes.hotelTitle}>{brand.name}</Typography>\n                                            <Typography>Headquarters Address: {brand.main_office_address}</Typography>\n                                            <Typography>Email: {brand.email_address}</Typography>\n                                            <Typography>Phone: {brand.phone_number}</Typography>\n                                            <Typography>Number of hotels: {brand.number_of_hotels}</Typography>\n                                        </Grid>\n                                        <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                        <Grid>\n                                            <Button variant='contained' onClick={() => getHotels(index)}\n                                                    disabled={buttonStates[index]}>Select</Button>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </GridListTile>\n                        );\n                    })\n                }\n            </GridList>\n        </div>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBar} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {Rating} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em',\n        width: '100%'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '5em'\n    },\n    hotelGrid: {\n        width: '80%'\n    }\n}));\n\nexport default function Hotel() {\n    const classes = useStyles();\n    const location = useLocation<{\n        customer_sin: string,\n        response: any,\n        brandName: string\n    }>();\n    const history = useHistory();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n\n    async function getHotels(index: number) {\n        let newStates = [...buttonStates]\n        newStates[index] = true;\n        setButtonStates(newStates);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.response[index].hotel_id + \"/rooms\");\n            if (response.status !== 200) {\n                let newStates = [...buttonStates]\n                newStates[index] = false;\n                setButtonStates(newStates);\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/customer/rooms', {\n                customer_sin: location.state.customer_sin,\n                response: response,\n                brandName: location.state.response[index].brand_name,\n                address: location.state.response[index].physical_address\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[index] = false;\n            setButtonStates(newStates);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBar/>\n            <Typography className={classes.centreTitle}>{location.state.brandName} Hotels</Typography>\n            <GridList cols={1} cellHeight={200} className={classes.grid}>\n                {\n                    location.state.response.map((hotel: {\n                        physical_address: string;\n                        email_address: string;\n                        phone_number: string;\n                        number_of_rooms: number;\n                        hotel_id: number;\n                        star_category: number;\n                    }, index: number) => {\n                        return (\n                            <GridListTile key={hotel.hotel_id} cols={1}>\n                                <Paper elevation={3} key={hotel.hotel_id} className={classes.brandPaper}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid className={classes.hotelGrid}>\n                                            <Typography\n                                                className={classes.hotelTitle}>{hotel.physical_address}</Typography>\n                                            <Typography>Email: {hotel.email_address}</Typography>\n                                            <Typography>Phone: {hotel.phone_number}</Typography>\n                                            <Typography>Number of rooms: {hotel.number_of_rooms}</Typography>\n                                        </Grid>\n                                        <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                        <Grid>\n                                            <div>\n                                                <Rating value={hotel.star_category} readOnly/>\n                                                <br/><br/>\n                                                <Button variant='contained' onClick={() => getHotels(index)}\n                                                        disabled={buttonStates[index]}>View Details</Button>\n                                            </div>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </GridListTile>\n                        );\n                    })\n                }\n            </GridList>\n        </div>\n    )\n}","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Employee from \"./Employee\";\nimport Customer from \"./customer/Customer\";\nimport {AppBar, makeStyles, Typography} from \"@material-ui/core\";\nimport Name from \"./customer/Name\";\nimport Welcome from \"./customer/Welcome\";\nimport HotelBrand from \"./customer/HotelBrand\";\nimport Hotel from \"./customer/Hotel\";\n\nrequire('dotenv').config()\n\nconst useTitleStyles = makeStyles(() => ({\n    title: {\n        fontSize: \"2.5em\",\n        fontWeight: \"bold\",\n        paddingLeft: \"1em\"\n    }\n}));\n\nexport function TitleBar() {\n    const classes = useTitleStyles();\n    return <AppBar position=\"static\">\n        <Typography className={classes.title}>ExpressBook Customer Portal</Typography>\n    </AppBar>\n}\n\nReactDOM.render(\n    <>\n        <Router>\n            <Switch>\n                <Route exact path=\"/ui/employee\" component={Employee}/>\n                <Route exact path=\"/ui/customer\" component={Customer}/>\n                <Route exact path=\"/ui/customer/name\" component={Name}/>\n                <Route exact path=\"/ui/customer/welcome\" component={Welcome}/>\n                <Route exact path=\"/ui/customer/brands\" component={HotelBrand}/>\n                <Route exact path=\"/ui/customer/hotels\" component={Hotel}/>\n            </Switch>\n        </Router>\n    </>,\n    document.getElementById('root')\n);\n","export default function Employee() {\n    return (\n        <>\n            Employee page\n        </>\n    )\n}"],"sourceRoot":""}