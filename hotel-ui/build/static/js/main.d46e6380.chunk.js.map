{"version":3,"sources":["customer/Customer.tsx","customer/Name.tsx","customer/Welcome.tsx","customer/HotelBrand.tsx","customer/Hotel.tsx","customer/Reservations.tsx","customer/Rooms.tsx","index.tsx","Employee.tsx"],"names":["useStyles","makeStyles","sinCentre","paddingTop","display","alignItems","justifyContent","buttonCentre","centreTitle","fontWeight","fontSize","width","centre","marginTop","buttonSpacing","marginLeft","marginRight","theme","root","flexWrap","backgroundColor","palette","background","paper","marginBottom","brandPaper","padding","flexDirection","hotelTitle","grid","boxShadow","height","divider","brandGrid","priceDiv","hotelGrid","radioGroup","centreTitleNoSpace","smallerTitle","outsideGrid","dateGrid","require","config","useTitleStyles","title","paddingLeft","TitleBar","classes","AppBar","position","Typography","className","ReactDOM","exact","path","component","history","useHistory","useState","SIN","setSIN","disableSignIn","setDisableSignIn","sin_re","validateSIN","test","length","checkCustomer","fetch","process","then","response","status","push","customer_sin","json","catch","error","console","log","TextField","helperText","onChange","event","currentTarget","value","onKeyPress","e","key","keyPressed","id","label","variant","Button","onClick","disabled","location","useLocation","name","setName","address","setAddress","nameError","setNameError","addressError","setAddressError","disableUseButton","setDisableUseButton","a","method","headers","body","JSON","stringify","state","customer_name","customer_address","submitInfo","disableHotelButton","setDisableHotelButton","disableReservationButton","setDisableReservationButton","welcomeMessage","addressMessage","goToBrandPage","goToReservationsPage","buttonStateValues","i","buttonStates","setButtonStates","index","newStates","brand_id","brandName","GridList","cols","cellHeight","map","brand","GridListTile","Paper","elevation","Grid","container","spacing","main_office_address","email_address","phone_number","number_of_hotels","Divider","orientation","flexItem","item","xs","getHotels","hotel_id","physical_address","hotel","number_of_rooms","Rating","star_category","readOnly","sort","r1","r2","check_in_day","ongoing","upcoming","past","all","booking_id","forEach","res","radioState","setRadioState","alertOpen","setAlertOpen","alertMessage","setAlertMessage","alertStatus","setAlertStatus","bookingIDs","setBookingIDs","openAlert","message","closeAlert","patchReservation","action","bookingID","reservation","bookingIDToReservation","splice","indexOf","setReservationIndices","ReservationEditButton","props","date_of_registration","check_out_day","is_extendable","amenities","view","price","GenerateReservations","reservations","checkIn","Date","replace","checkOut","totalPrice","Math","round","abs","parseFloat","toFixed","join","RadioGroup","parseInt","target","setReservationRadioState","row","FormControlLabel","control","Radio","Snackbar","open","autoHideDuration","onClose","Alert","severity","checkInDate","setCheckInDate","tomorrow","setDate","getDate","checkOutDate","setCheckOutDate","numPeople","setNumPeople","utils","DateFnsUtils","margin","format","minDate","date","setCheckIn","KeyboardButtonProps","setCheckOut","type","InputLabelProps","shrink","num","room","room_capacity","type_id","document","getElementById"],"mappings":"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","file":"static/js/main.d46e6380.chunk.js","sourcesContent":["import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBar} from \"../index\";\nimport {useHistory} from 'react-router-dom';\n\n\nconst useStyles = makeStyles(() => ({\n    sinCentre: {\n        paddingTop: '3em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    }\n}));\n\nexport default function Customer() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [SIN, setSIN] = useState(\"\");\n    const [disableSignIn, setDisableSignIn] = useState(false);\n    const sin_re: RegExp = /^[0-9]{3}-[0-9]{3}-[0-9]{3}$/;\n\n    function validateSIN(): boolean {\n        return !sin_re.test(SIN) && SIN.length !== 0;\n    }\n\n    function keyPressed(e: React.KeyboardEvent<HTMLDivElement>) {\n        if (e.key === 'Enter' && sin_re.test(SIN)) {\n            checkCustomer();\n        }\n    }\n\n    function checkCustomer() {\n        setDisableSignIn(true);\n        fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + SIN)\n            .then(response => {\n                if (response.status === 404) {\n                    history.push('/ui/customer/name', {customer_sin: SIN})\n                } else {\n                    response.json().then(response => {\n                        history.push('/ui/customer/welcome', response)\n                    })\n                }\n            }).catch(error => {\n                console.log('Error:', error);\n                setDisableSignIn(false);\n            }\n        )\n    }\n\n    return (\n        <>\n            <TitleBar/>\n            <Typography className={classes.centreTitle}>Sign In</Typography>\n            <div className={classes.sinCentre}>\n                <Typography>To begin searching destinations, enter your social insurance number:</Typography>\n            </div>\n            <div className={classes.sinCentre}>\n                <TextField error={validateSIN()} helperText={validateSIN() ? \"SIN must have format XXX-XXX-XXX\" : \"\"}\n                           onChange={event => setSIN(event.currentTarget.value)}\n                           onKeyPress={e => keyPressed(e)}\n                           id=\"outlined-basic\" label=\"Social Insurance Number\" variant=\"outlined\" value={SIN}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => checkCustomer()}\n                        disabled={!sin_re.test(SIN) || disableSignIn}>Sign In</Button>\n            </div>\n        </>\n    )\n}","import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBar} from \"../index\";\nimport {useHistory, useLocation} from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '5em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}));\n\nexport default function Name() {\n    const classes = useStyles();\n    const location = useLocation<{ customer_sin: string }>();\n    const history = useHistory();\n    const [name, setName] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [nameError, setNameError] = useState(false)\n    const [addressError, setAddressError] = useState(false)\n    const [disableUseButton, setDisableUseButton] = useState(false)\n\n    async function submitInfo() {\n        if (name.length === 0 && address.length === 0) {\n            setNameError(true);\n            setAddressError(true)\n        } else if (name.length !== 0 && address.length === 0) {\n            setNameError(false);\n            setAddressError(true)\n        } else if (name.length === 0 && address.length !== 0) {\n            setNameError(true);\n            setAddressError(false)\n        } else {\n            setDisableUseButton(true);\n            try {\n                let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers\", {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        customer_sin: location.state.customer_sin,\n                        customer_name: name,\n                        customer_address: address\n                    })\n                })\n                if (response.status === 201) {\n                    history.push('/ui/customer/welcome', {\n                        customer_sin: location.state.customer_sin,\n                        customer_name: name,\n                        customer_address: address\n                    })\n                }\n            } catch(error) {\n                console.error('Error:', error);\n                setDisableUseButton(false);\n            }\n        }\n    }\n\n    return (\n        <>\n            <TitleBar/>\n            <div className={classes.centre}>\n                <Typography>Welcome to ExpressBook. Please provide some information about yourself:</Typography>\n            </div>\n            <div className={classes.centre}>\n                <TextField label=\"Full Name\" variant=\"outlined\" value={name} error={nameError}\n                           helperText={nameError ? \"Must provide name\" : \"\"}\n                           onChange={event => setName(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.centre}>\n                <TextField label=\"Address\" variant=\"outlined\" value={address} error={addressError}\n                           helperText={addressError ? \"Must provide address\" : \"\"}\n                           onChange={event => setAddress(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => submitInfo()} disabled={disableUseButton}>Sign In</Button>\n            </div>\n        </>\n    )\n}","import {Button, makeStyles, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBar} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: '2em'\n    },\n    buttonSpacing: {\n        marginLeft: '1.5em',\n        marginRight: '1.5em'\n    }\n}));\n\nexport default function Welcome() {\n    const classes = useStyles();\n    const location = useLocation<{ customer_sin: string, customer_name: string, customer_address: string }>();\n    const history = useHistory();\n    const [disableHotelButton, setDisableHotelButton] = useState(false);\n    const [disableReservationButton, setDisableReservationButton] = useState(false);\n\n    const welcomeMessage = \"Welcome, \" + location.state.customer_name;\n    const addressMessage = \"Your address: \" + location.state.customer_address;\n\n    async function goToBrandPage() {\n        setDisableHotelButton(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/brands\");\n            if (response.status !== 200) {\n                setDisableHotelButton(false);\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/customer/brands', {customer_sin: location.state.customer_sin, response: response});\n        } catch (error) {\n            console.error('Error:', error);\n            setDisableHotelButton(false);\n        }\n    }\n\n    async function goToReservationsPage() {\n        setDisableReservationButton(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + location.state.customer_sin + \"/reservations\");\n            if (response.status !== 200) {\n                setDisableReservationButton(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/customer/reservations', {\n                customer_name: location.state.customer_name,\n                customer_sin: location.state.customer_sin,\n                response: response\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            setDisableReservationButton(false);\n        }\n    }\n\n    return (\n        <>\n            <TitleBar/>\n            <Typography className={classes.centreTitle}>{welcomeMessage}</Typography>\n            <Typography className={classes.centre}>{addressMessage}</Typography>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" className={classes.buttonSpacing} onClick={() => goToBrandPage()}\n                        disabled={disableHotelButton}>Find A Hotel</Button>\n                <Button variant=\"contained\" onClick={() => goToReservationsPage()} disabled={disableReservationButton}>My\n                    Reservations</Button>\n            </div>\n        </>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBar} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em',\n        width: '100%'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    brandGrid: {\n        width: '80%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    }\n}));\n\nexport default function HotelBrand() {\n    const classes = useStyles();\n    const location = useLocation<{ customer_sin: string, response: any }>();\n    const history = useHistory();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n\n    async function getHotels(index: number) {\n        let newStates = [...buttonStates]\n        newStates[index] = true;\n        setButtonStates(newStates);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/brands/\" + location.state.response[index].brand_id + \"/hotels\");\n            if (response.status !== 200) {\n                let newStates = [...buttonStates]\n                newStates[index] = false;\n                setButtonStates(newStates);\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/customer/hotels', {\n                customer_sin: location.state.customer_sin,\n                response: response,\n                brandName: location.state.response[index].name\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[index] = false;\n            setButtonStates(newStates);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBar/>\n            <Typography className={classes.centreTitle}>Select a hotel brand to view hotels:</Typography>\n            <GridList cols={1} cellHeight={200} className={classes.grid}>\n                {\n                    location.state.response.map((brand: {\n                        brand_id: number;\n                        name: string;\n                        main_office_address: string;\n                        email_address: string;\n                        phone_number: string;\n                        number_of_hotels: number;\n                    }, index: number) => {\n                        return (\n                            <GridListTile key={brand.brand_id} cols={1}>\n                                <Paper elevation={3} key={brand.brand_id} className={classes.brandPaper}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid className={classes.brandGrid}>\n                                            <Typography className={classes.hotelTitle}>{brand.name}</Typography>\n                                            <Typography>Headquarters Address: {brand.main_office_address}</Typography>\n                                            <Typography>Email: {brand.email_address}</Typography>\n                                            <Typography>Phone: {brand.phone_number}</Typography>\n                                            <Typography>Number of hotels: {brand.number_of_hotels}</Typography>\n                                        </Grid>\n                                        <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                        <Grid item xs={2}>\n                                            <Grid className={classes.priceDiv}>\n                                                <Button variant='contained' onClick={() => getHotels(index)}\n                                                        disabled={buttonStates[index]}>Select</Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </GridListTile>\n                        );\n                    })\n                }\n            </GridList>\n        </div>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBar} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {Rating} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em',\n        width: '100%'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    hotelGrid: {\n        width: '80%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n\n    }\n}));\n\nexport default function Hotel() {\n    const classes = useStyles();\n    const location = useLocation<{\n        customer_sin: string,\n        response: any,\n        brandName: string\n    }>();\n    const history = useHistory();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n\n    async function getHotels(index: number) {\n        let newStates = [...buttonStates]\n        newStates[index] = true;\n        setButtonStates(newStates);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.response[index].hotel_id + \"/rooms\");\n            if (response.status !== 200) {\n                let newStates = [...buttonStates]\n                newStates[index] = false;\n                setButtonStates(newStates);\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/customer/rooms', {\n                customer_sin: location.state.customer_sin,\n                response: response,\n                brandName: location.state.brandName,\n                address: location.state.response[index].physical_address\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[index] = false;\n            setButtonStates(newStates);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBar/>\n            <Typography className={classes.centreTitle}>{location.state.brandName} Hotels</Typography>\n            <GridList cols={1} cellHeight={175} className={classes.grid}>\n                {\n                    location.state.response.map((hotel: {\n                        physical_address: string;\n                        email_address: string;\n                        phone_number: string;\n                        number_of_rooms: number;\n                        hotel_id: number;\n                        star_category: number;\n                    }, index: number) => {\n                        return (\n                            <GridListTile key={hotel.hotel_id} cols={1}>\n                                <Paper elevation={3} key={hotel.hotel_id} className={classes.brandPaper}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid className={classes.hotelGrid}>\n                                            <Typography\n                                                className={classes.hotelTitle}>{hotel.physical_address}</Typography>\n                                            <Typography>Email: {hotel.email_address}</Typography>\n                                            <Typography>Phone: {hotel.phone_number}</Typography>\n                                            <Typography>Number of rooms: {hotel.number_of_rooms}</Typography>\n                                        </Grid>\n                                        <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                        <Grid item xs={2}>\n                                            <Grid className={classes.priceDiv}>\n                                                <Rating value={hotel.star_category} readOnly/>\n                                                <br/><br/>\n                                                <Button variant='contained' onClick={() => getHotels(index)}\n                                                        disabled={buttonStates[index]}>View Details</Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </GridListTile>\n                        );\n                    })\n                }\n            </GridList>\n        </div>\n    )\n}","import {\n    Button,\n    Divider, FormControlLabel,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper, Radio, RadioGroup, Snackbar,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBar} from \"../index\";\nimport {useLocation} from \"react-router-dom\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    hotelGrid: {\n        width: '70%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    radioGroup: {\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em'\n    }\n}));\n\ninterface Reservation {\n    booking_id: number;\n    physical_address: string;\n    date_of_registration: string;\n    check_in_day: string;\n    check_out_day: string;\n    status: string;\n    title: string;\n    is_extendable: boolean;\n    amenities: string[];\n    view: string;\n    price: string;\n}\n\ntype Severity = \"error\" | \"success\" | \"info\" | \"warning\" | undefined;\n\nexport default function Reservations() {\n    const classes = useStyles();\n    const location = useLocation<{\n        customer_name: string;\n        customer_sin: string,\n        response: Reservation[]\n    }>();\n\n    location.state.response.sort((r1: Reservation, r2: Reservation) => (r1.check_in_day > r2.check_in_day) ? 1 : -1);\n    const ongoing: number[] = [];\n    const upcoming: number[] = [];\n    const past: number[] = [];\n    const all: number[] = [];\n\n    for (let i = 0; i < location.state.response.length; i++) {\n        all.push(location.state.response[i].booking_id);\n    }\n    location.state.response.forEach((res: Reservation, index: number) => {\n        if (res.status === 'Renting') {\n            ongoing.push(location.state.response[index].booking_id);\n        } else if (res.status === 'Booked') {\n            upcoming.push(location.state.response[index].booking_id);\n        } else {\n            past.push(location.state.response[index].booking_id);\n        }\n    });\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n    const [radioState, setRadioState] = useState(0);\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertStatus, setAlertStatus]: [Severity, any] = useState(\"success\");\n    const [bookingIDs, setBookingIDs]: [number[], any] = useState(all);\n\n    function openAlert(message: string, status: string) {\n        setAlertMessage(message);\n        setAlertStatus(status);\n        setAlertOpen(true);\n    }\n\n    function closeAlert() {\n        setAlertOpen(false);\n    }\n\n    async function patchReservation(action: string, bookingID: number) {\n        let newStates = [...buttonStates]\n        const reservation = bookingIDToReservation(bookingID);\n        newStates[reservation.index] = true;\n        setButtonStates(newStates);\n\n        try {\n            let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + location.state.customer_sin + \"/reservations/\" + reservation.reservation.booking_id, {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    status: action\n                })\n            })\n            if (response.status === 204) {\n                if (action === 'Archived') {\n                    ongoing.splice(ongoing.indexOf(bookingID), 1);\n                    reservation.reservation.status = 'Archived';\n                    past.push(bookingID)\n                    setReservationIndices(radioState);\n                    openAlert('Successfully checked out of hotel', 'success');\n\n                } else {\n                    upcoming.splice(upcoming.indexOf(bookingID), 1);\n                    reservation.reservation.status = 'Cancelled';\n                    past.push(bookingID)\n                    setReservationIndices(radioState);\n                    openAlert('Successfully cancelled room booking', 'success')\n                }\n            } else {\n                let newStates = [...buttonStates]\n                newStates[reservation.index] = false;\n                setButtonStates(newStates);\n                openAlert('Error: Unable to modify reservation', 'error')\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[reservation.index] = false;\n            setButtonStates(newStates);\n            openAlert('Error: Unable to modify reservation', 'error')\n        }\n    }\n\n    function ReservationEditButton(props: { bookingID: number; }) {\n        const res = bookingIDToReservation(props.bookingID);\n        if (res.reservation.status === 'Renting') {\n            return <Button variant='contained' onClick={() => patchReservation('Archived', props.bookingID)}\n                           disabled={buttonStates[res.index]}>Check Out</Button>\n        }\n        if (res.reservation.status === 'Booked') {\n            return <Button variant='contained' onClick={() => patchReservation('Cancelled', props.bookingID)}\n                           disabled={buttonStates[res.index]}>Cancel</Button>\n        }\n        return <></>\n    }\n\n    function setReservationRadioState(event: React.ChangeEvent<HTMLInputElement>) {\n        const value = parseInt(event.target.value);\n        setRadioState(value);\n        setReservationIndices(value);\n    }\n\n    function setReservationIndices(value: number) {\n        if (value === 0) {\n            setBookingIDs([...all]);\n        } else if (value === 1) {\n            setBookingIDs([...ongoing]);\n        } else if (value === 2) {\n            setBookingIDs([...upcoming]);\n        } else {\n            setBookingIDs([...past]);\n        }\n    }\n\n    function bookingIDToReservation(bookingID: number): { reservation: Reservation, index: number } {\n        for (let i = 0; i < location.state.response.length; i++) {\n            const reservation = location.state.response[i];\n            if (reservation.booking_id === bookingID) {\n                return {reservation: reservation, index: i};\n            }\n        }\n        return {\n            reservation: {\n                booking_id: -1,\n                physical_address: '',\n                date_of_registration: '',\n                check_in_day: '',\n                check_out_day: '',\n                status: '',\n                title: '',\n                is_extendable: false,\n                amenities: [],\n                view: '',\n                price: ''\n            },\n            index: -1\n        }\n    }\n\n\n    function GenerateReservations(props: { reservations: number[] }) {\n        return <GridList cols={1} cellHeight={220} className={classes.grid}>\n            {\n                props.reservations.map((bookingID: number) => {\n                    const res = bookingIDToReservation(bookingID);\n                    const reservation = res.reservation;\n                    const checkIn: Date = new Date(reservation.check_in_day.replace('-', '/'))\n                    const checkOut: Date = new Date(reservation.check_out_day.replace('-', '/'))\n                    const days: number = Math.round(Math.abs(+checkIn - +checkOut) / 24 / 60 / 60 / 1000)\n                    const totalPrice: string = (days * parseFloat(reservation.price)).toFixed(2)\n\n                    if (reservation.amenities.length === 0) {\n                        reservation.amenities.push(\"None\")\n                    }\n\n                    return (\n                        <GridListTile key={reservation.booking_id} cols={1}>\n                            <Paper elevation={3} key={reservation.booking_id} className={classes.brandPaper}>\n                                <Grid container spacing={2} alignItems=\"center\">\n                                    <Grid className={classes.hotelGrid}>\n                                        <Typography\n                                            className={classes.hotelTitle}>Room: {reservation.title} | {reservation.check_in_day} to {reservation.check_out_day}\n                                        </Typography>\n                                        <Typography>{reservation.physical_address}</Typography>\n                                        <Typography>Booking status: {reservation.status}</Typography>\n                                        <Typography>Amenities: {reservation.amenities.join(', ')}</Typography>\n                                        <Typography>View: {reservation.view}</Typography>\n                                        <Typography>\n                                            Extendable: {reservation.is_extendable ? \"Yes\" : \"No\"}\n                                        </Typography>\n                                    </Grid>\n                                    <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                    <Grid item xs={3}>\n                                        <Grid className={classes.priceDiv}>\n                                            <Typography>Booked on {reservation.date_of_registration}</Typography>\n                                            <Typography className={classes.hotelTitle}>Total price:</Typography>\n                                            <Typography className={classes.hotelTitle}>${totalPrice}</Typography>\n                                            <br/>\n                                            <ReservationEditButton bookingID={bookingID}/>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </GridListTile>\n                    );\n                })\n            }\n        </GridList>\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBar/>\n            <Typography className={classes.centreTitle}>My Reservations - {location.state.customer_name}</Typography>\n            <RadioGroup className={classes.radioGroup} value={radioState} onChange={e => setReservationRadioState(e)}\n                        row>\n                <Typography>Filter by:&nbsp;&nbsp;&nbsp;</Typography>\n                <FormControlLabel value={0} control={<Radio/>} label=\"All Reservations\"/>\n                <FormControlLabel value={1} control={<Radio/>} label=\"Ongoing\"/>\n                <FormControlLabel value={2} control={<Radio/>} label=\"Upcoming\"/>\n                <FormControlLabel value={3} control={<Radio/>} label=\"Cancelled/Archived\"/>\n            </RadioGroup>\n            <GenerateReservations reservations={bookingIDs}/>\n            <Snackbar open={alertOpen} autoHideDuration={6000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity={alertStatus}>\n                    {alertMessage}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBar} from \"../index\";\nimport {useLocation} from \"react-router-dom\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {MaterialUiPickersDate} from \"@material-ui/pickers/typings/date\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '1em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    centreTitleNoSpace: {\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    smallerTitle: {\n        fontSize: '1.7em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        marginBottom: '0.5em'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em'\n    },\n    outsideGrid: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        marginBottom: '2em'\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em',\n    },\n    hotelGrid: {\n        width: '70%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n\n    },\n    dateGrid: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    }\n}));\n\ninterface Room {\n    type_id: number;\n    title: string;\n    price: string;\n    amenities: string[];\n    room_capacity: number;\n    view: string;\n    is_extendable: boolean;\n    total_number_rooms: number;\n    rooms_available: number;\n}\n\nexport default function Rooms() {\n    const classes = useStyles();\n    const location = useLocation<{\n        address: string;\n        customer_sin: string,\n        response: Room[],\n        brandName: string\n    }>();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(true)\n    }\n\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n    const [checkInDate, setCheckInDate]: [MaterialUiPickersDate, any] = useState(new Date());\n    const tomorrow: MaterialUiPickersDate = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1)\n    const [checkOutDate, setCheckOutDate]: [MaterialUiPickersDate, any] = useState(tomorrow);\n    const [numPeople, setNumPeople]: [number, any] = useState(1);\n\n    function bookRoom(index: number) {\n\n    }\n\n    function setNumberOfPeople(num: number) {\n        if (num > 0) {\n            setNumPeople(num);\n        }\n    }\n\n    function setCheckOut(date: MaterialUiPickersDate) {\n        if (date !== null && checkInDate !== null) {\n            if (date <= checkInDate) {\n                const checkIn: MaterialUiPickersDate = new Date();\n                checkIn.setDate(date.getDate() - 1)\n                setCheckInDate(checkIn);\n            }\n            setCheckOutDate(date);\n        }\n    }\n\n    function setCheckIn(date: MaterialUiPickersDate) {\n        if (date !== null && checkOutDate !== null) {\n            if (date >= checkOutDate) {\n                const checkOut: MaterialUiPickersDate = new Date();\n                checkOut.setDate(date.getDate() + 1)\n                setCheckOutDate(checkOut);\n            }\n        }\n        setCheckInDate(date);\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBar/>\n            <Typography className={classes.centreTitle}>{location.state.brandName}</Typography>\n            <Typography className={classes.centreTitleNoSpace}>{location.state.address}</Typography>\n            <GridList className={classes.dateGrid}>\n                <Grid container alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <Typography>Enter booking info to select a room:</Typography>\n                </Grid>\n                <Grid container alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"check-in-dialog\"\n                            label=\"Check in date\"\n                            format=\"yyyy-MM-dd\"\n                            minDate={new Date()}\n                            value={checkInDate}\n                            onChange={(date: MaterialUiPickersDate) => setCheckIn(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid container alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"check-out-dialog\"\n                            label=\"Check out date\"\n                            format=\"yyyy-MM-dd\"\n                            minDate={tomorrow}\n                            value={checkOutDate}\n                            onChange={(date: MaterialUiPickersDate) => setCheckOut(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid container alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <TextField\n                        id=\"capacity-number\"\n                        label=\"# of people\"\n                        type=\"number\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        variant=\"outlined\"\n                        value={numPeople}\n                        onChange={e => setNumberOfPeople(parseInt(e.target.value))}\n                    />\n                </Grid>\n                <Grid container alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <Button variant=\"contained\">Check Availability</Button>\n                </Grid>\n            </GridList>\n            <Typography className={classes.smallerTitle}>{location.state.response.length} Rooms Found</Typography>\n            <div className={classes.outsideGrid}>\n                <GridList cols={1} cellHeight={190} className={classes.grid}>\n                    {\n                        location.state.response.map((room: Room, index: number) => {\n                            return (\n                                <GridListTile key={room.type_id} cols={1}>\n                                    <Paper elevation={3} key={room.type_id} className={classes.brandPaper}>\n                                        <Grid container spacing={2} alignItems=\"center\">\n                                            <Grid className={classes.hotelGrid}>\n                                                <Typography\n                                                    className={classes.hotelTitle}>{room.title}</Typography>\n                                                <Typography>Amenities: {room.amenities.length === 0 ? \"None\" : room.amenities}</Typography>\n                                                <Typography>Max capacity: {room.room_capacity} adults</Typography>\n                                                <Typography>View: {room.view}</Typography>\n                                                <Typography>Extendable: {room.is_extendable ? \"Yes\" : \"No\"}</Typography>\n                                            </Grid>\n                                            <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                            <Grid item xs={3} alignItems=\"center\">\n                                                <Grid className={classes.priceDiv}>\n                                                    <Typography\n                                                        className={classes.hotelTitle}>${room.price}/night</Typography>\n                                                    <br/><br/>\n                                                    <Button variant='contained' onClick={() => bookRoom(index)}\n                                                            disabled={buttonStates[index]}>Book Room</Button>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Paper>\n                                </GridListTile>\n                            );\n                        })\n                    }\n                </GridList>\n            </div>\n        </div>\n    )\n}","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Employee from \"./Employee\";\nimport Customer from \"./customer/Customer\";\nimport {AppBar, makeStyles, Typography} from \"@material-ui/core\";\nimport Name from \"./customer/Name\";\nimport Welcome from \"./customer/Welcome\";\nimport HotelBrand from \"./customer/HotelBrand\";\nimport Hotel from \"./customer/Hotel\";\nimport Reservations from \"./customer/Reservations\";\nimport Rooms from \"./customer/Rooms\";\n\nrequire('dotenv').config()\n\nconst useTitleStyles = makeStyles(() => ({\n    title: {\n        fontSize: \"2.5em\",\n        fontWeight: \"bold\",\n        paddingLeft: \"1em\"\n    }\n}));\n\nexport function TitleBar() {\n    const classes = useTitleStyles();\n    return <AppBar position=\"static\">\n        <Typography className={classes.title}>ExpressBook Customer Portal</Typography>\n    </AppBar>\n}\n\nReactDOM.render(\n    <>\n        <Router>\n            <Switch>\n                <Route exact path=\"/ui/employee\" component={Employee}/>\n                <Route exact path=\"/ui/customer\" component={Customer}/>\n                <Route exact path=\"/ui/customer/name\" component={Name}/>\n                <Route exact path=\"/ui/customer/welcome\" component={Welcome}/>\n                <Route exact path=\"/ui/customer/brands\" component={HotelBrand}/>\n                <Route exact path=\"/ui/customer/hotels\" component={Hotel}/>\n                <Route exact path=\"/ui/customer/reservations\" component={Reservations}/>\n                <Route exact path=\"/ui/customer/rooms\" component={Rooms}/>\n            </Switch>\n        </Router>\n    </>,\n    document.getElementById('root')\n);\n","export default function Employee() {\n    return (\n        <>\n            Employee page\n        </>\n    )\n}"],"sourceRoot":""}