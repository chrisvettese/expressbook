{"version":3,"sources":["employee/Employee.tsx","customer/SignInCustomer.tsx","customer/Name.tsx","customer/WelcomeCustomer.tsx","customer/HotelBrand.tsx","customer/Hotel.tsx","customer/Reservations.tsx","customer/Rooms.tsx","employee/WelcomeEmployee.tsx","employee/CheckCustomer.tsx","index.tsx"],"names":["useStyles","makeStyles","sinCentre","paddingTop","display","alignItems","justifyContent","buttonCentre","centreTitle","fontWeight","fontSize","width","centre","inPaper","marginTop","buttonSpacing","marginLeft","marginRight","paperContainer","paper","padding","theme","root","flexWrap","backgroundColor","palette","background","marginBottom","brandPaper","flexDirection","hotelTitle","grid","boxShadow","height","divider","brandGrid","priceDiv","hotelGrid","radioGroup","GenerateReservations","classes","reservations","editButtonToDisable","radioState","setEditButtonToDisable","setAlertMessage","setAlertStatus","setAlertOpen","customerSIN","setReservations","GridList","cols","cellHeight","className","filter","reservation","status","map","checkIn","Date","check_in_day","replace","checkOut","check_out_day","totalPrice","Math","round","abs","parseFloat","price","toFixed","amenities","length","push","GridListTile","Paper","elevation","Grid","container","spacing","Typography","title","physical_address","join","view","is_extendable","Divider","orientation","flexItem","item","xs","date_of_registration","booking_id","ReservationEditButton","Button","variant","onClick","patchReservation","disabled","action","a","fetch","process","method","headers","body","JSON","stringify","updateReservations","openAlert","console","error","bookingID","i","message","centreTitleNoSpace","smallerTitle","outsideGrid","dateGrid","gridParent","dialogDiv","dialogHeader","dialogTitle","dialogAddress","fontStyle","useStylesBootstrap","arrow","color","common","black","tooltip","BootstrapTooltip","props","Tooltip","ConfirmationDialog","dialogOpen","setDialogOpen","roomToBook","location","checkInDateToBook","checkOutDateToBook","disableBookRoomButton","bookRoom","Dialog","onClose","aria-labelledby","open","DialogTitle","id","align","state","address","customerName","customerAddress","customerEmail","customerPhone","DialogActions","type_id","flexGrow","gridSpacing","topGrid","maxWidth","centreSubTitle","centreDiv","isCheckIn","searchSIN","filteredReservations","customer_sin","includes","index","customer_name","newReservations","splice","CheckCustomer","useLocation","response","sort","r1","r2","useState","alertOpen","alertMessage","alertStatus","setSearchSIN","dateWords","toDateString","subTitle","closeAlert","TitleBarCustomer","TextField","label","value","onChange","event","currentTarget","Snackbar","autoHideDuration","Alert","severity","require","config","useTitleStyles","paddingLeft","AppBar","position","TitleBarEmployee","ReactDOM","exact","path","component","history","useHistory","SIN","setSIN","disableSignIn","setDisableSignIn","setError","sin_re","validateSIN","test","checkEmployee","then","json","employeeSIN","employee_sin","employeeName","employee_name","employeeAddress","employee_address","salary","jobTitle","job_title","brandName","brand_name","brandID","brand_id","hotelID","hotel_id","hotelAddress","hotel_address","catch","log","helperText","onKeyPress","e","key","keyPressed","style","checkInDisabled","setCheckInDisabled","checkOutDisabled","setCheckOutDisabled","createDisabled","manageCustomerDisabled","manageEmployeeDisabled","welcomeMessage","ManagerActions","justify","checkCustomer","customer_address","customer_email","customer_phone","name","setName","setAddress","email","setEmail","phoneNumber","setPhoneNumber","nameError","setNameError","addressError","setAddressError","emailError","setEmailError","phoneError","setPhoneError","disableUseButton","setDisableUseButton","indexOf","submitInfo","disableHotelButton","setDisableHotelButton","disableReservationButton","setDisableReservationButton","goToBrandPage","goToReservationsPage","buttonStateValues","buttonStates","setButtonStates","newStates","brand","main_office_address","email_address","phone_number","number_of_hotels","getHotels","hotel","number_of_rooms","Rating","star_category","readOnly","setRadioState","RadioGroup","parseInt","target","setReservationRadioState","row","FormControlLabel","control","Radio","checkInDate","setCheckInDate","tomorrow","setDate","getDate","checkOutDate","setCheckOutDate","setCheckInDateToBook","setCheckOutDateToBook","numPeople","setNumPeople","availability","setAvailability","disableAvailability","setDisableAvailability","roomData","setRoomData","numRooms","setNumRooms","setRoomToBook","setDisableBookRoomButton","past","typeID","check_in","check_out","checkAvailability","url","dateToString","availableRooms","newRoomData","parse","roomNum","forEach","room","roomInfo","getRoom","enabled","rooms_available","total_number_rooms","occupancy","date","year","getFullYear","toString","month","getMonth","day","utils","DateFnsUtils","margin","format","minDate","getTime","setMonth","setCheckIn","KeyboardButtonProps","setCheckOut","type","InputLabelProps","shrink","num","aria-label","placement","opacity","room_capacity","numAvailable","total","confirmBookRoom","document","getElementById"],"mappings":"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","file":"static/js/main.194ab88b.chunk.js","sourcesContent":["import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarEmployee} from \"../index\";\nimport {useHistory} from 'react-router-dom';\n\n\nconst useStyles = makeStyles(() => ({\n    sinCentre: {\n        paddingTop: '3em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    }\n}));\n\ninterface GetEmployeeResponse {\n    employee_sin: string;\n    employee_name: string;\n    employee_address: string;\n    salary: string;\n    job_title: string;\n    brand_name: string;\n    brand_id: number;\n    hotel_id: number;\n    hotel_address: string;\n}\n\nexport default function Employee() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [SIN, setSIN] = useState(\"\");\n    const [disableSignIn, setDisableSignIn] = useState(false);\n    const [error, setError] = useState(\"\");\n    const sin_re: RegExp = /^[0-9]{3}-[0-9]{3}-[0-9]{3}$/;\n\n    function validateSIN(): boolean {\n        return !sin_re.test(SIN) && SIN.length !== 0;\n    }\n\n    function keyPressed(e: React.KeyboardEvent<HTMLDivElement>) {\n        if (e.key === 'Enter' && sin_re.test(SIN)) {\n            checkEmployee();\n        }\n    }\n\n    function checkEmployee() {\n        setDisableSignIn(true);\n        fetch(process.env.REACT_APP_SERVER_URL + \"/employees/\" + SIN)\n            .then(response => {\n                if (response.status === 200) {\n                    response.json().then((response: GetEmployeeResponse) => {\n                        history.push('/ui/employee/welcome', {\n                            employeeSIN: response.employee_sin,\n                            employeeName: response.employee_name,\n                            employeeAddress: response.employee_address,\n                            salary: response.salary,\n                            jobTitle: response.job_title,\n                            brandName: response.brand_name,\n                            brandID: response.brand_id,\n                            hotelID: response.hotel_id,\n                            hotelAddress: response.hotel_address\n                        })\n                    })\n                } else {\n                    setError(\"Unable to sign in. Please contact the hotel manager or database admin if you think this is a problem.\")\n                    setDisableSignIn(false);\n                }\n            }).catch(error => {\n                console.log('Error:', error);\n                setDisableSignIn(false);\n            }\n        )\n    }\n\n    return (\n        <>\n            <TitleBarEmployee/>\n            <Typography className={classes.centreTitle}>Sign In</Typography>\n            <div className={classes.sinCentre}>\n                <Typography>Please sign in to access the hotel management system:</Typography>\n            </div>\n            <div className={classes.sinCentre}>\n                <TextField error={validateSIN()} helperText={validateSIN() ? \"SIN must have format XXX-XXX-XXX\" : \"\"}\n                           onChange={event => setSIN(event.currentTarget.value)}\n                           onKeyPress={e => keyPressed(e)}\n                           id=\"outlined-basic\" label=\"Social Insurance Number\" variant=\"outlined\" value={SIN}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => checkEmployee()}\n                        disabled={!sin_re.test(SIN) || disableSignIn}>Sign In</Button>\n            </div>\n            <Typography style={{color: \"red\"}}>{error}</Typography>\n        </>\n    )\n}","import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory} from 'react-router-dom';\n\n\nconst useStyles = makeStyles(() => ({\n    sinCentre: {\n        paddingTop: '3em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    }\n}));\n\ninterface CustomerResponse {\n    customer_sin: string,\n    customer_name: string,\n    customer_address: string,\n    customer_email: string,\n    customer_phone: string\n}\n\nexport default function SignInCustomer() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [SIN, setSIN] = useState(\"\");\n    const [disableSignIn, setDisableSignIn] = useState(false);\n    const sin_re: RegExp = /^[0-9]{3}-[0-9]{3}-[0-9]{3}$/;\n\n    function validateSIN(): boolean {\n        return !sin_re.test(SIN) && SIN.length !== 0;\n    }\n\n    function keyPressed(e: React.KeyboardEvent<HTMLDivElement>) {\n        if (e.key === 'Enter' && sin_re.test(SIN)) {\n            checkCustomer();\n        }\n    }\n\n    function checkCustomer() {\n        setDisableSignIn(true);\n        fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + SIN)\n            .then(response => {\n                if (response.status === 404) {\n                    history.push('/ui/customer/name', {customerSIN: SIN})\n                } else {\n                    response.json().then((response: CustomerResponse) => {\n                        history.push('/ui/customer/welcome', {\n                            customerSIN: response.customer_sin,\n                            customerName: response.customer_name,\n                            customerAddress: response.customer_address,\n                            customerEmail: response.customer_email,\n                            customerPhone: response.customer_phone\n                        })\n                    })\n                }\n            }).catch(error => {\n                console.log('Error:', error);\n                setDisableSignIn(false);\n            }\n        )\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>Sign In</Typography>\n            <div className={classes.sinCentre}>\n                <Typography>To begin searching destinations, enter your social insurance number:</Typography>\n            </div>\n            <div className={classes.sinCentre}>\n                <TextField error={validateSIN()} helperText={validateSIN() ? \"SIN must have format XXX-XXX-XXX\" : \"\"}\n                           onChange={event => setSIN(event.currentTarget.value)}\n                           onKeyPress={e => keyPressed(e)}\n                           id=\"outlined-basic\" label=\"Social Insurance Number\" variant=\"outlined\" value={SIN}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => checkCustomer()}\n                        disabled={!sin_re.test(SIN) || disableSignIn}>Sign In</Button>\n            </div>\n        </>\n    )\n}","import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '5em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}));\n\nexport default function Name() {\n    const classes = useStyles();\n    const location = useLocation<{ customerSIN: string }>();\n    const history = useHistory();\n    const [name, setName] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [nameError, setNameError] = useState(false);\n    const [addressError, setAddressError] = useState(false);\n    const [emailError, setEmailError] = useState(false);\n    const [phoneError, setPhoneError] = useState(false);\n    const [disableUseButton, setDisableUseButton] = useState(false);\n\n    async function submitInfo() {\n        const nameError: boolean = name.length === 0;\n        const addressError: boolean = address.length === 0;\n        let emailError: boolean = email.includes(' ') || email.indexOf('@') < 1\n        if (!emailError) {\n            const index: number = email.indexOf('.', email.indexOf('@'))\n            if (index < 3 || index === email.length - 1) {\n                emailError = true;\n            }\n        }\n        const phoneError: boolean = !(/^[+]?[(]?[0-9]{3}[)]?[-\\s.]?[0-9]{3}[-\\s.]?[0-9]{4,6}$/im).test(phoneNumber);\n\n        setNameError(nameError);\n        setAddressError(addressError);\n        setEmailError(emailError);\n        setPhoneError(phoneError);\n\n        console.log(nameError +','+addressError+','+emailError+','+phoneError)\n\n        if (nameError || addressError || emailError || phoneError) {\n            return;\n        }\n\n        if (name.length === 0 && address.length === 0) {\n            setNameError(true);\n            setAddressError(true)\n        } else if (name.length !== 0 && address.length === 0) {\n            setNameError(false);\n            setAddressError(true)\n        } else if (name.length === 0 && address.length !== 0) {\n            setNameError(true);\n            setAddressError(false)\n        } else {\n            setDisableUseButton(true);\n            try {\n                let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers\", {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        customer_sin: location.state.customerSIN,\n                        customer_name: name,\n                        customer_address: address,\n                        customer_email: email,\n                        customer_phone: phoneNumber\n                    })\n                })\n                if (response.status === 201) {\n                    history.push('/ui/customer/welcome', {\n                        customerSIN: location.state.customerSIN,\n                        customerName: name,\n                        customerAddress: address,\n                        customerEmail: email,\n                        customerPhone: phoneNumber\n                    })\n                }\n            } catch(error) {\n                console.error('Error:', error);\n                setDisableUseButton(false);\n            }\n        }\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <div className={classes.centre}>\n                <Typography>Welcome to ExpressBook. Please provide some information about yourself:</Typography>\n            </div>\n            <div className={classes.centre}>\n                <TextField label=\"Full Name\" variant=\"outlined\" value={name} error={nameError}\n                           helperText={nameError ? \"Must provide name\" : \"\"}\n                           onChange={event => setName(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.centre}>\n                <TextField label=\"Address\" variant=\"outlined\" value={address} error={addressError}\n                           helperText={addressError ? \"Must provide address\" : \"\"}\n                           onChange={event => setAddress(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.centre}>\n                <TextField label=\"Email\" variant=\"outlined\" value={email} error={emailError}\n                           helperText={emailError ? \"Must provide valid email\" : \"\"}\n                           onChange={event => setEmail(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.centre}>\n                <TextField label=\"Phone Number\" variant=\"outlined\" value={phoneNumber} error={phoneError}\n                           helperText={phoneError ? \"Must provide valid phone number\" : \"\"}\n                           onChange={event => setPhoneNumber(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => submitInfo()} disabled={disableUseButton}>Sign In</Button>\n            </div>\n        </>\n    )\n}","import {Button, makeStyles, Paper, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '1.4em'\n    },\n    inPaper: {\n        display: 'flex'\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: '2em'\n    },\n    buttonSpacing: {\n        marginLeft: '1.5em',\n        marginRight: '1.5em'\n    },\n    paperContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        display: 'inline-block',\n        padding: '1em',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}));\n\nexport default function WelcomeCustomer() {\n    const classes = useStyles();\n    const location = useLocation<{ customerSIN: string, customerName: string, customerAddress: string, customerEmail: string, customerPhone: string }>();\n    const history = useHistory();\n    const [disableHotelButton, setDisableHotelButton] = useState(false);\n    const [disableReservationButton, setDisableReservationButton] = useState(false);\n\n    const welcomeMessage = \"Welcome, \" + location.state.customerName;\n\n    async function goToBrandPage() {\n        setDisableHotelButton(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/brands\");\n            if (response.status !== 200) {\n                setDisableHotelButton(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/customer/brands', {\n                customerSIN: location.state.customerSIN,\n                customerAddress: location.state.customerAddress,\n                customerName: location.state.customerName,\n                customerEmail: location.state.customerEmail,\n                customerPhone: location.state.customerPhone,\n                response: response\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            setDisableHotelButton(false);\n        }\n    }\n\n    async function goToReservationsPage() {\n        setDisableReservationButton(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + location.state.customerSIN + \"/reservations\");\n            if (response.status !== 200) {\n                setDisableReservationButton(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/customer/reservations', {\n                customerName: location.state.customerName,\n                customerSIN: location.state.customerSIN,\n                response: response\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            setDisableReservationButton(false);\n        }\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>{welcomeMessage}</Typography>\n            <Typography className={classes.centre}>Your profile:</Typography>\n            <div className={classes.paperContainer}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Typography className={classes.inPaper}>Address: {location.state.customerAddress}</Typography>\n                    <Typography className={classes.inPaper}>Email: {location.state.customerEmail}</Typography>\n                    <Typography className={classes.inPaper}>Phone number: {location.state.customerPhone}</Typography>\n                </Paper>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" className={classes.buttonSpacing} onClick={() => goToBrandPage()}\n                        disabled={disableHotelButton}>Find A Hotel</Button>\n                <Button variant=\"contained\" onClick={() => goToReservationsPage()} disabled={disableReservationButton}>My\n                    Reservations</Button>\n            </div>\n        </>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em',\n        width: '100%'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    brandGrid: {\n        width: '80%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    }\n}));\n\nexport default function HotelBrand() {\n    const classes = useStyles();\n    const location = useLocation<{\n        customerSIN: string,\n        customerName: string,\n        customerAddress: string,\n        customerEmail: string,\n        customerPhone: string,\n        response: any\n    }>();\n    const history = useHistory();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n\n    async function getHotels(index: number) {\n        let newStates = [...buttonStates]\n        newStates[index] = true;\n        setButtonStates(newStates);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/brands/\" + location.state.response[index].brand_id + \"/hotels\");\n            if (response.status !== 200) {\n                let newStates = [...buttonStates]\n                newStates[index] = false;\n                setButtonStates(newStates);\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/customer/hotels', {\n                customerSIN: location.state.customerSIN,\n                customerName: location.state.customerName,\n                customerAddress: location.state.customerAddress,\n                customerEmail: location.state.customerEmail,\n                customerPhone: location.state.customerPhone,\n                response: response,\n                brandName: location.state.response[index].name,\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[index] = false;\n            setButtonStates(newStates);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>Select a hotel brand to view hotels:</Typography>\n            <GridList cols={1} cellHeight={200} className={classes.grid}>\n                {\n                    location.state.response.map((brand: {\n                        brand_id: number;\n                        name: string;\n                        main_office_address: string;\n                        email_address: string;\n                        phone_number: string;\n                        number_of_hotels: number;\n                    }, index: number) => {\n                        return (\n                            <GridListTile key={brand.brand_id} cols={1}>\n                                <Paper elevation={3} key={brand.brand_id} className={classes.brandPaper}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid className={classes.brandGrid}>\n                                            <Typography className={classes.hotelTitle}>{brand.name}</Typography>\n                                            <Typography>Headquarters Address: {brand.main_office_address}</Typography>\n                                            <Typography>Email: {brand.email_address}</Typography>\n                                            <Typography>Phone: {brand.phone_number}</Typography>\n                                            <Typography>Number of hotels: {brand.number_of_hotels}</Typography>\n                                        </Grid>\n                                        <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                        <Grid item xs={2}>\n                                            <Grid className={classes.priceDiv}>\n                                                <Button variant='contained' onClick={() => getHotels(index)}\n                                                        disabled={buttonStates[index]}>Select</Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </GridListTile>\n                        );\n                    })\n                }\n            </GridList>\n        </div>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {Rating} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em',\n        width: '100%'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    hotelGrid: {\n        width: '80%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n\n    }\n}));\n\nexport default function Hotel() {\n    const classes = useStyles();\n    const location = useLocation<{\n        customerSIN: string,\n        customerName: string,\n        customerAddress: string\n        customerEmail: string,\n        customerPhone: string,\n        response: any,\n        brandName: string\n    }>();\n    const history = useHistory();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n\n    async function getHotels(index: number) {\n        let newStates = [...buttonStates]\n        newStates[index] = true;\n        setButtonStates(newStates);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.response[index].hotel_id + \"/rooms\");\n            if (response.status !== 200) {\n                let newStates = [...buttonStates]\n                newStates[index] = false;\n                setButtonStates(newStates);\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/customer/rooms', {\n                customerSIN: location.state.customerSIN,\n                customerName: location.state.customerName,\n                customerAddress: location.state.customerAddress,\n                customerEmail: location.state.customerEmail,\n                customerPhone: location.state.customerPhone,\n                response: response,\n                brandName: location.state.brandName,\n                address: location.state.response[index].physical_address,\n                hotelID: location.state.response[index].hotel_id\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[index] = false;\n            setButtonStates(newStates);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>{location.state.brandName} Hotels</Typography>\n            <GridList cols={1} cellHeight={175} className={classes.grid}>\n                {\n                    location.state.response.map((hotel: {\n                        physical_address: string;\n                        email_address: string;\n                        phone_number: string;\n                        number_of_rooms: number;\n                        hotel_id: number;\n                        star_category: number;\n                    }, index: number) => {\n                        return (\n                            <GridListTile key={hotel.hotel_id} cols={1}>\n                                <Paper elevation={3} key={hotel.hotel_id} className={classes.brandPaper}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid className={classes.hotelGrid}>\n                                            <Typography\n                                                className={classes.hotelTitle}>{hotel.physical_address}</Typography>\n                                            <Typography>Email: {hotel.email_address}</Typography>\n                                            <Typography>Phone: {hotel.phone_number}</Typography>\n                                            <Typography>Number of rooms: {hotel.number_of_rooms}</Typography>\n                                        </Grid>\n                                        <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                        <Grid item xs={2}>\n                                            <Grid className={classes.priceDiv}>\n                                                <Rating value={hotel.star_category} readOnly/>\n                                                <br/><br/>\n                                                <Button variant='contained' onClick={() => getHotels(index)}\n                                                        disabled={buttonStates[index]}>View Details</Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </GridListTile>\n                        );\n                    })\n                }\n            </GridList>\n        </div>\n    )\n}","import {\n    Button,\n    Divider, FormControlLabel,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper, Radio, RadioGroup, Snackbar,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useLocation} from \"react-router-dom\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    hotelGrid: {\n        width: '70%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    radioGroup: {\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em'\n    }\n}));\n\ntype Reservation = {\n    booking_id: number;\n    physical_address: string;\n    date_of_registration: string;\n    check_in_day: string;\n    check_out_day: string;\n    status: string;\n    title: string;\n    is_extendable: boolean;\n    amenities: string[];\n    view: string;\n    price: string;\n}\n\ntype Severity = \"error\" | \"success\" | \"info\" | \"warning\" | undefined;\n\nconst GenerateReservations = ({\n                                  classes,\n                                  reservations,\n                                  editButtonToDisable,\n                                  radioState,\n                                  setEditButtonToDisable,\n                                  setAlertMessage,\n                                  setAlertStatus,\n                                  setAlertOpen,\n                                  customerSIN,\n                                  setReservations\n                              }: any) => {\n\n    return <GridList cols={1} cellHeight={220} className={classes.grid}>\n        {\n            reservations.filter((reservation: Reservation) => {\n                return !((radioState === 1 && reservation.status !== 'Renting')\n                    || (radioState === 2 && reservation.status !== 'Booked')\n                    || (radioState === 3 && reservation.status !== 'Archived' && reservation.status !== 'Cancelled'))\n            }).map((reservation: Reservation) => {\n                const checkIn: Date = new Date(reservation.check_in_day.replace('-', '/'))\n                const checkOut: Date = new Date(reservation.check_out_day.replace('-', '/'))\n                const days: number = Math.round(Math.abs(+checkIn - +checkOut) / 24 / 60 / 60 / 1000)\n                const totalPrice: string = (days * parseFloat(reservation.price)).toFixed(2)\n\n                if (reservation.amenities.length === 0) {\n                    reservation.amenities.push(\"None\")\n                }\n\n                return (\n                    <GridListTile key={reservation.booking_id} cols={1}>\n                        <Paper elevation={3} key={reservation.booking_id} className={classes.brandPaper}>\n                            <Grid container spacing={2} alignItems=\"center\">\n                                <Grid className={classes.hotelGrid}>\n                                    <Typography\n                                        className={classes.hotelTitle}>Room: {reservation.title} | {reservation.check_in_day} to {reservation.check_out_day}\n                                    </Typography>\n                                    <Typography>{reservation.physical_address}</Typography>\n                                    <Typography>Booking status: {reservation.status}</Typography>\n                                    <Typography>Amenities: {reservation.amenities.join(', ')}</Typography>\n                                    <Typography>View: {reservation.view}</Typography>\n                                    <Typography>\n                                        Extendable: {reservation.is_extendable ? \"Yes\" : \"No\"}\n                                    </Typography>\n                                </Grid>\n                                <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                <Grid item xs={3}>\n                                    <Grid className={classes.priceDiv}>\n                                        <Typography>Booked on {reservation.date_of_registration}</Typography>\n                                        <Typography className={classes.hotelTitle}>Total price:</Typography>\n                                        <Typography className={classes.hotelTitle}>${totalPrice}</Typography>\n                                        <br/>\n                                        <ReservationEditButton reservation={reservation}\n                                                               reservations={reservations}\n                                                               setEditButtonToDisable={setEditButtonToDisable}\n                                                               editButtonToDisable={editButtonToDisable}\n                                                               setAlertMessage={setAlertMessage}\n                                                               setAlertStatus={setAlertStatus}\n                                                               setAlertOpen={setAlertOpen}\n                                                               customerSIN={customerSIN}\n                                                               setReservations={setReservations}/>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </GridListTile>\n                );\n            })\n        }\n    </GridList>\n}\n\ntype ReservationEditProps = {\n    reservation: Reservation;\n    reservations: Reservation[];\n    editButtonToDisable: number;\n    setEditButtonToDisable: any;\n    setAlertMessage: any;\n    setAlertStatus: any;\n    setAlertOpen: any;\n    customerSIN: string;\n    setReservations: any;\n}\n\nconst ReservationEditButton = ({\n                                   reservation,\n                                   reservations,\n                                   editButtonToDisable,\n                                   setEditButtonToDisable,\n                                   setAlertMessage,\n                                   setAlertStatus,\n                                   setAlertOpen,\n                                   customerSIN,\n                                   setReservations\n                               }: ReservationEditProps) => {\n    if (reservation.status === 'Renting') {\n        return <Button variant='contained'\n                       onClick={() => patchReservation('Archived', setEditButtonToDisable, reservations, reservation, setAlertMessage, setAlertStatus, setAlertOpen, customerSIN, setReservations)}\n                       disabled={editButtonToDisable === reservation.booking_id}>Check Out</Button>\n    }\n    if (reservation.status === 'Booked') {\n        return <Button variant='contained'\n                       onClick={() => patchReservation('Cancelled', setEditButtonToDisable, reservations, reservation, setAlertMessage, setAlertStatus, setAlertOpen, customerSIN, setReservations)}\n                       disabled={editButtonToDisable === reservation.booking_id}>Cancel</Button>\n    }\n    return <></>\n}\n\nasync function patchReservation(action: string, setEditButtonToDisable: any, reservations: Reservation[], reservation: Reservation, setAlertMessage: any, setAlertStatus: any, setAlertOpen: any, customerSIN: string, setReservations: any) {\n    setEditButtonToDisable(reservation.booking_id);\n    try {\n        let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + customerSIN + \"/reservations/\" + reservation.booking_id, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                status: action\n            })\n        })\n        if (response.status === 204) {\n            if (action === 'Archived') {\n                updateReservations([...reservations], reservation.booking_id, 'Archived', setReservations);\n                openAlert('Successfully checked out of hotel', 'success', setAlertMessage, setAlertStatus, setAlertOpen);\n\n            } else {\n                updateReservations([...reservations], reservation.booking_id, 'Cancelled', setReservations);\n                openAlert('Successfully cancelled room booking', 'success', setAlertMessage, setAlertStatus, setAlertOpen)\n            }\n        } else {\n            openAlert('Error: Unable to modify reservation', 'error', setAlertMessage, setAlertStatus, setAlertOpen);\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        openAlert('Error: Unable to modify reservation', 'error', setAlertMessage, setAlertStatus, setAlertOpen)\n    }\n    setEditButtonToDisable(-1);\n}\n\nfunction updateReservations(reservations: Reservation[], bookingID: number, status: string, setReservations: any) {\n    for (let i = 0; i < reservations.length; i++) {\n        if (reservations[i].booking_id === bookingID) {\n            reservations[i].status = status;\n            setReservations(reservations);\n            return;\n        }\n    }\n}\n\nfunction openAlert(message: string, status: string, setAlertMessage: any, setAlertStatus: any, setAlertOpen: any) {\n    setAlertMessage(message);\n    setAlertStatus(status);\n    setAlertOpen(true);\n}\n\nexport default function Reservations() {\n    const classes = useStyles();\n    const location = useLocation<{\n        customerName: string;\n        customerSIN: string,\n        response: Reservation[]\n    }>();\n\n    location.state.response.sort((r1: Reservation, r2: Reservation) => (r1.check_in_day > r2.check_in_day) ? 1 : -1);\n\n    const [radioState, setRadioState] = useState(0);\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertStatus, setAlertStatus]: [Severity, any] = useState(\"success\");\n    const [editButtonToDisable, setEditButtonToDisable]: [number, any] = useState(-1);\n    const [reservations, setReservations]: [Reservation[], any] = useState([...location.state.response]);\n\n    function closeAlert() {\n        setAlertOpen(false);\n    }\n\n    function setReservationRadioState(event: React.ChangeEvent<HTMLInputElement>) {\n        const value = parseInt(event.target.value);\n        setRadioState(value);\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>My Reservations - {location.state.customerName}</Typography>\n            <RadioGroup className={classes.radioGroup} value={radioState} onChange={e => setReservationRadioState(e)}\n                        row>\n                <Typography>Filter by:&nbsp;&nbsp;&nbsp;</Typography>\n                <FormControlLabel value={0} control={<Radio/>} label=\"All Reservations\"/>\n                <FormControlLabel value={1} control={<Radio/>} label=\"Ongoing\"/>\n                <FormControlLabel value={2} control={<Radio/>} label=\"Upcoming\"/>\n                <FormControlLabel value={3} control={<Radio/>} label=\"Cancelled/Archived\"/>\n            </RadioGroup>\n            <GenerateReservations classes={classes} reservations={reservations}\n                                  editButtonToDisable={editButtonToDisable} radioState={radioState}\n                                  setEditButtonToDisable={setEditButtonToDisable} setAlertMessage={setAlertMessage}\n                                  setAlertStatus={setAlertStatus} setAlertOpen={setAlertOpen}\n                                  customerSIN={location.state.customerSIN} setReservations={setReservations}/>\n            <Snackbar open={alertOpen} autoHideDuration={6000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity={alertStatus}>\n                    {alertMessage}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}","import {\n    Button, Dialog, DialogActions, DialogTitle,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper, Snackbar, TextField, Tooltip,\n    TooltipProps,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useLocation} from \"react-router-dom\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {MaterialUiPickersDate} from \"@material-ui/pickers/typings/date\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '1em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    centreTitleNoSpace: {\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    smallerTitle: {\n        fontSize: '1.7em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        marginBottom: '0.5em'\n    },\n    brandPaper: {\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        marginTop: '1em'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '50em',\n        width: '85%',\n        marginTop: '10em'\n    },\n    outsideGrid: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        marginBottom: '2em'\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em',\n    },\n    hotelGrid: {\n        width: '70%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n\n    },\n    dateGrid: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    gridParent: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    dialogDiv: {\n        marginLeft: \"0.5em\",\n        marginRight: \"0.5em\"\n    },\n    dialogHeader: {\n        fontWeight: 'bold'\n    },\n    dialogTitle: {\n        fontSize: \"1.8em\",\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    dialogAddress: {\n        marginLeft: \"0.5em\",\n        marginRight: \"0.5em\",\n        fontStyle: \"italic\"\n    }\n}));\n\nconst useStylesBootstrap = makeStyles((theme) => ({\n    arrow: {\n        color: theme.palette.common.black,\n    },\n    tooltip: {\n        backgroundColor: theme.palette.common.black,\n    },\n}));\n\nfunction BootstrapTooltip(props: JSX.IntrinsicAttributes & TooltipProps) {\n    const classes = useStylesBootstrap();\n\n    return <Tooltip arrow classes={classes} {...props} />;\n}\n\ninterface Room {\n    type_id: number;\n    title: string;\n    price: string;\n    amenities: string[];\n    room_capacity: number;\n    view: string;\n    is_extendable: boolean;\n    total_number_rooms: number;\n    rooms_available: number;\n    enabled: undefined | boolean;\n    tooltip: string;\n}\n\ntype Severity = \"error\" | \"success\" | \"info\" | \"warning\" | undefined;\n\ninterface AvailableRoom {\n    type_id: number;\n    occupancy: number;\n}\n\nconst ConfirmationDialog = ({\n                                dialogOpen,\n                                setDialogOpen,\n                                roomToBook,\n                                classes,\n                                location,\n                                checkInDateToBook,\n                                checkOutDateToBook,\n                                disableBookRoomButton,\n                                bookRoom\n                            }: any) => {\n\n    return <Dialog onClose={() => setDialogOpen(false)} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n        <DialogTitle id=\"dialog-title\" className={classes.dialogTitle}>\n            <Typography className={classes.dialogTitle}>Confirm Room Booking</Typography>\n        </DialogTitle>\n        <div className={classes.dialogAddress}>\n            <Typography align=\"center\">{location.state.address}</Typography>\n        </div>\n        <br/>\n        <Divider/>\n        <Typography align=\"center\" className={classes.dialogHeader}>Customer Info</Typography>\n        <Divider/>\n        <div className={classes.dialogDiv}>\n            <Typography>{location.state.customerName}</Typography>\n            <Typography>{location.state.customerAddress}</Typography>\n            <Typography>{location.state.customerEmail}</Typography>\n            <Typography>{location.state.customerPhone}</Typography>\n        </div>\n        <br/>\n        <Divider/>\n        <Typography align=\"center\" className={classes.dialogHeader}>Room Details</Typography>\n        <Divider/>\n        <div className={classes.dialogDiv}>\n            <Typography>Room type: {roomToBook.title}</Typography>\n            <Typography>{checkInDateToBook} to {checkOutDateToBook}</Typography>\n            <Typography>Amenities: {roomToBook.amenities.join(', ')}</Typography>\n            <Typography>View: {roomToBook.view}</Typography>\n            <Typography>\n                Extendable: {roomToBook.is_extendable ? \"Yes\" : \"No\"}\n            </Typography>\n        </div>\n        <br/>\n        <DialogActions>\n            <Button disabled={disableBookRoomButton} onClick={() => bookRoom(roomToBook.type_id)} variant=\"contained\"\n                    color=\"primary\">\n                Book Room\n            </Button>\n            <Button onClick={() => setDialogOpen(false)} variant=\"contained\" color=\"secondary\">\n                Cancel\n            </Button>\n        </DialogActions>\n    </Dialog>\n};\n\nexport default function Rooms() {\n    const classes = useStyles();\n    const location = useLocation<{\n        address: string;\n        customerSIN: string,\n        customerName: string,\n        customerAddress: string,\n        customerEmail: string,\n        customerPhone: string,\n        response: Room[],\n        brandName: string,\n        hotelID: string\n    }>();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(true)\n    }\n\n    const [checkInDate, setCheckInDate]: [Date, any] = useState(new Date());\n    const tomorrow: MaterialUiPickersDate = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1)\n    const [checkOutDate, setCheckOutDate]: [Date, any] = useState(tomorrow);\n    const [checkInDateToBook, setCheckInDateToBook]: [string, any] = useState(\"\");\n    const [checkOutDateToBook, setCheckOutDateToBook]: [string, any] = useState(\"\");\n    const [numPeople, setNumPeople]: [number, any] = useState(1);\n    const [availability, setAvailability]: [boolean, any] = useState(false);\n    const [disableAvailability, setDisableAvailability]: [boolean, any] = useState(false);\n    const [roomData, setRoomData]: [Room[], any] = useState(location.state.response);\n    const [numRooms, setNumRooms]: [number, any] = useState(location.state.response.length);\n    const [dialogOpen, setDialogOpen]: [boolean, any] = useState(false);\n    const [roomToBook, setRoomToBook]: [Room, any] = useState(location.state.response[0]);\n    const [disableBookRoomButton, setDisableBookRoomButton]: [boolean, any] = useState(false);\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertStatus, setAlertStatus]: [Severity, any] = useState(\"success\");\n\n    const past: [Date, Date, number] = [tomorrow, tomorrow, -1]\n\n    location.state.response.forEach((room: Room) => {\n        room.enabled = true;\n        room.tooltip = \"\";\n    })\n\n    function confirmBookRoom(room: Room) {\n        setRoomToBook(room);\n        setDialogOpen(true);\n    }\n\n    async function bookRoom(typeID: number) {\n        setDisableBookRoomButton(true);\n        try {\n            let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + location.state.customerSIN + \"/reservations\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    type_id: typeID,\n                    check_in: checkInDateToBook,\n                    check_out: checkOutDateToBook\n                })\n            })\n            if (response.status === 201) {\n                await checkAvailability();\n                openAlert('Successfully booked room', 'success');\n                setDialogOpen(false);\n            } else {\n                openAlert('Error: Unable to book room', 'error');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            openAlert('Error: Unable to book room', 'error');\n        }\n        setDisableBookRoomButton(false);\n    }\n\n    function openAlert(message: string, status: string) {\n        setAlertMessage(message);\n        setAlertStatus(status);\n        setAlertOpen(true);\n    }\n\n    function closeAlert() {\n        setAlertOpen(false);\n    }\n\n    async function checkAvailability() {\n        //Only check availability if filters have been changed\n        if (past[0] !== checkInDate || past[1] !== checkOutDate || past[2] !== numPeople) {\n            setDisableAvailability(true);\n            try {\n                let url: string = process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.hotelID + \"/rooms/availability\"\n                url += \"?check-in=\" + dateToString(checkInDate) + \"&check-out=\" + dateToString(checkOutDate) + \"&people=\" + numPeople;\n\n                let response: Response = await fetch(url);\n                if (response.status !== 200) {\n                    return;\n                }\n                const availableRooms: AvailableRoom[] = await response.json();\n                const newRoomData: Room[] = JSON.parse(JSON.stringify(roomData));\n                let roomNum: number = newRoomData.length;\n                newRoomData.forEach(room => {\n                    const roomInfo = getRoom(room.type_id, availableRooms);\n                    room.enabled = true;\n                    room.tooltip = \"\";\n                    room.rooms_available = room.total_number_rooms - roomInfo.occupancy;\n                    //Room capacity is too small; disable\n                    if (roomInfo.type_id === -1) {\n                        room.enabled = false;\n                        room.tooltip = \"Room capacity is too small\";\n                        roomNum--;\n                    }\n                    if (room.rooms_available <= 0) {\n                        room.enabled = false;\n                        room.tooltip = \"Room is booked up over these dates\"\n                        roomNum--;\n                    }\n                });\n                newRoomData.sort((r1: Room, r2: Room) => {\n                    if (r1.enabled && !r2.enabled) {\n                        return -1;\n                    }\n                    if (!r1.enabled && r2.enabled) {\n                        return 1;\n                    }\n                    return r1.type_id > r2.type_id ? -1 : 1;\n                })\n                setRoomData(newRoomData);\n                setNumRooms(roomNum);\n                setCheckInDateToBook(dateToString(checkInDate));\n                setCheckOutDateToBook(dateToString(checkOutDate));\n            } catch (error) {\n                console.error('Error:', error);\n            }\n            setDisableAvailability(false);\n        }\n        if (!availability) {\n            setAvailability(true);\n        }\n    }\n\n    function getRoom(typeID: number, roomData: AvailableRoom[]): AvailableRoom {\n        for (let i = 0; i < roomData.length; i++) {\n            if (roomData[i].type_id === typeID) {\n                return roomData[i];\n            }\n        }\n        return {\n            type_id: -1,\n            occupancy: -1\n        }\n    }\n\n    function setNumberOfPeople(num: number) {\n        if (num > 0) {\n            setNumPeople(num);\n            setAvailability(false);\n        }\n    }\n\n    function setCheckOut(date: MaterialUiPickersDate) {\n        if (date !== null && checkInDate !== null) {\n            if (date.getTime() <= checkInDate.getTime()) {\n                const checkIn: MaterialUiPickersDate = new Date();\n                checkIn.setMonth(date.getMonth())\n                checkIn.setDate(date.getDate() - 1)\n                setCheckInDate(checkIn);\n            }\n            setAvailability(false);\n            setCheckOutDate(date);\n        }\n    }\n\n    function setCheckIn(date: MaterialUiPickersDate) {\n        if (date !== null && checkOutDate !== null) {\n            if (date.getTime() >= checkOutDate.getTime()) {\n                const checkOut: MaterialUiPickersDate = new Date();\n                checkOut.setMonth(date.getMonth())\n                checkOut.setDate(date.getDate() + 1)\n                setCheckOutDate(checkOut);\n            }\n            setAvailability(false);\n            setCheckInDate(date);\n        }\n    }\n\n    function dateToString(date: Date): string {\n        let year: string = date.getFullYear().toString();\n        let month: string = '' + (date.getMonth() + 1);\n        let day: string = '' + date.getDate();\n\n        if (month.length < 2) {\n            month = '0' + month;\n        }\n        if (day.length < 2) {\n            day = '0' + day;\n        }\n        return year + '-' + month + '-' + day;\n    }\n\n    function getRoomAvailabilityMessage(numAvailable: number, total: number): string {\n        return numAvailable + '/' + total + ' rooms available';\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>{location.state.brandName}</Typography>\n            <Typography className={classes.centreTitleNoSpace}>{location.state.address}</Typography>\n            <GridList className={classes.gridParent}>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <Typography>Enter booking info to select a room:</Typography>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"check-in-dialog\"\n                            label=\"Check in date\"\n                            format=\"yyyy-MM-dd\"\n                            minDate={new Date()}\n                            value={checkInDate}\n                            onChange={(date: MaterialUiPickersDate) => setCheckIn(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"check-out-dialog\"\n                            label=\"Check out date\"\n                            format=\"yyyy-MM-dd\"\n                            minDate={tomorrow}\n                            value={checkOutDate}\n                            onChange={(date: MaterialUiPickersDate) => setCheckOut(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <TextField\n                        id=\"capacity-number\"\n                        label=\"# of people\"\n                        type=\"number\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        variant=\"outlined\"\n                        value={numPeople}\n                        onChange={e => setNumberOfPeople(parseInt(e.target.value))}\n                    />\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <Button variant=\"contained\" onClick={checkAvailability} disabled={disableAvailability}>Check\n                        Availability</Button>\n                </Grid>\n            </GridList>\n            <Typography className={classes.smallerTitle}>{numRooms} Rooms Found</Typography>\n            <div className={classes.outsideGrid}>\n                <GridList cols={1} cellHeight={190} className={classes.grid}>\n                    <div style={{height: '1em'}}/>\n                    {\n                        roomData.map((room: Room) => {\n                            return (\n                                <GridListTile key={room.type_id} cols={1}>\n                                    <BootstrapTooltip title={room.tooltip} aria-label=\"add\" placement=\"top\">\n                                        <Paper elevation={3} key={room.type_id} className={classes.brandPaper}\n                                               style={room.enabled ? {} : {\n                                                   backgroundColor: 'grey'\n                                               }}>\n                                            <div style={room.enabled ? {opacity: '1'} : {\n                                                opacity: '0.40'\n                                            }}>\n                                                <Grid container spacing={2} alignItems=\"center\">\n                                                    <Grid className={classes.hotelGrid}>\n                                                        <Typography\n                                                            className={classes.hotelTitle}>{room.title}</Typography>\n                                                        <Typography>Amenities: {room.amenities.length === 0 ? \"None\" : room.amenities.join(', ')}</Typography>\n                                                        <Typography>Max\n                                                            capacity: {room.room_capacity} adults</Typography>\n                                                        <Typography>View: {room.view}</Typography>\n                                                        <Typography>Extendable: {room.is_extendable ? \"Yes\" : \"No\"}</Typography>\n                                                    </Grid>\n                                                    <Divider orientation=\"vertical\" flexItem\n                                                             className={classes.divider}/>\n                                                    <Grid container item xs={3} alignItems=\"center\">\n                                                        <Grid container className={classes.priceDiv}>\n                                                            <Typography\n                                                                className={classes.hotelTitle}>${room.price}/night</Typography>\n                                                            <Typography>{getRoomAvailabilityMessage(room.rooms_available, room.total_number_rooms)}</Typography>\n                                                            <br/>\n                                                            <BootstrapTooltip\n                                                                title={(!availability && room.enabled) ? \"Check availability to book a room\" : \"\"}\n                                                                aria-label=\"add\" placement=\"top\">\n                                                                <div>\n                                                                    <Button variant='contained'\n                                                                            onClick={() => confirmBookRoom(room)}\n                                                                            disabled={!room.enabled || !availability}>\n                                                                        Book Room\n                                                                    </Button>\n                                                                </div>\n                                                            </BootstrapTooltip>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </div>\n                                        </Paper>\n                                    </BootstrapTooltip>\n                                </GridListTile>\n                            );\n                        })\n                    }\n                </GridList>\n            </div>\n            <ConfirmationDialog dialogOpen={dialogOpen} setDialogOpen={setDialogOpen} roomToBook={roomToBook}\n                                classes={classes} location={location} checkInDateToBook={checkInDateToBook}\n                                bookRoom={bookRoom} checkOutDateToBook={checkOutDateToBook}\n                                disableBookRoomButton={disableBookRoomButton}/>\n            <Snackbar open={alertOpen} autoHideDuration={6000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity={alertStatus}>\n                    {alertMessage}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}","import {Button, Grid, makeStyles, Paper, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarEmployee} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '1.4em'\n    },\n    inPaper: {\n        display: 'flex'\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: '2em',\n        flexGrow: 1\n    },\n    buttonSpacing: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em',\n        marginTop: '1em'\n    },\n    gridSpacing: {\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    paperContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        display: 'inline-block',\n        padding: '1em',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    topGrid: {\n        maxWidth: '45em'\n    }\n}));\n\ninterface Employee {\n    employeeSIN: string;\n    employeeName: string;\n    employeeAddress: string;\n    salary: string;\n    jobTitle: string;\n    brandName: string;\n    brandID: number;\n    hotelID: number;\n    hotelAddress: string;\n}\n\nexport default function WelcomeEmployee() {\n    const classes = useStyles();\n    const location = useLocation<Employee>();\n    const history = useHistory();\n\n    const [checkInDisabled, setCheckInDisabled]: [boolean, any] = useState(false);\n    const [checkOutDisabled, setCheckOutDisabled]: [boolean, any] = useState(false);\n    const [createDisabled, setCreateDisabled]: [boolean, any] = useState(false);\n    const [manageCustomerDisabled, setManageCustomerDisabled]: [boolean, any] = useState(false);\n    const [manageEmployeeDisabled, setManageEmployeeDisabled]: [boolean, any] = useState(false);\n\n    const welcomeMessage = location.state.brandName + \", \" + location.state.hotelAddress\n\n    async function checkIn() {\n        setCheckInDisabled(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.hotelID + \"/reservations?action=check-in\");\n            if (response.status !== 200) {\n                setCheckInDisabled(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/employee/checkin', {response: response, checkIn: true});\n        } catch (error) {\n            console.error('Error:', error);\n            setCheckInDisabled(false);\n        }\n    }\n\n    async function checkOut() {\n        setCheckOutDisabled(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.hotelID + \"/reservations?action=check-out\");\n            if (response.status !== 200) {\n                setCheckOutDisabled(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/employee/checkout', {response: response, checkOut: false});\n        } catch (error) {\n            console.error('Error:', error);\n            setCheckOutDisabled(false);\n        }\n    }\n\n    function ManagerActions() {\n        if (location.state.jobTitle === 'Manager') {\n            return (\n                <>\n                    <Typography className={classes.centre}>Manager Actions:</Typography>\n                    <br/>\n                    <div className={classes.paperContainer}>\n                        <Button variant=\"contained\" color='primary' disabled={manageEmployeeDisabled}>\n                            Manage Employees\n                        </Button>\n                    </div>\n                </>\n            )\n        }\n        return <></>\n    }\n\n    return (\n        <>\n            <TitleBarEmployee/>\n            <Typography className={classes.centreTitle}>{welcomeMessage}</Typography>\n            <Typography className={classes.centre}>Your profile:</Typography>\n            <div className={classes.paperContainer}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Typography className={classes.inPaper}>Name: {location.state.employeeName}</Typography>\n                    <Typography className={classes.inPaper}>Address: {location.state.employeeAddress}</Typography>\n                    <Typography className={classes.inPaper}>Job title: {location.state.jobTitle}</Typography>\n                    <Typography className={classes.inPaper}>Salary: ${location.state.salary}</Typography>\n                </Paper>\n            </div>\n            <div className={classes.paperContainer}>\n                <Grid container alignItems=\"center\" justify=\"center\" className={classes.topGrid}>\n                    <Grid item xs className={classes.gridSpacing}>\n                        <Grid item xs className={classes.buttonSpacing}>\n                            <Button variant=\"contained\" className={classes.buttonSpacing} disabled={checkInDisabled}\n                                    onClick={() => checkIn()}>\n                                Customer Check In\n                            </Button>\n                        </Grid>\n                        <Grid item xs className={classes.buttonSpacing}>\n                            <Button variant=\"contained\" className={classes.buttonSpacing} disabled={createDisabled}>\n                                Create Booking\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs className={classes.gridSpacing}>\n                        <Grid item xs className={classes.buttonSpacing}>\n                            <Button variant=\"contained\" className={classes.buttonSpacing} disabled={checkOutDisabled} onClick={() => checkOut()}>\n                                Customer Check Out\n                            </Button>\n                        </Grid>\n                        <Grid item xs className={classes.buttonSpacing}>\n                            <Button variant=\"contained\" className={classes.buttonSpacing}\n                                    disabled={manageCustomerDisabled}>\n                                Manage Customer\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n            <br/>\n            <ManagerActions/>\n        </>\n    )\n}","import {\n    Button,\n    Divider, FormControlLabel,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper, Radio, RadioGroup, Snackbar, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useLocation} from \"react-router-dom\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    centreSubTitle: {\n        paddingTop: '0.5em',\n        fontSize: '1.4em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    hotelGrid: {\n        width: '70%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    centreDiv: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em',\n        marginTop: '1em'\n    }\n}));\n\ninterface Reservation {\n    booking_id: number;\n    date_of_registration: string;\n    check_in_day: string;\n    check_out_day: string;\n    title: string;\n    is_extendable: boolean;\n    amenities: string[];\n    view: string;\n    price: string;\n    customer_sin: string;\n    customer_name: string;\n}\n\ntype Severity = \"error\" | \"success\" | \"info\" | \"warning\" | undefined;\n\nconst GenerateReservations = ({\n                                  classes,\n                                  reservations,\n                                  editButtonToDisable,\n                                  setEditButtonToDisable,\n                                  setAlertMessage,\n                                  setAlertStatus,\n                                  setAlertOpen,\n                                  setReservations,\n                                  isCheckIn,\n                                  searchSIN\n                              }: any) => {\n\n    const filteredReservations = reservations.filter((reservation: Reservation) => reservation.customer_sin.includes(searchSIN));\n    if (filteredReservations.length === 0) {\n        return (\n            <GridList cols={1} cellHeight={220} className={classes.grid}>\n                <GridListTile cols={1}>\n                    <Typography className={classes.centreSubTitle}>No reservations found!</Typography>\n                </GridListTile>\n            </GridList>\n        )\n    }\n\n    return <GridList cols={1} cellHeight={220} className={classes.grid}>\n        {\n            filteredReservations.map((reservation: Reservation, index: number) => {\n                const checkIn: Date = new Date(reservation.check_in_day.replace('-', '/'))\n                const checkOut: Date = new Date(reservation.check_out_day.replace('-', '/'))\n                const days: number = Math.round(Math.abs(+checkIn - +checkOut) / 24 / 60 / 60 / 1000)\n                const totalPrice: string = (days * parseFloat(reservation.price)).toFixed(2)\n\n                if (reservation.amenities.length === 0) {\n                    reservation.amenities.push(\"None\")\n                }\n\n                return (\n                    <GridListTile key={reservation.booking_id} cols={1}>\n                        <Paper elevation={3} key={reservation.booking_id} className={classes.brandPaper}>\n                            <Grid container spacing={2} alignItems=\"center\">\n                                <Grid className={classes.hotelGrid}>\n                                    <Typography\n                                        className={classes.hotelTitle}>Room: {reservation.title} | {reservation.check_in_day} to {reservation.check_out_day}\n                                    </Typography>\n                                    <Typography>Customer name: {reservation.customer_name}</Typography>\n                                    <Typography>Customer SIN: {reservation.customer_sin}</Typography>\n                                    <Typography>Amenities: {reservation.amenities.join(', ')}</Typography>\n                                    <Typography>View: {reservation.view}</Typography>\n                                    <Typography>\n                                        Extendable: {reservation.is_extendable ? \"Yes\" : \"No\"}\n                                    </Typography>\n                                </Grid>\n                                <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                <Grid item xs={3}>\n                                    <Grid className={classes.priceDiv}>\n                                        <Typography>Booked on {reservation.date_of_registration}</Typography>\n                                        <Typography className={classes.hotelTitle}>Total price:</Typography>\n                                        <Typography className={classes.hotelTitle}>${totalPrice}</Typography>\n                                        <br/>\n                                        <Button variant='contained'\n                                                onClick={() => patchReservation(isCheckIn ? 'Renting' : 'Archived', setEditButtonToDisable, reservations, reservation, setAlertMessage, setAlertStatus, setAlertOpen, setReservations, index)}\n                                                disabled={editButtonToDisable === reservation.booking_id}>\n                                            {isCheckIn ? \"Check In\" : \"Check Out\"}\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </GridListTile>\n                );\n            })\n        }\n    </GridList>\n}\n\nasync function patchReservation(action: string, setEditButtonToDisable: any, reservations: Reservation[], reservation: Reservation, setAlertMessage: any, setAlertStatus: any, setAlertOpen: any, setReservations: any, index: number) {\n    setEditButtonToDisable(reservation.booking_id);\n    try {\n        let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + reservation.customer_sin + \"/reservations/\" + reservation.booking_id, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                status: action\n            })\n        })\n        if (response.status === 204) {\n            if (action === 'Renting') {\n                openAlert('Successfully checked in customer', 'success', setAlertMessage, setAlertStatus, setAlertOpen);\n            } else {\n                openAlert('Successfully checked out customer', 'success', setAlertMessage, setAlertStatus, setAlertOpen);\n            }\n            const newReservations: Reservation[] = [...reservations];\n            newReservations.splice(index, 1);\n            setReservations(newReservations);\n        } else {\n            openAlert('Error: Unable to modify reservation', 'error', setAlertMessage, setAlertStatus, setAlertOpen);\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        openAlert('Error: Unable to modify reservation', 'error', setAlertMessage, setAlertStatus, setAlertOpen)\n    }\n    setEditButtonToDisable(-1);\n}\n\nfunction openAlert(message: string, status: string, setAlertMessage: any, setAlertStatus: any, setAlertOpen: any) {\n    setAlertMessage(message);\n    setAlertStatus(status);\n    setAlertOpen(true);\n}\n\nexport default function CheckCustomer() {\n    const classes = useStyles();\n    const location = useLocation<{\n        response: Reservation[];\n        checkIn: boolean;\n    }>();\n\n    location.state.response.sort((r1: Reservation, r2: Reservation) => (r1.check_in_day > r2.check_in_day) ? 1 : -1);\n\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertStatus, setAlertStatus]: [Severity, any] = useState(\"success\");\n    const [editButtonToDisable, setEditButtonToDisable]: [number, any] = useState(-1);\n    const [reservations, setReservations]: [Reservation[], any] = useState([...location.state.response]);\n    const [searchSIN, setSearchSIN]: [string, any] = useState(\"\");\n\n    const dateWords = new Date().toDateString();\n    const subTitle = location.state.checkIn ? 'For ' + dateWords : 'Customers currently renting rooms'\n\n    function closeAlert() {\n        setAlertOpen(false);\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography\n                className={classes.centreTitle}>Customer {location.state.checkIn ? 'Check In' : 'Check Out'}</Typography>\n            <Typography className={classes.centreSubTitle}>{subTitle}</Typography>\n            <div className={classes.centreDiv}>\n                <TextField label=\"Search by SIN\" variant=\"outlined\" value={searchSIN}\n                           onChange={event => setSearchSIN(event.currentTarget.value)}/>\n            </div>\n            <GenerateReservations classes={classes} reservations={reservations}\n                                  editButtonToDisable={editButtonToDisable}\n                                  setEditButtonToDisable={setEditButtonToDisable} setAlertMessage={setAlertMessage}\n                                  setAlertStatus={setAlertStatus} setAlertOpen={setAlertOpen} searchSIN={searchSIN}\n                                  setReservations={setReservations} isCheckIn={location.state.checkIn}/>\n            <Snackbar open={alertOpen} autoHideDuration={6000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity={alertStatus}>\n                    {alertMessage}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Employee from \"./employee/Employee\";\nimport SignInCustomer from \"./customer/SignInCustomer\";\nimport {AppBar, makeStyles, Typography} from \"@material-ui/core\";\nimport Name from \"./customer/Name\";\nimport WelcomeCustomer from \"./customer/WelcomeCustomer\";\nimport HotelBrand from \"./customer/HotelBrand\";\nimport Hotel from \"./customer/Hotel\";\nimport Reservations from \"./customer/Reservations\";\nimport Rooms from \"./customer/Rooms\";\nimport WelcomeEmployee from \"./employee/WelcomeEmployee\";\nimport CheckCustomer from \"./employee/CheckCustomer\";\n\nrequire('dotenv').config()\n\nconst useTitleStyles = makeStyles(() => ({\n    title: {\n        fontSize: \"2.5em\",\n        fontWeight: \"bold\",\n        paddingLeft: \"1em\"\n    }\n}));\n\nexport function TitleBarCustomer() {\n    const classes = useTitleStyles();\n    return <AppBar position=\"static\">\n        <Typography className={classes.title}>ExpressBook Customer Portal</Typography>\n    </AppBar>\n}\n\nexport function TitleBarEmployee() {\n    const classes = useTitleStyles();\n    return <AppBar position=\"static\">\n        <Typography className={classes.title}>ExpressBook Employee Portal</Typography>\n    </AppBar>\n}\n\nReactDOM.render(\n    <>\n        <Router>\n            <Switch>\n                <Route exact path=\"/ui/employee\" component={Employee}/>\n                <Route exact path=\"/ui/employee/welcome\" component={WelcomeEmployee}/>\n                <Route exact path=\"/ui/employee/checkin\" component={CheckCustomer}/>\n                <Route exact path=\"/ui/employee/checkout\" component={CheckCustomer}/>\n                <Route exact path=\"/ui/customer\" component={SignInCustomer}/>\n                <Route exact path=\"/ui/customer/name\" component={Name}/>\n                <Route exact path=\"/ui/customer/welcome\" component={WelcomeCustomer}/>\n                <Route exact path=\"/ui/customer/brands\" component={HotelBrand}/>\n                <Route exact path=\"/ui/customer/hotels\" component={Hotel}/>\n                <Route exact path=\"/ui/customer/reservations\" component={Reservations}/>\n                <Route exact path=\"/ui/customer/rooms\" component={Rooms}/>\n            </Switch>\n        </Router>\n    </>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}