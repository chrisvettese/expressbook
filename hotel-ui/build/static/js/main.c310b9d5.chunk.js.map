{"version":3,"sources":["employee/SignInEmployee.tsx","customer/SignInCustomer.tsx","customer/Name.tsx","customer/WelcomeCustomer.tsx","customer/HotelBrand.tsx","customer/Hotel.tsx","Reservations.tsx","Rooms.tsx","employee/WelcomeEmployee.tsx","employee/CheckCustomer.tsx","employee/ManageCustomer.tsx","employee/ManageEmployee.tsx","index.tsx"],"names":["useStyles","makeStyles","sinCentre","paddingTop","display","alignItems","justifyContent","buttonCentre","centreTitle","fontWeight","fontSize","width","centre","textField","inPaper","marginTop","buttonSpacing","marginLeft","marginRight","paperContainer","paper","padding","theme","root","flexWrap","backgroundColor","palette","background","marginBottom","brandPaper","flexDirection","hotelTitle","grid","boxShadow","height","divider","brandGrid","priceDiv","hotelGrid","radioGroup","GenerateReservations","classes","reservations","editButtonToDisable","radioState","setEditButtonToDisable","setAlertMessage","setAlertStatus","setAlertOpen","customerSIN","setReservations","GridList","cols","cellHeight","className","filter","reservation","status","map","checkIn","Date","check_in_day","replace","checkOut","check_out_day","totalPrice","Math","round","abs","parseFloat","price","toFixed","amenities","length","push","GridListTile","Paper","elevation","Grid","container","spacing","Typography","title","undefined","job_title","employee_name","physical_address","join","view","is_extendable","Divider","orientation","flexItem","item","xs","date_of_registration","booking_id","ReservationEditButton","Button","variant","onClick","patchReservation","disabled","action","a","fetch","process","method","headers","body","JSON","stringify","updateReservations","openAlert","console","error","bookingID","i","message","Reservations","location","useLocation","state","response","sort","r1","r2","useState","setRadioState","alertOpen","alertMessage","alertStatus","titleMessage","isCustomer","customerName","closeAlert","TitleBarCustomer","RadioGroup","value","onChange","e","event","parseInt","target","setReservationRadioState","row","FormControlLabel","control","Radio","label","Snackbar","open","autoHideDuration","onClose","Alert","severity","centreTitleNoSpace","smallerTitle","outsideGrid","dateGrid","gridParent","dialogDiv","dialogHeader","dialogTitle","dialogAddress","fontStyle","useStylesBootstrap","arrow","color","common","black","tooltip","BootstrapTooltip","props","Tooltip","EmployeeInfo","employeeName","align","jobTitle","ConfirmationDialog","dialogOpen","setDialogOpen","roomToBook","checkInDateToBook","checkOutDateToBook","disableBookRoomButton","bookRoom","Dialog","aria-labelledby","DialogTitle","id","address","customerAddress","customerEmail","customerPhone","DialogActions","type_id","Rooms","buttonStateValues","checkInDate","setCheckInDate","tomorrow","setDate","getDate","checkOutDate","setCheckOutDate","setCheckInDateToBook","setCheckOutDateToBook","numPeople","setNumPeople","availability","setAvailability","disableAvailability","setDisableAvailability","roomData","setRoomData","numRooms","setNumRooms","setRoomToBook","setDisableBookRoomButton","past","typeID","employeeSIN","check_in","check_out","employee_sin","checkAvailability","url","hotelID","dateToString","json","availableRooms","newRoomData","parse","roomNum","forEach","room","roomInfo","getRoom","enabled","rooms_available","total_number_rooms","occupancy","date","year","getFullYear","toString","month","getMonth","day","brandName","utils","DateFnsUtils","margin","format","minDate","getTime","setMonth","setCheckIn","KeyboardButtonProps","setCheckOut","TextField","type","InputLabelProps","shrink","num","style","aria-label","placement","opacity","room_capacity","numAvailable","total","confirmBookRoom","flexGrow","gridSpacing","topGrid","maxWidth","centreSubTitle","centreDiv","isCheckIn","searchSIN","filteredReservations","customer_sin","includes","index","customer_name","newReservations","splice","CheckCustomer","setSearchSIN","dateWords","toDateString","subTitle","currentTarget","CreateCustomerDialog","setCustomerData","setCustomerName","setCustomerAddress","setCustomerPhone","setCustomerEmail","nameError","setNameError","addressError","setAddressError","emailError","setEmailError","phoneError","setPhoneError","disableCreateCustomer","setDisableCreateCustomer","helperText","createCustomer","name","email","phoneNumber","isNameError","isAddressError","isEmailError","indexOf","isPhoneError","test","customer_address","customer_email","customer_phone","empName","require","config","useTitleStyles","paddingLeft","AppBar","position","TitleBarEmployee","ReactDOM","exact","path","component","history","useHistory","SIN","setSIN","disableSignIn","setDisableSignIn","setError","sinRegex","validateSIN","checkEmployee","then","employeeAddress","employee_address","salary","brand_name","brandID","brand_id","hotel_id","hotelAddress","hotel_address","catch","log","onKeyPress","key","keyPressed","checkInDisabled","setCheckInDisabled","checkOutDisabled","setCheckOutDisabled","manageEmployeeDisabled","setManageEmployeeDisabled","welcomeMessage","ManagerActions","manageEmployee","managerSIN","Box","p","m","disableFindCustomer","setDisableFindCustomer","customerData","disableReservations","setDisableReservations","disableCreate","setDisableCreate","ShowCustomer","hasOwnProperty","getReservations","getRooms","findCustomer","buttonStates","setButtonStates","employees","setEmployees","emp","newStates","manager_sin","newButtonStates","newEmployees","deleteEmployee","checkCustomer","setName","setAddress","setEmail","setPhoneNumber","disableUseButton","setDisableUseButton","submitInfo","disableHotelButton","setDisableHotelButton","disableReservationButton","setDisableReservationButton","goToBrandPage","goToReservationsPage","brand","main_office_address","email_address","phone_number","number_of_hotels","getHotels","hotel","number_of_rooms","Rating","star_category","readOnly","document","getElementById"],"mappings":"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","file":"static/js/main.c310b9d5.chunk.js","sourcesContent":["import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarEmployee} from \"../index\";\nimport {useHistory} from 'react-router-dom';\n\n\nconst useStyles = makeStyles(() => ({\n    sinCentre: {\n        paddingTop: '3em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    }\n}));\n\ninterface GetEmployeeResponse {\n    employee_sin: string;\n    employee_name: string;\n    employee_address: string;\n    salary: string;\n    job_title: string;\n    brand_name: string;\n    brand_id: number;\n    hotel_id: number;\n    hotel_address: string;\n}\n\nexport default function SignInEmployee() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [SIN, setSIN] = useState(\"\");\n    const [disableSignIn, setDisableSignIn] = useState(false);\n    const [error, setError] = useState(\"\");\n    const sinRegex: RegExp = /^[0-9]{3}-[0-9]{3}-[0-9]{3}$/;\n\n    function validateSIN(): boolean {\n        return !sinRegex.test(SIN) && SIN.length !== 0;\n    }\n\n    function keyPressed(e: React.KeyboardEvent<HTMLDivElement>) {\n        if (e.key === 'Enter' && sinRegex.test(SIN)) {\n            checkEmployee();\n        }\n    }\n\n    function checkEmployee() {\n        setDisableSignIn(true);\n        fetch(process.env.REACT_APP_SERVER_URL + \"/employees/\" + SIN)\n            .then(response => {\n                if (response.status === 200) {\n                    response.json().then((response: GetEmployeeResponse) => {\n                        history.push('/ui/employee/welcome', {\n                            employeeSIN: response.employee_sin,\n                            employeeName: response.employee_name,\n                            employeeAddress: response.employee_address,\n                            salary: response.salary,\n                            jobTitle: response.job_title,\n                            brandName: response.brand_name,\n                            brandID: response.brand_id,\n                            hotelID: response.hotel_id,\n                            hotelAddress: response.hotel_address\n                        })\n                    })\n                } else {\n                    setError(\"Unable to sign in. Please contact the hotel manager or database admin if you think this is a problem.\")\n                    setDisableSignIn(false);\n                }\n            }).catch(error => {\n                console.log('Error:', error);\n                setDisableSignIn(false);\n            }\n        )\n    }\n\n    return (\n        <>\n            <TitleBarEmployee/>\n            <Typography className={classes.centreTitle}>Sign In</Typography>\n            <div className={classes.sinCentre}>\n                <Typography>Please sign in to access the hotel management system:</Typography>\n            </div>\n            <div className={classes.sinCentre}>\n                <TextField error={validateSIN()} helperText={validateSIN() ? \"SIN must have format XXX-XXX-XXX\" : \"\"}\n                           onChange={event => setSIN(event.currentTarget.value)}\n                           onKeyPress={e => keyPressed(e)}\n                           id=\"outlined-basic\" label=\"Social Insurance Number\" variant=\"outlined\" value={SIN}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => checkEmployee()}\n                        disabled={!sinRegex.test(SIN) || disableSignIn}>Sign In</Button>\n            </div>\n            <div className={classes.sinCentre}>\n                <Typography style={{color: \"red\"}}>{error}</Typography>\n            </div>\n        </>\n    )\n}","import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory} from 'react-router-dom';\n\n\nconst useStyles = makeStyles(() => ({\n    sinCentre: {\n        paddingTop: '3em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    }\n}));\n\ninterface CustomerResponse {\n    customer_sin: string;\n    customer_name: string;\n    customer_address: string;\n    customer_email: string;\n    customer_phone: string;\n}\n\nexport default function SignInCustomer() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [SIN, setSIN] = useState(\"\");\n    const [disableSignIn, setDisableSignIn] = useState(false);\n    const sinRegex: RegExp = /^[0-9]{3}-[0-9]{3}-[0-9]{3}$/;\n\n    function validateSIN(): boolean {\n        return !sinRegex.test(SIN) && SIN.length !== 0;\n    }\n\n    function keyPressed(e: React.KeyboardEvent<HTMLDivElement>) {\n        if (e.key === 'Enter' && sinRegex.test(SIN)) {\n            checkCustomer();\n        }\n    }\n\n    function checkCustomer() {\n        setDisableSignIn(true);\n        fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + SIN)\n            .then(response => {\n                if (response.status === 404) {\n                    history.push('/ui/customer/name', {customerSIN: SIN})\n                } else {\n                    response.json().then((response: CustomerResponse) => {\n                        history.push('/ui/customer/welcome', {\n                            customerSIN: response.customer_sin,\n                            customerName: response.customer_name,\n                            customerAddress: response.customer_address,\n                            customerEmail: response.customer_email,\n                            customerPhone: response.customer_phone\n                        })\n                    })\n                }\n            }).catch(error => {\n                console.log('Error:', error);\n                setDisableSignIn(false);\n            }\n        )\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>Sign In</Typography>\n            <div className={classes.sinCentre}>\n                <Typography>To begin searching destinations, enter your social insurance number:</Typography>\n            </div>\n            <div className={classes.sinCentre}>\n                <TextField error={validateSIN()} helperText={validateSIN() ? \"SIN must have format XXX-XXX-XXX\" : \"\"}\n                           onChange={event => setSIN(event.currentTarget.value)}\n                           onKeyPress={e => keyPressed(e)}\n                           id=\"outlined-basic\" label=\"Social Insurance Number\" variant=\"outlined\" value={SIN}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => checkCustomer()}\n                        disabled={!sinRegex.test(SIN) || disableSignIn}>Sign In</Button>\n            </div>\n        </>\n    )\n}","import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '5em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    textField: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}));\n\nexport default function Name() {\n    const classes = useStyles();\n    const location = useLocation<{ customerSIN: string }>();\n    const history = useHistory();\n    const [name, setName] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [nameError, setNameError]: [boolean, any] = useState(false);\n    const [addressError, setAddressError]: [boolean, any] = useState(false);\n    const [emailError, setEmailError]: [boolean, any] = useState(false);\n    const [phoneError, setPhoneError]: [boolean, any] = useState(false);\n    const [disableUseButton, setDisableUseButton]: [boolean, any] = useState(false);\n\n    async function submitInfo() {\n        const nameError: boolean = name.length === 0;\n        const addressError: boolean = address.length === 0;\n        let emailError: boolean = email.includes(' ') || email.indexOf('@') < 1\n        if (!emailError) {\n            const index: number = email.indexOf('.', email.indexOf('@'))\n            if (index < 3 || index === email.length - 1) {\n                emailError = true;\n            }\n        }\n        const phoneError: boolean = !(/^(?:(?:\\+?1\\s*(?:[.-]\\s*)?)?(?:\\(\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\s*\\)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\s*(?:[.-]\\s*)?)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\s*(?:[.-]\\s*)?([0-9]{4})(?:\\s*(?:#|x\\.?|ext\\.?|extension)\\s*(\\d+))?$/).test(phoneNumber);\n\n        setNameError(nameError);\n        setAddressError(addressError);\n        setEmailError(emailError);\n        setPhoneError(phoneError);\n\n        if (nameError || addressError || emailError || phoneError) {\n            return;\n        }\n\n        if (name.length === 0 && address.length === 0) {\n            setNameError(true);\n            setAddressError(true)\n        } else if (name.length !== 0 && address.length === 0) {\n            setNameError(false);\n            setAddressError(true)\n        } else if (name.length === 0 && address.length !== 0) {\n            setNameError(true);\n            setAddressError(false)\n        } else {\n            setDisableUseButton(true);\n            try {\n                let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers\", {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        customer_sin: location.state.customerSIN,\n                        customer_name: name,\n                        customer_address: address,\n                        customer_email: email,\n                        customer_phone: phoneNumber\n                    })\n                })\n                if (response.status === 201) {\n                    history.push('/ui/customer/welcome', {\n                        customerSIN: location.state.customerSIN,\n                        customerName: name,\n                        customerAddress: address,\n                        customerEmail: email,\n                        customerPhone: phoneNumber\n                    })\n                }\n            } catch(error) {\n                console.error('Error:', error);\n                setDisableUseButton(false);\n            }\n        }\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <div className={classes.centre}>\n                <Typography>Welcome to ExpressBook. Please provide some information about yourself:</Typography>\n            </div>\n            <div className={classes.textField}>\n                <TextField label=\"Full Name\" variant=\"outlined\" value={name} error={nameError}\n                           helperText={nameError ? \"Must provide name\" : \"\"}\n                           onChange={event => setName(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.textField}>\n                <TextField label=\"Address\" variant=\"outlined\" value={address} error={addressError}\n                           helperText={addressError ? \"Must provide address\" : \"\"}\n                           onChange={event => setAddress(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.textField}>\n                <TextField label=\"Email\" variant=\"outlined\" value={email} error={emailError}\n                           helperText={emailError ? \"Must provide valid email\" : \"\"}\n                           onChange={event => setEmail(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.textField}>\n                <TextField label=\"Phone Number\" variant=\"outlined\" value={phoneNumber} error={phoneError}\n                           helperText={phoneError ? \"Must provide valid phone number\" : \"\"}\n                           onChange={event => setPhoneNumber(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => submitInfo()} disabled={disableUseButton}>Sign In</Button>\n            </div>\n        </>\n    )\n}","import {Button, makeStyles, Paper, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '1.4em'\n    },\n    inPaper: {\n        display: 'flex'\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: '2em'\n    },\n    buttonSpacing: {\n        marginLeft: '1.5em',\n        marginRight: '1.5em'\n    },\n    paperContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        display: 'inline-block',\n        padding: '1em',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}));\n\nexport default function WelcomeCustomer() {\n    const classes = useStyles();\n    const location = useLocation<{ customerSIN: string, customerName: string, customerAddress: string, customerEmail: string, customerPhone: string }>();\n    const history = useHistory();\n    const [disableHotelButton, setDisableHotelButton] = useState(false);\n    const [disableReservationButton, setDisableReservationButton] = useState(false);\n\n    const welcomeMessage = \"Welcome, \" + location.state.customerName;\n\n    async function goToBrandPage() {\n        setDisableHotelButton(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/brands\");\n            if (response.status !== 200) {\n                setDisableHotelButton(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/customer/brands', {\n                customerSIN: location.state.customerSIN,\n                customerAddress: location.state.customerAddress,\n                customerName: location.state.customerName,\n                customerEmail: location.state.customerEmail,\n                customerPhone: location.state.customerPhone,\n                response: response\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            setDisableHotelButton(false);\n        }\n    }\n\n    async function goToReservationsPage() {\n        setDisableReservationButton(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + location.state.customerSIN + \"/reservations\");\n            if (response.status !== 200) {\n                setDisableReservationButton(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/customer/reservations', {\n                customerName: location.state.customerName,\n                customerSIN: location.state.customerSIN,\n                response: response,\n                isCustomer: true\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            setDisableReservationButton(false);\n        }\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>{welcomeMessage}</Typography>\n            <Typography className={classes.centre}>Your profile:</Typography>\n            <div className={classes.paperContainer}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Typography className={classes.inPaper}>Address: {location.state.customerAddress}</Typography>\n                    <Typography className={classes.inPaper}>Email: {location.state.customerEmail}</Typography>\n                    <Typography className={classes.inPaper}>Phone number: {location.state.customerPhone}</Typography>\n                </Paper>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" className={classes.buttonSpacing} onClick={() => goToBrandPage()}\n                        disabled={disableHotelButton}>Find A Hotel</Button>\n                <Button variant=\"contained\" onClick={() => goToReservationsPage()} disabled={disableReservationButton}>My\n                    Reservations</Button>\n            </div>\n        </>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em',\n        width: '100%'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    brandGrid: {\n        width: '80%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    }\n}));\n\nexport default function HotelBrand() {\n    const classes = useStyles();\n    const location = useLocation<{\n        customerSIN: string,\n        customerName: string,\n        customerAddress: string,\n        customerEmail: string,\n        customerPhone: string,\n        response: any\n    }>();\n    const history = useHistory();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n\n    async function getHotels(index: number) {\n        let newStates = [...buttonStates]\n        newStates[index] = true;\n        setButtonStates(newStates);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/brands/\" + location.state.response[index].brand_id + \"/hotels\");\n            if (response.status !== 200) {\n                let newStates = [...buttonStates]\n                newStates[index] = false;\n                setButtonStates(newStates);\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/customer/hotels', {\n                customerSIN: location.state.customerSIN,\n                customerName: location.state.customerName,\n                customerAddress: location.state.customerAddress,\n                customerEmail: location.state.customerEmail,\n                customerPhone: location.state.customerPhone,\n                response: response,\n                brandName: location.state.response[index].name,\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[index] = false;\n            setButtonStates(newStates);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>Select a hotel brand to view hotels:</Typography>\n            <GridList cols={1} cellHeight={200} className={classes.grid}>\n                {\n                    location.state.response.map((brand: {\n                        brand_id: number;\n                        name: string;\n                        main_office_address: string;\n                        email_address: string;\n                        phone_number: string;\n                        number_of_hotels: number;\n                    }, index: number) => {\n                        return (\n                            <GridListTile key={brand.brand_id} cols={1}>\n                                <Paper elevation={3} key={brand.brand_id} className={classes.brandPaper}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid className={classes.brandGrid}>\n                                            <Typography className={classes.hotelTitle}>{brand.name}</Typography>\n                                            <Typography>Headquarters Address: {brand.main_office_address}</Typography>\n                                            <Typography>Email: {brand.email_address}</Typography>\n                                            <Typography>Phone: {brand.phone_number}</Typography>\n                                            <Typography>Number of hotels: {brand.number_of_hotels}</Typography>\n                                        </Grid>\n                                        <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                        <Grid item xs={2}>\n                                            <Grid className={classes.priceDiv}>\n                                                <Button variant='contained' onClick={() => getHotels(index)}\n                                                        disabled={buttonStates[index]}>Select</Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </GridListTile>\n                        );\n                    })\n                }\n            </GridList>\n        </div>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {Rating} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em',\n        width: '100%'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    hotelGrid: {\n        width: '80%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n\n    }\n}));\n\nexport default function Hotel() {\n    const classes = useStyles();\n    const location = useLocation<{\n        customerSIN: string,\n        customerName: string,\n        customerAddress: string\n        customerEmail: string,\n        customerPhone: string,\n        response: any,\n        brandName: string\n    }>();\n    const history = useHistory();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n\n    async function getRooms(index: number) {\n        let newStates = [...buttonStates]\n        newStates[index] = true;\n        setButtonStates(newStates);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.response[index].hotel_id + \"/rooms\");\n            if (response.status !== 200) {\n                let newStates = [...buttonStates]\n                newStates[index] = false;\n                setButtonStates(newStates);\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/customer/rooms', {\n                customerSIN: location.state.customerSIN,\n                customerName: location.state.customerName,\n                customerAddress: location.state.customerAddress,\n                customerEmail: location.state.customerEmail,\n                customerPhone: location.state.customerPhone,\n                response: response,\n                brandName: location.state.brandName,\n                address: location.state.response[index].physical_address,\n                hotelID: location.state.response[index].hotel_id\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[index] = false;\n            setButtonStates(newStates);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>{location.state.brandName} Hotels</Typography>\n            <GridList cols={1} cellHeight={175} className={classes.grid}>\n                {\n                    location.state.response.map((hotel: {\n                        physical_address: string;\n                        email_address: string;\n                        phone_number: string;\n                        number_of_rooms: number;\n                        hotel_id: number;\n                        star_category: number;\n                    }, index: number) => {\n                        return (\n                            <GridListTile key={hotel.hotel_id} cols={1}>\n                                <Paper elevation={3} key={hotel.hotel_id} className={classes.brandPaper}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid className={classes.hotelGrid}>\n                                            <Typography\n                                                className={classes.hotelTitle}>{hotel.physical_address}</Typography>\n                                            <Typography>Email: {hotel.email_address}</Typography>\n                                            <Typography>Phone: {hotel.phone_number}</Typography>\n                                            <Typography>Number of rooms: {hotel.number_of_rooms}</Typography>\n                                        </Grid>\n                                        <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                        <Grid item xs={2}>\n                                            <Grid className={classes.priceDiv}>\n                                                <Rating value={hotel.star_category} readOnly/>\n                                                <br/><br/>\n                                                <Button variant='contained' onClick={() => getRooms(index)}\n                                                        disabled={buttonStates[index]}>View Details</Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </GridListTile>\n                        );\n                    })\n                }\n            </GridList>\n        </div>\n    )\n}","import {\n    Button,\n    Divider, FormControlLabel,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper, Radio, RadioGroup, Snackbar,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {Severity, TitleBarCustomer} from \"./index\";\nimport {useLocation} from \"react-router-dom\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    hotelGrid: {\n        width: '70%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    radioGroup: {\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em'\n    }\n}));\n\ntype Reservation = {\n    booking_id: number;\n    physical_address: string;\n    date_of_registration: string;\n    check_in_day: string;\n    check_out_day: string;\n    status: string;\n    title: string;\n    is_extendable: boolean;\n    amenities: string[];\n    view: string;\n    price: string;\n    employee_name: string;\n    job_title: string;\n}\n\nconst GenerateReservations = ({\n                                  classes,\n                                  reservations,\n                                  editButtonToDisable,\n                                  radioState,\n                                  setEditButtonToDisable,\n                                  setAlertMessage,\n                                  setAlertStatus,\n                                  setAlertOpen,\n                                  customerSIN,\n                                  setReservations\n                              }: any) => {\n\n    return <GridList cols={1} cellHeight={230} className={classes.grid}>\n        {\n            reservations.filter((reservation: Reservation) => {\n                return !((radioState === 1 && reservation.status !== 'Renting')\n                    || (radioState === 2 && reservation.status !== 'Booked')\n                    || (radioState === 3 && reservation.status !== 'Archived' && reservation.status !== 'Cancelled'))\n            }).map((reservation: Reservation) => {\n                const checkIn: Date = new Date(reservation.check_in_day.replace('-', '/'))\n                const checkOut: Date = new Date(reservation.check_out_day.replace('-', '/'))\n                const days: number = Math.round(Math.abs(+checkIn - +checkOut) / 24 / 60 / 60 / 1000)\n                const totalPrice: string = (days * parseFloat(reservation.price)).toFixed(2)\n\n                if (reservation.amenities.length === 0) {\n                    reservation.amenities.push(\"None\")\n                }\n\n                return (\n                    <GridListTile key={reservation.booking_id} cols={1}>\n                        <Paper elevation={3} key={reservation.booking_id} className={classes.brandPaper}>\n                            <Grid container spacing={2} alignItems=\"center\">\n                                <Grid className={classes.hotelGrid}>\n                                    <Typography\n                                        className={classes.hotelTitle}>Room: {reservation.title} | {reservation.check_in_day} to {reservation.check_out_day}\n                                    </Typography>\n                                    <Typography>{reservation.job_title === undefined ? '' : 'Employee: ' + reservation.employee_name + ', ' + reservation.job_title}</Typography>\n                                    <Typography>{reservation.physical_address}</Typography>\n                                    <Typography>Booking status: {reservation.status}</Typography>\n                                    <Typography>Amenities: {reservation.amenities.join(', ')}</Typography>\n                                    <Typography>View: {reservation.view}</Typography>\n                                    <Typography>\n                                        Extendable: {reservation.is_extendable ? \"Yes\" : \"No\"}\n                                    </Typography>\n                                </Grid>\n                                <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                <Grid item xs={3}>\n                                    <Grid className={classes.priceDiv}>\n                                        <Typography>Booked on {reservation.date_of_registration}</Typography>\n                                        <Typography className={classes.hotelTitle}>Total price:</Typography>\n                                        <Typography className={classes.hotelTitle}>${totalPrice}</Typography>\n                                        <br/>\n                                        <ReservationEditButton reservation={reservation}\n                                                               reservations={reservations}\n                                                               setEditButtonToDisable={setEditButtonToDisable}\n                                                               editButtonToDisable={editButtonToDisable}\n                                                               setAlertMessage={setAlertMessage}\n                                                               setAlertStatus={setAlertStatus}\n                                                               setAlertOpen={setAlertOpen}\n                                                               customerSIN={customerSIN}\n                                                               setReservations={setReservations}/>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </GridListTile>\n                );\n            })\n        }\n    </GridList>\n}\n\ntype ReservationEditProps = {\n    reservation: Reservation;\n    reservations: Reservation[];\n    editButtonToDisable: number;\n    setEditButtonToDisable: any;\n    setAlertMessage: any;\n    setAlertStatus: any;\n    setAlertOpen: any;\n    customerSIN: string;\n    setReservations: any;\n}\n\nconst ReservationEditButton = ({\n                                   reservation,\n                                   reservations,\n                                   editButtonToDisable,\n                                   setEditButtonToDisable,\n                                   setAlertMessage,\n                                   setAlertStatus,\n                                   setAlertOpen,\n                                   customerSIN,\n                                   setReservations\n                               }: ReservationEditProps) => {\n    if (reservation.status === 'Renting') {\n        return <Button variant='contained'\n                       onClick={() => patchReservation('Archived', setEditButtonToDisable, reservations, reservation, setAlertMessage, setAlertStatus, setAlertOpen, customerSIN, setReservations)}\n                       disabled={editButtonToDisable === reservation.booking_id}>Check Out</Button>\n    }\n    if (reservation.status === 'Booked') {\n        return <Button variant='contained'\n                       onClick={() => patchReservation('Cancelled', setEditButtonToDisable, reservations, reservation, setAlertMessage, setAlertStatus, setAlertOpen, customerSIN, setReservations)}\n                       disabled={editButtonToDisable === reservation.booking_id}>Cancel</Button>\n    }\n    return <></>\n}\n\nasync function patchReservation(action: string, setEditButtonToDisable: any, reservations: Reservation[], reservation: Reservation, setAlertMessage: any, setAlertStatus: any, setAlertOpen: any, customerSIN: string, setReservations: any) {\n    setEditButtonToDisable(reservation.booking_id);\n    try {\n        let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + customerSIN + \"/reservations/\" + reservation.booking_id, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                status: action\n            })\n        })\n        if (response.status === 204) {\n            if (action === 'Archived') {\n                updateReservations([...reservations], reservation.booking_id, 'Archived', setReservations);\n                openAlert('Successfully checked out of hotel', 'success', setAlertMessage, setAlertStatus, setAlertOpen);\n\n            } else {\n                updateReservations([...reservations], reservation.booking_id, 'Cancelled', setReservations);\n                openAlert('Successfully cancelled room booking', 'success', setAlertMessage, setAlertStatus, setAlertOpen)\n            }\n        } else {\n            openAlert('Error: Unable to modify reservation', 'error', setAlertMessage, setAlertStatus, setAlertOpen);\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        openAlert('Error: Unable to modify reservation', 'error', setAlertMessage, setAlertStatus, setAlertOpen)\n    }\n    setEditButtonToDisable(-1);\n}\n\nfunction updateReservations(reservations: Reservation[], bookingID: number, status: string, setReservations: any) {\n    for (let i = 0; i < reservations.length; i++) {\n        if (reservations[i].booking_id === bookingID) {\n            reservations[i].status = status;\n            setReservations(reservations);\n            return;\n        }\n    }\n}\n\nfunction openAlert(message: string, status: Severity, setAlertMessage: any, setAlertStatus: any, setAlertOpen: any) {\n    setAlertMessage(message);\n    setAlertStatus(status);\n    setAlertOpen(true);\n}\n\nexport default function Reservations() {\n    const classes = useStyles();\n    const location = useLocation<{\n        customerName: string;\n        customerSIN: string;\n        response: Reservation[];\n        isCustomer: boolean;\n    }>();\n\n    location.state.response.sort((r1: Reservation, r2: Reservation) => (r1.check_in_day > r2.check_in_day) ? 1 : -1);\n\n    const [radioState, setRadioState] = useState(0);\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertStatus, setAlertStatus]: [Severity, any] = useState(\"success\");\n    const [editButtonToDisable, setEditButtonToDisable]: [number, any] = useState(-1);\n    const [reservations, setReservations]: [Reservation[], any] = useState([...location.state.response]);\n\n    const titleMessage = location.state.isCustomer ? 'My Reservations - ' + location.state.customerName : 'Customer Reservations - ' + location.state.customerName;\n\n    function closeAlert() {\n        setAlertOpen(false);\n    }\n\n    function setReservationRadioState(event: React.ChangeEvent<HTMLInputElement>) {\n        const value = parseInt(event.target.value);\n        setRadioState(value);\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>{titleMessage}</Typography>\n            <RadioGroup className={classes.radioGroup} value={radioState} onChange={e => setReservationRadioState(e)}\n                        row>\n                <Typography>Filter by:&nbsp;&nbsp;&nbsp;</Typography>\n                <FormControlLabel value={0} control={<Radio/>} label=\"All Reservations\"/>\n                <FormControlLabel value={1} control={<Radio/>} label=\"Ongoing\"/>\n                <FormControlLabel value={2} control={<Radio/>} label=\"Upcoming\"/>\n                <FormControlLabel value={3} control={<Radio/>} label=\"Cancelled/Archived\"/>\n            </RadioGroup>\n            <GenerateReservations classes={classes} reservations={reservations}\n                                  editButtonToDisable={editButtonToDisable} radioState={radioState}\n                                  setEditButtonToDisable={setEditButtonToDisable} setAlertMessage={setAlertMessage}\n                                  setAlertStatus={setAlertStatus} setAlertOpen={setAlertOpen}\n                                  customerSIN={location.state.customerSIN} setReservations={setReservations}/>\n            <Snackbar open={alertOpen} autoHideDuration={6000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity={alertStatus}>\n                    {alertMessage}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}","import {\n    Button, Dialog, DialogActions, DialogTitle,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper, Snackbar, TextField, Tooltip,\n    TooltipProps,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {Severity, TitleBarCustomer} from \"./index\";\nimport {useLocation} from \"react-router-dom\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {MaterialUiPickersDate} from \"@material-ui/pickers/typings/date\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '1em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    centreTitleNoSpace: {\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    smallerTitle: {\n        fontSize: '1.7em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        marginBottom: '0.5em'\n    },\n    brandPaper: {\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        marginTop: '1em'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '50em',\n        width: '85%',\n        marginTop: '10em'\n    },\n    outsideGrid: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        marginBottom: '2em'\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em',\n    },\n    hotelGrid: {\n        width: '70%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n\n    },\n    dateGrid: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    gridParent: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    dialogDiv: {\n        marginLeft: \"0.5em\",\n        marginRight: \"0.5em\"\n    },\n    dialogHeader: {\n        fontWeight: 'bold'\n    },\n    dialogTitle: {\n        fontSize: \"1.8em\",\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    dialogAddress: {\n        marginLeft: \"0.5em\",\n        marginRight: \"0.5em\",\n        fontStyle: \"italic\",\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    }\n}));\n\nconst useStylesBootstrap = makeStyles((theme) => ({\n    arrow: {\n        color: theme.palette.common.black,\n    },\n    tooltip: {\n        backgroundColor: theme.palette.common.black,\n    },\n}));\n\nfunction BootstrapTooltip(props: JSX.IntrinsicAttributes & TooltipProps) {\n    const classes = useStylesBootstrap();\n\n    return <Tooltip arrow classes={classes} {...props} />;\n}\n\ninterface Room {\n    type_id: number;\n    title: string;\n    price: string;\n    amenities: string[];\n    room_capacity: number;\n    view: string;\n    is_extendable: boolean;\n    total_number_rooms: number;\n    rooms_available: number;\n    enabled: undefined | boolean;\n    tooltip: string;\n}\n\ninterface AvailableRoom {\n    type_id: number;\n    occupancy: number;\n}\n\nfunction EmployeeInfo({location, classes}: any) {\n    if (location.state.employeeName !== undefined) {\n        return (\n            <>\n                <Divider/>\n                <Typography align=\"center\" className={classes.dialogHeader}>Employee Info</Typography>\n                <Divider/>\n                <div className={classes.dialogDiv}>\n                    <Typography>{location.state.employeeName}</Typography>\n                    <Typography>{location.state.jobTitle}</Typography>\n                </div>\n                <br/>\n            </>\n        )\n    }\n    return <></>\n}\n\nconst ConfirmationDialog = ({\n                                dialogOpen,\n                                setDialogOpen,\n                                roomToBook,\n                                classes,\n                                location,\n                                checkInDateToBook,\n                                checkOutDateToBook,\n                                disableBookRoomButton,\n                                bookRoom\n                            }: any) => {\n\n    return <Dialog onClose={() => setDialogOpen(false)} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n        <DialogTitle id=\"dialog-title\" className={classes.dialogTitle}>\n            <Typography className={classes.dialogTitle}>Confirm Room Booking</Typography>\n        </DialogTitle>\n        <div className={classes.dialogAddress}>\n            <Typography align=\"center\">{location.state.address}</Typography>\n        </div>\n        <br/>\n        <EmployeeInfo location={location} classes={classes}/>\n        <Divider/>\n        <Typography align=\"center\" className={classes.dialogHeader}>Customer Info</Typography>\n        <Divider/>\n        <div className={classes.dialogDiv}>\n            <Typography>{location.state.customerName}</Typography>\n            <Typography>{location.state.customerAddress}</Typography>\n            <Typography>{location.state.customerEmail}</Typography>\n            <Typography>{location.state.customerPhone}</Typography>\n        </div>\n        <br/>\n        <Divider/>\n        <Typography align=\"center\" className={classes.dialogHeader}>Room Details</Typography>\n        <Divider/>\n        <div className={classes.dialogDiv}>\n            <Typography>Room type: {roomToBook.title}</Typography>\n            <Typography>{checkInDateToBook} to {checkOutDateToBook}</Typography>\n            <Typography>Amenities: {roomToBook.amenities.join(', ')}</Typography>\n            <Typography>View: {roomToBook.view}</Typography>\n            <Typography>\n                Extendable: {roomToBook.is_extendable ? \"Yes\" : \"No\"}\n            </Typography>\n        </div>\n        <br/>\n        <DialogActions>\n            <Button disabled={disableBookRoomButton} onClick={() => bookRoom(roomToBook.type_id)} variant=\"contained\"\n                    color=\"primary\">\n                Book Room\n            </Button>\n            <Button onClick={() => setDialogOpen(false)} variant=\"contained\" color=\"secondary\">\n                Cancel\n            </Button>\n        </DialogActions>\n    </Dialog>\n};\n\nexport default function Rooms() {\n    const classes = useStyles();\n    const location = useLocation<{\n        address: string;\n        customerSIN: string,\n        customerName: string,\n        customerAddress: string,\n        customerEmail: string,\n        customerPhone: string,\n        response: Room[],\n        brandName: string,\n        hotelID: string,\n        employeeName: string,\n        employeeSIN: string,\n        jobTitle: string\n    }>();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(true)\n    }\n\n    const [checkInDate, setCheckInDate]: [Date, any] = useState(new Date());\n    const tomorrow: MaterialUiPickersDate = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1)\n    const [checkOutDate, setCheckOutDate]: [Date, any] = useState(tomorrow);\n    const [checkInDateToBook, setCheckInDateToBook]: [string, any] = useState(\"\");\n    const [checkOutDateToBook, setCheckOutDateToBook]: [string, any] = useState(\"\");\n    const [numPeople, setNumPeople]: [number, any] = useState(1);\n    const [availability, setAvailability]: [boolean, any] = useState(false);\n    const [disableAvailability, setDisableAvailability]: [boolean, any] = useState(false);\n    const [roomData, setRoomData]: [Room[], any] = useState(location.state.response);\n    const [numRooms, setNumRooms]: [number, any] = useState(location.state.response.length);\n    const [dialogOpen, setDialogOpen]: [boolean, any] = useState(false);\n    const [roomToBook, setRoomToBook]: [Room, any] = useState(location.state.response[0]);\n    const [disableBookRoomButton, setDisableBookRoomButton]: [boolean, any] = useState(false);\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertStatus, setAlertStatus]: [Severity, any] = useState(\"success\");\n\n    const past: [Date, Date, number] = [tomorrow, tomorrow, -1]\n\n    location.state.response.forEach((room: Room) => {\n        room.enabled = true;\n        room.tooltip = \"\";\n    })\n\n    function confirmBookRoom(room: Room) {\n        setRoomToBook(room);\n        setDialogOpen(true);\n    }\n\n    async function bookRoom(typeID: number) {\n        setDisableBookRoomButton(true);\n        let body: string = \"\";\n        if (location.state.employeeSIN === undefined) {\n            body =JSON.stringify({\n                type_id: typeID,\n                check_in: checkInDateToBook,\n                check_out: checkOutDateToBook\n            });\n        } else {\n            body =JSON.stringify({\n                type_id: typeID,\n                check_in: checkInDateToBook,\n                check_out: checkOutDateToBook,\n                employee_sin: location.state.employeeSIN\n            });\n        }\n\n        try {\n            let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + location.state.customerSIN + \"/reservations\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: body\n            })\n            if (response.status === 201) {\n                await checkAvailability();\n                openAlert('Successfully booked room', 'success');\n                setDialogOpen(false);\n            } else {\n                openAlert('Error: Unable to book room', 'error');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            openAlert('Error: Unable to book room', 'error');\n        }\n        setDisableBookRoomButton(false);\n    }\n\n    function openAlert(message: string, status: string) {\n        setAlertMessage(message);\n        setAlertStatus(status);\n        setAlertOpen(true);\n    }\n\n    function closeAlert() {\n        setAlertOpen(false);\n    }\n\n    async function checkAvailability() {\n        //Only check availability if filters have been changed\n        if (past[0] !== checkInDate || past[1] !== checkOutDate || past[2] !== numPeople) {\n            setDisableAvailability(true);\n            try {\n                let url: string = process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.hotelID + \"/rooms/availability\"\n                url += \"?check-in=\" + dateToString(checkInDate) + \"&check-out=\" + dateToString(checkOutDate) + \"&people=\" + numPeople;\n\n                let response: Response = await fetch(url);\n                if (response.status !== 200) {\n                    return;\n                }\n                const availableRooms: AvailableRoom[] = await response.json();\n                const newRoomData: Room[] = JSON.parse(JSON.stringify(roomData));\n                let roomNum: number = newRoomData.length;\n                newRoomData.forEach(room => {\n                    const roomInfo = getRoom(room.type_id, availableRooms);\n                    room.enabled = true;\n                    room.tooltip = \"\";\n                    room.rooms_available = room.total_number_rooms - roomInfo.occupancy;\n                    //Room capacity is too small; disable\n                    if (roomInfo.type_id === -1) {\n                        room.enabled = false;\n                        room.tooltip = \"Room capacity is too small\";\n                        roomNum--;\n                    }\n                    if (room.rooms_available <= 0) {\n                        room.enabled = false;\n                        room.tooltip = \"Room is booked up over these dates\"\n                        roomNum--;\n                    }\n                });\n                newRoomData.sort((r1: Room, r2: Room) => {\n                    if (r1.enabled && !r2.enabled) {\n                        return -1;\n                    }\n                    if (!r1.enabled && r2.enabled) {\n                        return 1;\n                    }\n                    return r1.type_id > r2.type_id ? -1 : 1;\n                })\n                setRoomData(newRoomData);\n                setNumRooms(roomNum);\n                setCheckInDateToBook(dateToString(checkInDate));\n                setCheckOutDateToBook(dateToString(checkOutDate));\n            } catch (error) {\n                console.error('Error:', error);\n            }\n            setDisableAvailability(false);\n        }\n        if (!availability) {\n            setAvailability(true);\n        }\n    }\n\n    function getRoom(typeID: number, roomData: AvailableRoom[]): AvailableRoom {\n        for (let i = 0; i < roomData.length; i++) {\n            if (roomData[i].type_id === typeID) {\n                return roomData[i];\n            }\n        }\n        return {\n            type_id: -1,\n            occupancy: -1\n        }\n    }\n\n    function setNumberOfPeople(num: number) {\n        if (num > 0) {\n            setNumPeople(num);\n            setAvailability(false);\n        }\n    }\n\n    function setCheckOut(date: MaterialUiPickersDate) {\n        if (date !== null && checkInDate !== null) {\n            if (date.getTime() <= checkInDate.getTime()) {\n                const checkIn: MaterialUiPickersDate = new Date();\n                checkIn.setMonth(date.getMonth())\n                checkIn.setDate(date.getDate() - 1)\n                setCheckInDate(checkIn);\n            }\n            setAvailability(false);\n            setCheckOutDate(date);\n        }\n    }\n\n    function setCheckIn(date: MaterialUiPickersDate) {\n        if (date !== null && checkOutDate !== null) {\n            if (date.getTime() >= checkOutDate.getTime()) {\n                const checkOut: MaterialUiPickersDate = new Date();\n                checkOut.setMonth(date.getMonth())\n                checkOut.setDate(date.getDate() + 1)\n                setCheckOutDate(checkOut);\n            }\n            setAvailability(false);\n            setCheckInDate(date);\n        }\n    }\n\n    function dateToString(date: Date): string {\n        let year: string = date.getFullYear().toString();\n        let month: string = '' + (date.getMonth() + 1);\n        let day: string = '' + date.getDate();\n\n        if (month.length < 2) {\n            month = '0' + month;\n        }\n        if (day.length < 2) {\n            day = '0' + day;\n        }\n        return year + '-' + month + '-' + day;\n    }\n\n    function getRoomAvailabilityMessage(numAvailable: number, total: number): string {\n        return numAvailable + '/' + total + ' rooms available';\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>{location.state.brandName}</Typography>\n            <Typography className={classes.centreTitleNoSpace}>{location.state.address}</Typography>\n            <GridList className={classes.gridParent}>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <Typography>Enter booking info to select a room:</Typography>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"check-in-dialog\"\n                            label=\"Check in date\"\n                            format=\"yyyy-MM-dd\"\n                            minDate={new Date()}\n                            value={checkInDate}\n                            onChange={(date: MaterialUiPickersDate) => setCheckIn(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"check-out-dialog\"\n                            label=\"Check out date\"\n                            format=\"yyyy-MM-dd\"\n                            minDate={tomorrow}\n                            value={checkOutDate}\n                            onChange={(date: MaterialUiPickersDate) => setCheckOut(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <TextField\n                        id=\"capacity-number\"\n                        label=\"# of people\"\n                        type=\"number\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        variant=\"outlined\"\n                        value={numPeople}\n                        onChange={e => setNumberOfPeople(parseInt(e.target.value))}\n                    />\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <Button variant=\"contained\" onClick={checkAvailability} disabled={disableAvailability}>Check\n                        Availability</Button>\n                </Grid>\n            </GridList>\n            <Typography className={classes.smallerTitle}>{numRooms} Rooms Found</Typography>\n            <div className={classes.outsideGrid}>\n                <GridList cols={1} cellHeight={190} className={classes.grid}>\n                    <div style={{height: '1em'}}/>\n                    {\n                        roomData.map((room: Room) => {\n                            return (\n                                <GridListTile key={room.type_id} cols={1}>\n                                    <BootstrapTooltip title={room.tooltip} aria-label=\"add\" placement=\"top\">\n                                        <Paper elevation={3} key={room.type_id} className={classes.brandPaper}\n                                               style={room.enabled ? {} : {\n                                                   backgroundColor: 'grey'\n                                               }}>\n                                            <div style={room.enabled ? {opacity: '1'} : {\n                                                opacity: '0.40'\n                                            }}>\n                                                <Grid container spacing={2} alignItems=\"center\">\n                                                    <Grid className={classes.hotelGrid}>\n                                                        <Typography\n                                                            className={classes.hotelTitle}>{room.title}</Typography>\n                                                        <Typography>Amenities: {room.amenities.length === 0 ? \"None\" : room.amenities.join(', ')}</Typography>\n                                                        <Typography>Max\n                                                            capacity: {room.room_capacity} adults</Typography>\n                                                        <Typography>View: {room.view}</Typography>\n                                                        <Typography>Extendable: {room.is_extendable ? \"Yes\" : \"No\"}</Typography>\n                                                    </Grid>\n                                                    <Divider orientation=\"vertical\" flexItem\n                                                             className={classes.divider}/>\n                                                    <Grid container item xs={3} alignItems=\"center\">\n                                                        <Grid container className={classes.priceDiv}>\n                                                            <Typography\n                                                                className={classes.hotelTitle}>${room.price}/night</Typography>\n                                                            <Typography>{getRoomAvailabilityMessage(room.rooms_available, room.total_number_rooms)}</Typography>\n                                                            <br/>\n                                                            <BootstrapTooltip\n                                                                title={(!availability && room.enabled) ? \"Check availability to book a room\" : \"\"}\n                                                                aria-label=\"add\" placement=\"top\">\n                                                                <div>\n                                                                    <Button variant='contained'\n                                                                            onClick={() => confirmBookRoom(room)}\n                                                                            disabled={!room.enabled || !availability}>\n                                                                        Book Room\n                                                                    </Button>\n                                                                </div>\n                                                            </BootstrapTooltip>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </div>\n                                        </Paper>\n                                    </BootstrapTooltip>\n                                </GridListTile>\n                            );\n                        })\n                    }\n                </GridList>\n            </div>\n            <ConfirmationDialog dialogOpen={dialogOpen} setDialogOpen={setDialogOpen} roomToBook={roomToBook}\n                                classes={classes} location={location} checkInDateToBook={checkInDateToBook}\n                                bookRoom={bookRoom} checkOutDateToBook={checkOutDateToBook}\n                                disableBookRoomButton={disableBookRoomButton}/>\n            <Snackbar open={alertOpen} autoHideDuration={6000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity={alertStatus}>\n                    {alertMessage}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}","import {Box, Button, makeStyles, Paper, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarEmployee} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '1.4em'\n    },\n    inPaper: {\n        display: 'flex'\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: '2em',\n        flexGrow: 1\n    },\n    buttonSpacing: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em',\n        marginTop: '1em',\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    gridSpacing: {\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    paperContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        display: 'inline-block',\n        padding: '1em',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    topGrid: {\n        maxWidth: '45em'\n    }\n}));\n\ninterface Employee {\n    employeeSIN: string;\n    employeeName: string;\n    employeeAddress: string;\n    salary: string;\n    jobTitle: string;\n    brandName: string;\n    brandID: number;\n    hotelID: number;\n    hotelAddress: string;\n}\n\nexport default function WelcomeEmployee() {\n    const classes = useStyles();\n    const location = useLocation<Employee>();\n    const history = useHistory();\n\n    const [checkInDisabled, setCheckInDisabled]: [boolean, any] = useState(false);\n    const [checkOutDisabled, setCheckOutDisabled]: [boolean, any] = useState(false);\n    const [manageEmployeeDisabled, setManageEmployeeDisabled]: [boolean, any] = useState(false);\n\n    const welcomeMessage = location.state.brandName + \", \" + location.state.hotelAddress\n\n    async function checkIn() {\n        setCheckInDisabled(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.hotelID + \"/reservations?action=check-in\");\n            if (response.status !== 200) {\n                setCheckInDisabled(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/employee/checkin', {\n                response: response,\n                checkIn: true,\n                employeeSIN: location.state.employeeSIN\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            setCheckInDisabled(false);\n        }\n    }\n\n    function manageCustomer() {\n        history.push('/ui/employee/managecustomer', {\n            employeeSIN: location.state.employeeSIN,\n            employeeName: location.state.employeeName,\n            jobTitle: location.state.jobTitle,\n            hotelID: location.state.hotelID,\n            brandName: location.state.brandName,\n            address: location.state.hotelAddress\n        });\n    }\n\n    async function checkOut() {\n        setCheckOutDisabled(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.hotelID + \"/reservations?action=check-out\");\n            if (response.status !== 200) {\n                setCheckOutDisabled(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/employee/checkout', {\n                response: response,\n                checkOut: false,\n                employeeSIN: location.state.employeeSIN\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            setCheckOutDisabled(false);\n        }\n    }\n\n    function ManagerActions() {\n        if (location.state.jobTitle === 'Manager') {\n            return (\n                <>\n                    <Typography className={classes.centre}>Manager Actions:</Typography>\n                    <br/>\n                    <div className={classes.paperContainer}>\n                        <Button variant=\"contained\" color='primary' disabled={manageEmployeeDisabled} onClick={manageEmployee}>\n                            Manage Employees\n                        </Button>\n                    </div>\n                </>\n            )\n        }\n        return <></>\n    }\n\n    async function manageEmployee() {\n        setManageEmployeeDisabled(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.hotelID + \"/employees\");\n            if (response.status !== 200) {\n                setManageEmployeeDisabled(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/employee/manageemployee', {\n                response: response,\n                checkIn: true,\n                managerSIN: location.state.employeeSIN,\n                brandName: location.state.brandName,\n                hotelAddress: location.state.hotelAddress,\n                hotelID: location.state.hotelID\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            setManageEmployeeDisabled(false);\n        }\n    }\n\n    return (\n        <>\n            <TitleBarEmployee/>\n            <Typography className={classes.centreTitle}>{welcomeMessage}</Typography>\n            <Typography className={classes.centre}>Your profile:</Typography>\n            <div className={classes.paperContainer}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Typography className={classes.inPaper}>Name: {location.state.employeeName}</Typography>\n                    <Typography className={classes.inPaper}>Address: {location.state.employeeAddress}</Typography>\n                    <Typography className={classes.inPaper}>Job title: {location.state.jobTitle}</Typography>\n                    <Typography className={classes.inPaper}>Salary: ${location.state.salary}</Typography>\n                </Paper>\n            </div>\n            <div className={classes.paperContainer}>\n                <Box display=\"flex\" flexDirection=\"row\" p={1} m={1}>\n                    <Box p={1}>\n                        <Button variant=\"contained\" className={classes.buttonSpacing} disabled={checkInDisabled}\n                                onClick={() => checkIn()}>\n                            Customer Check In\n                        </Button>\n                    </Box>\n                    <Box p={1}>\n                        <Button variant=\"contained\" className={classes.buttonSpacing} disabled={checkOutDisabled}\n                                onClick={() => checkOut()}>\n                            Customer Check Out\n                        </Button>\n                    </Box>\n                    <Box p={1}>\n                        <Button variant=\"contained\" className={classes.buttonSpacing}\n                                onClick={() => manageCustomer()}>\n                            Manage Customer\n                        </Button>\n                    </Box>\n                </Box>\n            </div>\n            <br/>\n            <ManagerActions/>\n        </>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper, Snackbar, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {Severity, TitleBarCustomer} from \"../index\";\nimport {useLocation} from \"react-router-dom\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    centreSubTitle: {\n        paddingTop: '0.5em',\n        fontSize: '1.4em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    hotelGrid: {\n        width: '70%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    centreDiv: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em',\n        marginTop: '1em'\n    }\n}));\n\ninterface Reservation {\n    booking_id: number;\n    date_of_registration: string;\n    check_in_day: string;\n    check_out_day: string;\n    title: string;\n    is_extendable: boolean;\n    amenities: string[];\n    view: string;\n    price: string;\n    customer_sin: string;\n    customer_name: string;\n}\n\nconst GenerateReservations = ({\n                                  classes,\n                                  reservations,\n                                  editButtonToDisable,\n                                  setEditButtonToDisable,\n                                  setAlertMessage,\n                                  setAlertStatus,\n                                  setAlertOpen,\n                                  setReservations,\n                                  isCheckIn,\n                                  searchSIN,\n                                  employeeSIN\n                              }: any) => {\n\n    const filteredReservations = reservations.filter((reservation: Reservation) => reservation.customer_sin.includes(searchSIN));\n    if (filteredReservations.length === 0) {\n        return (\n            <GridList cols={1} cellHeight={220} className={classes.grid}>\n                <GridListTile cols={1}>\n                    <Typography className={classes.centreSubTitle}>No reservations found!</Typography>\n                </GridListTile>\n            </GridList>\n        )\n    }\n\n    return <GridList cols={1} cellHeight={220} className={classes.grid}>\n        {\n            filteredReservations.map((reservation: Reservation, index: number) => {\n                const checkIn: Date = new Date(reservation.check_in_day.replace('-', '/'))\n                const checkOut: Date = new Date(reservation.check_out_day.replace('-', '/'))\n                const days: number = Math.round(Math.abs(+checkIn - +checkOut) / 24 / 60 / 60 / 1000)\n                const totalPrice: string = (days * parseFloat(reservation.price)).toFixed(2)\n\n                if (reservation.amenities.length === 0) {\n                    reservation.amenities.push(\"None\")\n                }\n\n                return (\n                    <GridListTile key={reservation.booking_id} cols={1}>\n                        <Paper elevation={3} key={reservation.booking_id} className={classes.brandPaper}>\n                            <Grid container spacing={2} alignItems=\"center\">\n                                <Grid className={classes.hotelGrid}>\n                                    <Typography\n                                        className={classes.hotelTitle}>Room: {reservation.title} | {reservation.check_in_day} to {reservation.check_out_day}\n                                    </Typography>\n                                    <Typography>Customer name: {reservation.customer_name}</Typography>\n                                    <Typography>Customer SIN: {reservation.customer_sin}</Typography>\n                                    <Typography>Amenities: {reservation.amenities.join(', ')}</Typography>\n                                    <Typography>View: {reservation.view}</Typography>\n                                    <Typography>\n                                        Extendable: {reservation.is_extendable ? \"Yes\" : \"No\"}\n                                    </Typography>\n                                </Grid>\n                                <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                <Grid item xs={3}>\n                                    <Grid className={classes.priceDiv}>\n                                        <Typography>Booked on {reservation.date_of_registration}</Typography>\n                                        <Typography className={classes.hotelTitle}>Total price:</Typography>\n                                        <Typography className={classes.hotelTitle}>${totalPrice}</Typography>\n                                        <br/>\n                                        <Button variant='contained'\n                                                onClick={() => patchReservation(isCheckIn ? 'Renting' : 'Archived', setEditButtonToDisable, reservations, reservation, setAlertMessage, setAlertStatus, setAlertOpen, setReservations, index, employeeSIN)}\n                                                disabled={editButtonToDisable === reservation.booking_id}>\n                                            {isCheckIn ? \"Check In\" : \"Check Out\"}\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </GridListTile>\n                );\n            })\n        }\n    </GridList>\n}\n\nasync function patchReservation(action: string, setEditButtonToDisable: any, reservations: Reservation[], reservation: Reservation, setAlertMessage: any, setAlertStatus: any, setAlertOpen: any, setReservations: any, index: number, employeeSIN: string) {\n    setEditButtonToDisable(reservation.booking_id);\n    try {\n        let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + reservation.customer_sin + \"/reservations/\" + reservation.booking_id, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                status: action,\n                employee_sin: employeeSIN\n            })\n        })\n        if (response.status === 204) {\n            if (action === 'Renting') {\n                openAlert('Successfully checked in customer', 'success', setAlertMessage, setAlertStatus, setAlertOpen);\n            } else {\n                openAlert('Successfully checked out customer', 'success', setAlertMessage, setAlertStatus, setAlertOpen);\n            }\n            const newReservations: Reservation[] = [...reservations];\n            newReservations.splice(index, 1);\n            setReservations(newReservations);\n        } else {\n            openAlert('Error: Unable to modify reservation', 'error', setAlertMessage, setAlertStatus, setAlertOpen);\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        openAlert('Error: Unable to modify reservation', 'error', setAlertMessage, setAlertStatus, setAlertOpen)\n    }\n    setEditButtonToDisable(-1);\n}\n\nfunction openAlert(message: string, status: string, setAlertMessage: any, setAlertStatus: any, setAlertOpen: any) {\n    setAlertMessage(message);\n    setAlertStatus(status);\n    setAlertOpen(true);\n}\n\nexport default function CheckCustomer() {\n    const classes = useStyles();\n    const location = useLocation<{\n        response: Reservation[];\n        checkIn: boolean;\n        employeeSIN: string;\n    }>();\n\n    location.state.response.sort((r1: Reservation, r2: Reservation) => (r1.check_in_day > r2.check_in_day) ? 1 : -1);\n\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertStatus, setAlertStatus]: [Severity, any] = useState(\"success\");\n    const [editButtonToDisable, setEditButtonToDisable]: [number, any] = useState(-1);\n    const [reservations, setReservations]: [Reservation[], any] = useState([...location.state.response]);\n    const [searchSIN, setSearchSIN]: [string, any] = useState(\"\");\n\n    const dateWords = new Date().toDateString();\n    const subTitle = location.state.checkIn ? 'For ' + dateWords : 'Customers currently renting rooms'\n\n    function closeAlert() {\n        setAlertOpen(false);\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography\n                className={classes.centreTitle}>Customer {location.state.checkIn ? 'Check In' : 'Check Out'}</Typography>\n            <Typography className={classes.centreSubTitle}>{subTitle}</Typography>\n            <div className={classes.centreDiv}>\n                <TextField label=\"Search by SIN\" variant=\"outlined\" value={searchSIN}\n                           onChange={event => setSearchSIN(event.currentTarget.value)}/>\n            </div>\n            <GenerateReservations classes={classes} reservations={reservations}\n                                  editButtonToDisable={editButtonToDisable} employeeSIN={location.state.employeeSIN}\n                                  setEditButtonToDisable={setEditButtonToDisable} setAlertMessage={setAlertMessage}\n                                  setAlertStatus={setAlertStatus} setAlertOpen={setAlertOpen} searchSIN={searchSIN}\n                                  setReservations={setReservations} isCheckIn={location.state.checkIn}/>\n            <Snackbar open={alertOpen} autoHideDuration={6000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity={alertStatus}>\n                    {alertMessage}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}","import {\n    Button,\n    Dialog, DialogActions,\n    DialogTitle,\n    Grid,\n    GridList,\n    makeStyles,\n    Paper, Snackbar,\n    TextField,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {Severity, TitleBarEmployee} from \"../index\";\nimport {useHistory, useLocation,} from \"react-router-dom\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(() => ({\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    dateGrid: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    gridParent: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    subTitle: {\n        fontSize: '1.4em'\n    },\n    paperContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        display: 'inline-block',\n        padding: '1em',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inPaper: {\n        display: 'flex'\n    },\n    dialogTitle: {\n        fontSize: \"1.8em\",\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    dialogAddress: {\n        marginLeft: \"0.5em\",\n        marginRight: \"0.5em\",\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    }\n}));\n\ninterface CustomerResponse {\n    customer_sin: string;\n    customer_name: string;\n    customer_address: string;\n    customer_email: string;\n    customer_phone: string;\n}\n\ninterface CustomerError {\n    error: string;\n    message: string;\n}\n\nconst CreateCustomerDialog = ({\n                                  dialogOpen, setDialogOpen,\n                                  classes,\n                                  customerSIN,\n                                  setAlertMessage,\n                                  setAlertStatus,\n                                  setAlertOpen,\n                                  setCustomerData,\n                                  customerName, setCustomerName,\n                                  customerAddress, setCustomerAddress,\n                                  customerPhone, setCustomerPhone,\n                                  customerEmail, setCustomerEmail\n                              }: any) => {\n\n    const [nameError, setNameError]: [boolean, any] = useState(false);\n    const [addressError, setAddressError]: [boolean, any] = useState(false);\n    const [emailError, setEmailError]: [boolean, any] = useState(false);\n    const [phoneError, setPhoneError]: [boolean, any] = useState(false);\n\n    const [disableCreateCustomer, setDisableCreateCustomer]: [boolean, any] = useState(false);\n\n    return <Dialog onClose={() => setDialogOpen(false)} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n        <DialogTitle id=\"dialog-title\" className={classes.dialogTitle}>\n            <Typography className={classes.dialogTitle}>Create Customer Profile</Typography>\n        </DialogTitle>\n        <div className={classes.dialogAddress}>\n            <Typography align=\"center\">Customer SIN: {customerSIN}</Typography>\n            <br/>\n            <TextField label=\"Customer Name\" variant=\"outlined\" value={customerName} error={nameError}\n                       helperText={nameError ? \"Must provide name\" : \"\"}\n                       onChange={event => setCustomerName(event.currentTarget.value)}/>\n            <br/>\n            <TextField label=\"Customer Address\" variant=\"outlined\" value={customerAddress} error={addressError}\n                       helperText={addressError ? \"Must provide address\" : \"\"}\n                       onChange={event => setCustomerAddress(event.currentTarget.value)}/>\n            <br/>\n            <TextField label=\"Customer Email\" variant=\"outlined\" value={customerEmail} error={emailError}\n                       helperText={emailError ? \"Must provide valid email\" : \"\"}\n                       onChange={event => setCustomerEmail(event.currentTarget.value)}/>\n            <br/>\n            <TextField label=\"Customer Phone Number\" variant=\"outlined\" value={customerPhone} error={phoneError}\n                       helperText={phoneError ? \"Must provide valid phone number\" : \"\"}\n                       onChange={event => setCustomerPhone(event.currentTarget.value)}/>\n            <br/>\n        </div>\n        <DialogActions>\n            <Button disabled={disableCreateCustomer}\n                    onClick={() => createCustomer(customerSIN, customerName, customerAddress, customerEmail, customerPhone,\n                        setDisableCreateCustomer, setNameError, setAddressError, setEmailError, setPhoneError,\n                        setAlertMessage, setAlertStatus, setAlertOpen, setCustomerData, setDialogOpen)}\n                    variant=\"contained\"\n                    color=\"primary\">\n                Create Profile\n            </Button>\n            <Button onClick={() => {\n                setDialogOpen(false);\n            }} variant=\"contained\" color=\"secondary\">\n                Cancel\n            </Button>\n        </DialogActions>\n    </Dialog>\n};\n\nasync function createCustomer(customerSIN: string, name: string, address: string, email: string,\n                              phoneNumber: string, setDisableCreateCustomer: any, setNameError: any,\n                              setAddressError: any, setEmailError: any, setPhoneError: any,\n                              setAlertMessage: any, setAlertStatus: any, setAlertOpen: any,\n                              setCustomerData: any, setDialogOpen: any) {\n    const isNameError: boolean = name.length === 0;\n    const isAddressError: boolean = address.length === 0;\n    let isEmailError: boolean = email.includes(' ') || email.indexOf('@') < 1\n    if (!isEmailError) {\n        const index: number = email.indexOf('.', email.indexOf('@'))\n        if (index < 3 || index === email.length - 1) {\n            isEmailError = true;\n        }\n    }\n    const isPhoneError: boolean = !(/^(?:(?:\\+?1\\s*(?:[.-]\\s*)?)?(?:\\(\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\s*\\)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\s*(?:[.-]\\s*)?)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\s*(?:[.-]\\s*)?([0-9]{4})(?:\\s*(?:#|x\\.?|ext\\.?|extension)\\s*(\\d+))?$/).test(phoneNumber);\n\n    setNameError(isNameError);\n    setAddressError(isAddressError);\n    setEmailError(isEmailError);\n    setPhoneError(isPhoneError);\n\n    if (isNameError || isAddressError || isEmailError || isPhoneError) {\n        return;\n    }\n\n    setDisableCreateCustomer(true);\n\n    try {\n        let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                customer_sin: customerSIN,\n                customer_name: name,\n                customer_address: address,\n                customer_email: email,\n                customer_phone: phoneNumber\n            })\n        })\n        if (response.status === 201) {\n            setCustomerData({\n                customer_sin: customerSIN,\n                customer_name: name,\n                customer_address: address,\n                customer_email: email,\n                customer_phone: phoneNumber\n            });\n            openAlert('Successfully created customer profile', 'success', setAlertMessage, setAlertStatus, setAlertOpen);\n            setDialogOpen(false);\n        } else {\n            openAlert('Error: Unable to created customer profile', 'error', setAlertMessage, setAlertStatus, setAlertOpen);\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        openAlert('Error: Unable to created customer profile', 'error', setAlertMessage, setAlertStatus, setAlertOpen);\n    }\n    setDisableCreateCustomer(false);\n}\n\nfunction openAlert(message: string, status: string, setAlertMessage: any, setAlertStatus: any, setAlertOpen: any) {\n    setAlertMessage(message);\n    setAlertStatus(status);\n    setAlertOpen(true);\n}\n\ninterface ManageCustomerState {\n    employeeSIN: string;\n    employeeName: string;\n    jobTitle: string;\n    hotelID: number;\n    brandName: string;\n    address: string;\n}\n\nexport default function ManageCustomer() {\n    const classes = useStyles();\n    const history = useHistory();\n    const location = useLocation<ManageCustomerState>();\n\n    const [SIN, setSIN] = useState(\"\");\n    const [disableFindCustomer, setDisableFindCustomer]: [boolean, any] = useState(false);\n    const [customerData, setCustomerData]: [CustomerResponse | CustomerError | null, any] = useState(null);\n    const [disableReservations, setDisableReservations]: [boolean, any] = useState(false);\n    const [disableCreate, setDisableCreate]: [boolean, any] = useState(false);\n    const [dialogOpen, setDialogOpen]: [boolean, any] = useState(false);\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertStatus, setAlertStatus]: [Severity, any] = useState(\"success\");\n\n    const [customerName, setCustomerName]: [string, any] = useState(\"\");\n    const [customerAddress, setCustomerAddress]: [string, any] = useState(\"\");\n    const [customerEmail, setCustomerEmail]: [string, any] = useState(\"\");\n    const [customerPhone, setCustomerPhone]: [string, any] = useState(\"\");\n\n    const sinRegex: RegExp = /^[0-9]{3}-[0-9]{3}-[0-9]{3}$/;\n\n    function validateSIN(): boolean {\n        return !sinRegex.test(SIN) && SIN.length !== 0;\n    }\n\n    function closeAlert() {\n        setAlertOpen(false);\n    }\n\n    function keyPressed(e: React.KeyboardEvent<HTMLDivElement>) {\n        if (e.key === 'Enter' && sinRegex.test(SIN)) {\n            findCustomer();\n        }\n    }\n\n    function ShowCustomer() {\n        if (customerData === null) {\n            return <></>\n        } else if (customerData.hasOwnProperty('error')) {\n            return <>\n                <Typography className={classes.subTitle} align=\"center\">Customer not found. Try searching a different\n                    social insurance number, or create a new customer profile:</Typography>\n                <br/>\n                <div className={classes.paperContainer}>\n                    <Button variant=\"contained\" onClick={() => {\n                        setCustomerName(\"\");\n                        setCustomerAddress(\"\");\n                        setCustomerEmail(\"\");\n                        setCustomerPhone(\"\");\n                        setDialogOpen(true);\n                    }}>Create Customer Account</Button>\n                </div>\n            </>\n        }\n        return (\n            <>\n                <Typography className={classes.subTitle}\n                            align=\"center\">Customer: {\"customer_name\" in customerData ? customerData.customer_name : ''}</Typography>\n                <div className={classes.paperContainer}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Typography\n                            className={classes.inPaper}>Address: {\"customer_address\" in customerData ? customerData.customer_address : ''}</Typography>\n                        <Typography\n                            className={classes.inPaper}>Email: {\"customer_email\" in customerData ? customerData.customer_email : ''}</Typography>\n                        <Typography className={classes.inPaper}>Phone\n                            number: {\"customer_phone\" in customerData ? customerData.customer_phone : ''}</Typography>\n                    </Paper>\n                </div>\n                <br/><br/>\n                <div className={classes.paperContainer}>\n                    <Button variant=\"contained\" disabled={disableReservations}\n                            onClick={getReservations}>View Customer Bookings</Button>\n                </div>\n                <br/><br/>\n                <div className={classes.paperContainer}>\n                    <Button variant=\"contained\" disabled={disableCreate}\n                            onClick={getRooms}>Create Booking for Customer</Button>\n                </div>\n            </>\n        );\n    }\n\n    async function getReservations() {\n        if (customerData !== null && \"customer_name\" in customerData) {\n            setDisableReservations(true);\n            try {\n                let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + customerData.customer_sin + \"/reservations\");\n                if (response.status !== 200) {\n                    setDisableReservations(false);\n                    return;\n                }\n                response = await response.json();\n                history.push('/ui/employee/reservations', {\n                    customerName: customerData.customer_name,\n                    customerSIN: customerData.customer_sin,\n                    response: response,\n                    isCustomer: false\n                });\n            } catch (error) {\n                console.error('Error:', error);\n                setDisableReservations(false);\n            }\n        }\n    }\n\n    async function getRooms() {\n        setDisableCreate(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.hotelID + \"/rooms\");\n            if (response.status !== 200 || customerData === null || !(\"customer_name\" in customerData)) {\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/employee/rooms', {\n                customerSIN: customerData.customer_sin,\n                customerName: customerData.customer_name,\n                customerAddress: customerData.customer_address,\n                customerEmail: customerData.customer_email,\n                customerPhone: customerData.customer_phone,\n                response: response,\n                brandName: location.state.brandName,\n                address: location.state.address,\n                hotelID: location.state.hotelID,\n                employeeName: location.state.employeeName,\n                jobTitle: location.state.jobTitle,\n                employeeSIN: location.state.employeeSIN\n            });\n        } catch (error) {\n            console.error('Error:', error);\n        }\n        setDisableCreate(false);\n    }\n\n    function findCustomer() {\n        setDisableFindCustomer(true);\n        fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + SIN)\n            .then(response => {\n                if (response.status === 200) {\n                    response.json().then((response: CustomerResponse) => {\n                        setCustomerData(response);\n                    })\n                } else if (response.status === 404) {\n                    response.json().then((response: CustomerError) => {\n                        setCustomerData(response);\n                    })\n                } else {\n                    console.error('Error: unable to get customer info');\n                }\n            }).catch(error => {\n                console.error('Error:', error);\n            }\n        );\n        setDisableFindCustomer(false);\n    }\n\n    return (\n        <>\n            <TitleBarEmployee/>\n            <Typography className={classes.centreTitle}>Manage Customer</Typography>\n            <GridList className={classes.gridParent}>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <Typography>Enter customer SIN:</Typography>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <TextField error={validateSIN()}\n                               helperText={validateSIN() ? \"SIN must have format XXX-XXX-XXX\" : \"\"}\n                               onChange={event => setSIN(event.currentTarget.value)}\n                               onKeyPress={e => keyPressed(e)}\n                               id=\"outlined-basic\" label=\"Social Insurance Number\" variant=\"outlined\" value={SIN}/>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <Button variant=\"contained\" onClick={() => findCustomer()}\n                            disabled={!sinRegex.test(SIN) || disableFindCustomer}>\n                        Find Customer\n                    </Button>\n                </Grid>\n            </GridList>\n            <ShowCustomer/>\n            <CreateCustomerDialog dialogOpen={dialogOpen} setDialogOpen={setDialogOpen} classes={classes}\n                                  setAlertMessage={setAlertMessage} setAlertStatus={setAlertStatus}\n                                  setAlertOpen={setAlertOpen} setCustomerData={setCustomerData}\n                                  customerName={customerName} setCustomerName={setCustomerName} customerSIN={SIN}\n                                  customerAddress={customerAddress} setCustomerAddress={setCustomerAddress}\n                                  customerEmail={customerEmail} setCustomerEmail={setCustomerEmail}\n                                  customerPhone={customerPhone} setCustomerPhone={setCustomerPhone}/>\n            <Snackbar open={alertOpen} autoHideDuration={6000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity={alertStatus}>\n                    {alertMessage}\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper, Snackbar,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {Severity, TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em',\n        width: '100%'\n    },\n    subTitle: {\n        fontSize: '1.4em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    empName: {\n        fontWeight: 'bold',\n        fontSize: '1.5em',\n        width: '100%'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    brandGrid: {\n        width: '80%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    }\n}));\n\ninterface Employee {\n    employee_sin: string;\n    employee_name: string;\n    employee_address: string;\n    salary: string;\n    job_title: string;\n}\n\ninterface State {\n    response: any;\n    checkIn: boolean;\n    managerSIN: string;\n    brandName: string;\n    hotelAddress: string;\n    hotelID: number;\n}\n\nexport default function ManageEmployee() {\n    const classes = useStyles();\n    const location = useLocation<State>();\n    const history = useHistory();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        if (location.state.response[i].employee_sin === location.state.managerSIN) {\n            buttonStateValues.push(true);\n        } else {\n            buttonStateValues.push(false)\n        }\n    }\n\n    const [buttonStates, setButtonStates]: [boolean[], any] = useState(buttonStateValues);\n    const [employees, setEmployees]: [Employee[], any] = useState([...location.state.response]);\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertStatus, setAlertStatus]: [Severity, any] = useState(\"success\");\n\n    function openAlert(message: string, status: Severity) {\n        setAlertMessage(message);\n        setAlertStatus(status);\n        setAlertOpen(true);\n    }\n\n    function closeAlert() {\n        setAlertOpen(false);\n    }\n\n    async function deleteEmployee(emp: Employee, index: number) {\n        let newStates = [...buttonStates]\n        newStates[index] = true;\n        setButtonStates(newStates);\n        try {\n            let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.hotelID + \"/employees/\" + emp.employee_sin, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    manager_sin: location.state.managerSIN\n                })\n            })\n            if (response.status !== 204) {\n                let newStates = [...buttonStates]\n                newStates[index] = false;\n                setButtonStates(newStates);\n                openAlert('Error: Failed to remove employee', 'error');\n                return;\n            }\n            const newButtonStates = [...buttonStates];\n            const newEmployees = [...employees];\n            newButtonStates.splice(index, 1);\n            newEmployees.splice(index, 1);\n            setButtonStates(newButtonStates);\n            setEmployees(newEmployees);\n            openAlert('Successfully removed employee', 'success')\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[index] = false;\n            setButtonStates(newStates);\n            openAlert('Error: Failed to remove employee', 'error');\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>Hotel Employees</Typography>\n            <Typography\n                className={classes.subTitle}>{location.state.brandName + \", \" + location.state.hotelAddress}\n            </Typography>\n            <GridList cols={1} cellHeight={200} className={classes.grid}>\n                {\n                    employees.map((emp: Employee, index: number) => {\n                        return (\n                            <GridListTile key={emp.employee_sin} cols={1}>\n                                <Paper elevation={3} key={emp.employee_sin} className={classes.brandPaper}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid className={classes.brandGrid}>\n                                            <Typography className={classes.empName}>{emp.employee_name}</Typography>\n                                            <Typography>{emp.job_title}</Typography>\n                                            <Typography>SIN: {emp.employee_sin}</Typography>\n                                            <Typography>Address: {emp.employee_address}</Typography>\n                                            <Typography>Salary: {emp.salary}</Typography>\n                                        </Grid>\n                                        <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                        <Grid item xs={2}>\n                                            <Grid className={classes.priceDiv}>\n                                                <Button variant='contained' color='secondary'\n                                                        disabled={buttonStates[index]}\n                                                        onClick={() => deleteEmployee(emp, index)}>\n                                                    Delete\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </GridListTile>\n                        );\n                    })\n                }\n            </GridList>\n            <Snackbar open={alertOpen} autoHideDuration={6000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity={alertStatus}>\n                    {alertMessage}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport SignInEmployee from \"./employee/SignInEmployee\";\nimport SignInCustomer from \"./customer/SignInCustomer\";\nimport {AppBar, makeStyles, Typography} from \"@material-ui/core\";\nimport Name from \"./customer/Name\";\nimport WelcomeCustomer from \"./customer/WelcomeCustomer\";\nimport HotelBrand from \"./customer/HotelBrand\";\nimport Hotel from \"./customer/Hotel\";\nimport Reservations from \"./Reservations\";\nimport Rooms from \"./Rooms\";\nimport WelcomeEmployee from \"./employee/WelcomeEmployee\";\nimport CheckCustomer from \"./employee/CheckCustomer\";\nimport ManageCustomer from \"./employee/ManageCustomer\";\nimport ManageEmployee from \"./employee/ManageEmployee\";\n\nrequire('dotenv').config()\n\nconst useTitleStyles = makeStyles(() => ({\n    title: {\n        fontSize: \"2.5em\",\n        fontWeight: \"bold\",\n        paddingLeft: \"1em\"\n    }\n}));\n\nexport type Severity = \"error\" | \"success\" | \"info\" | \"warning\" | undefined;\n\nexport function TitleBarCustomer() {\n    const classes = useTitleStyles();\n    return <AppBar position=\"static\">\n        <Typography className={classes.title}>ExpressBook Customer Portal</Typography>\n    </AppBar>\n}\n\nexport function TitleBarEmployee() {\n    const classes = useTitleStyles();\n    return <AppBar position=\"static\">\n        <Typography className={classes.title}>ExpressBook Employee Portal</Typography>\n    </AppBar>\n}\n\nReactDOM.render(\n    <>\n        <Router>\n            <Switch>\n                <Route exact path=\"/ui/employee\" component={SignInEmployee}/>\n                <Route exact path=\"/ui/employee/welcome\" component={WelcomeEmployee}/>\n                <Route exact path=\"/ui/employee/checkin\" component={CheckCustomer}/>\n                <Route exact path=\"/ui/employee/checkout\" component={CheckCustomer}/>\n                <Route exact path=\"/ui/employee/managecustomer\" component={ManageCustomer}/>\n                <Route exact path=\"/ui/employee/reservations\" component={Reservations}/>\n                <Route exact path=\"/ui/employee/rooms\" component={Rooms}/>\n                <Route exact path=\"/ui/employee/manageemployee\" component={ManageEmployee}/>\n                <Route exact path=\"/ui/customer\" component={SignInCustomer}/>\n                <Route exact path=\"/ui/customer/name\" component={Name}/>\n                <Route exact path=\"/ui/customer/welcome\" component={WelcomeCustomer}/>\n                <Route exact path=\"/ui/customer/brands\" component={HotelBrand}/>\n                <Route exact path=\"/ui/customer/hotels\" component={Hotel}/>\n                <Route exact path=\"/ui/customer/reservations\" component={Reservations}/>\n                <Route exact path=\"/ui/customer/rooms\" component={Rooms}/>\n            </Switch>\n        </Router>\n    </>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}