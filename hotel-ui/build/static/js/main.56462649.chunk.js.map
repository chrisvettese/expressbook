{"version":3,"sources":["employee/SignInEmployee.tsx","customer/SignInCustomer.tsx","customer/Name.tsx","customer/WelcomeCustomer.tsx","customer/HotelBrand.tsx","customer/Hotel.tsx","Reservations.tsx","customer/Rooms.tsx","employee/WelcomeEmployee.tsx","employee/CheckCustomer.tsx","employee/ManageCustomer.tsx","index.tsx"],"names":["useStyles","makeStyles","sinCentre","paddingTop","display","alignItems","justifyContent","buttonCentre","centreTitle","fontWeight","fontSize","width","centre","textField","inPaper","marginTop","buttonSpacing","marginLeft","marginRight","paperContainer","paper","padding","theme","root","flexWrap","backgroundColor","palette","background","marginBottom","brandPaper","flexDirection","hotelTitle","grid","boxShadow","height","divider","brandGrid","priceDiv","hotelGrid","radioGroup","GenerateReservations","classes","reservations","editButtonToDisable","radioState","setEditButtonToDisable","setAlertMessage","setAlertStatus","setAlertOpen","customerSIN","setReservations","GridList","cols","cellHeight","className","filter","reservation","status","map","checkIn","Date","check_in_day","replace","checkOut","check_out_day","totalPrice","Math","round","abs","parseFloat","price","toFixed","amenities","length","push","GridListTile","Paper","elevation","Grid","container","spacing","Typography","title","physical_address","join","view","is_extendable","Divider","orientation","flexItem","item","xs","date_of_registration","booking_id","ReservationEditButton","Button","variant","onClick","patchReservation","disabled","action","a","fetch","process","method","headers","body","JSON","stringify","updateReservations","openAlert","console","error","bookingID","i","message","Reservations","location","useLocation","state","response","sort","r1","r2","useState","setRadioState","alertOpen","alertMessage","alertStatus","titleMessage","isCustomer","customerName","closeAlert","TitleBarCustomer","RadioGroup","value","onChange","e","event","parseInt","target","setReservationRadioState","row","FormControlLabel","control","Radio","label","Snackbar","open","autoHideDuration","onClose","Alert","severity","centreTitleNoSpace","smallerTitle","outsideGrid","dateGrid","gridParent","dialogDiv","dialogHeader","dialogTitle","dialogAddress","fontStyle","useStylesBootstrap","arrow","color","common","black","tooltip","BootstrapTooltip","props","Tooltip","ConfirmationDialog","dialogOpen","setDialogOpen","roomToBook","checkInDateToBook","checkOutDateToBook","disableBookRoomButton","bookRoom","Dialog","aria-labelledby","DialogTitle","id","align","address","customerAddress","customerEmail","customerPhone","DialogActions","type_id","flexGrow","gridSpacing","topGrid","maxWidth","centreSubTitle","centreDiv","isCheckIn","searchSIN","filteredReservations","customer_sin","includes","index","customer_name","newReservations","splice","CheckCustomer","setSearchSIN","dateWords","toDateString","subTitle","TextField","currentTarget","CreateCustomerDialog","setCustomerData","setCustomerName","setCustomerAddress","setCustomerPhone","setCustomerEmail","nameError","setNameError","addressError","setAddressError","emailError","setEmailError","phoneError","setPhoneError","disableCreateCustomer","setDisableCreateCustomer","helperText","createCustomer","name","email","phoneNumber","isNameError","isAddressError","isEmailError","indexOf","isPhoneError","test","customer_address","customer_email","customer_phone","require","config","useTitleStyles","paddingLeft","AppBar","position","TitleBarEmployee","ReactDOM","exact","path","component","history","useHistory","SIN","setSIN","disableSignIn","setDisableSignIn","setError","sinRegex","validateSIN","checkEmployee","then","json","employeeSIN","employee_sin","employeeName","employee_name","employeeAddress","employee_address","salary","jobTitle","job_title","brandName","brand_name","brandID","brand_id","hotelID","hotel_id","hotelAddress","hotel_address","catch","log","onKeyPress","key","keyPressed","style","checkInDisabled","setCheckInDisabled","checkOutDisabled","setCheckOutDisabled","manageEmployeeDisabled","welcomeMessage","ManagerActions","Box","p","m","disableFindCustomer","setDisableFindCustomer","customerData","disableReservations","setDisableReservations","ShowCustomer","hasOwnProperty","getReservations","findCustomer","checkCustomer","setName","setAddress","setEmail","setPhoneNumber","disableUseButton","setDisableUseButton","submitInfo","disableHotelButton","setDisableHotelButton","disableReservationButton","setDisableReservationButton","goToBrandPage","goToReservationsPage","buttonStateValues","buttonStates","setButtonStates","newStates","brand","main_office_address","email_address","phone_number","number_of_hotels","getHotels","hotel","number_of_rooms","Rating","star_category","readOnly","checkInDate","setCheckInDate","tomorrow","setDate","getDate","checkOutDate","setCheckOutDate","setCheckInDateToBook","setCheckOutDateToBook","numPeople","setNumPeople","availability","setAvailability","disableAvailability","setDisableAvailability","roomData","setRoomData","numRooms","setNumRooms","setRoomToBook","setDisableBookRoomButton","past","typeID","check_in","check_out","checkAvailability","url","dateToString","availableRooms","newRoomData","parse","roomNum","forEach","room","roomInfo","getRoom","enabled","rooms_available","total_number_rooms","occupancy","date","year","getFullYear","toString","month","getMonth","day","utils","DateFnsUtils","margin","format","minDate","getTime","setMonth","setCheckIn","KeyboardButtonProps","setCheckOut","type","InputLabelProps","shrink","num","aria-label","placement","opacity","room_capacity","numAvailable","total","confirmBookRoom","document","getElementById"],"mappings":"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","file":"static/js/main.56462649.chunk.js","sourcesContent":["import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarEmployee} from \"../index\";\nimport {useHistory} from 'react-router-dom';\n\n\nconst useStyles = makeStyles(() => ({\n    sinCentre: {\n        paddingTop: '3em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    }\n}));\n\ninterface GetEmployeeResponse {\n    employee_sin: string;\n    employee_name: string;\n    employee_address: string;\n    salary: string;\n    job_title: string;\n    brand_name: string;\n    brand_id: number;\n    hotel_id: number;\n    hotel_address: string;\n}\n\nexport default function SignInEmployee() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [SIN, setSIN] = useState(\"\");\n    const [disableSignIn, setDisableSignIn] = useState(false);\n    const [error, setError] = useState(\"\");\n    const sinRegex: RegExp = /^[0-9]{3}-[0-9]{3}-[0-9]{3}$/;\n\n    function validateSIN(): boolean {\n        return !sinRegex.test(SIN) && SIN.length !== 0;\n    }\n\n    function keyPressed(e: React.KeyboardEvent<HTMLDivElement>) {\n        if (e.key === 'Enter' && sinRegex.test(SIN)) {\n            checkEmployee();\n        }\n    }\n\n    function checkEmployee() {\n        setDisableSignIn(true);\n        fetch(process.env.REACT_APP_SERVER_URL + \"/employees/\" + SIN)\n            .then(response => {\n                if (response.status === 200) {\n                    response.json().then((response: GetEmployeeResponse) => {\n                        history.push('/ui/employee/welcome', {\n                            employeeSIN: response.employee_sin,\n                            employeeName: response.employee_name,\n                            employeeAddress: response.employee_address,\n                            salary: response.salary,\n                            jobTitle: response.job_title,\n                            brandName: response.brand_name,\n                            brandID: response.brand_id,\n                            hotelID: response.hotel_id,\n                            hotelAddress: response.hotel_address\n                        })\n                    })\n                } else {\n                    setError(\"Unable to sign in. Please contact the hotel manager or database admin if you think this is a problem.\")\n                    setDisableSignIn(false);\n                }\n            }).catch(error => {\n                console.log('Error:', error);\n                setDisableSignIn(false);\n            }\n        )\n    }\n\n    return (\n        <>\n            <TitleBarEmployee/>\n            <Typography className={classes.centreTitle}>Sign In</Typography>\n            <div className={classes.sinCentre}>\n                <Typography>Please sign in to access the hotel management system:</Typography>\n            </div>\n            <div className={classes.sinCentre}>\n                <TextField error={validateSIN()} helperText={validateSIN() ? \"SIN must have format XXX-XXX-XXX\" : \"\"}\n                           onChange={event => setSIN(event.currentTarget.value)}\n                           onKeyPress={e => keyPressed(e)}\n                           id=\"outlined-basic\" label=\"Social Insurance Number\" variant=\"outlined\" value={SIN}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => checkEmployee()}\n                        disabled={!sinRegex.test(SIN) || disableSignIn}>Sign In</Button>\n            </div>\n            <div className={classes.sinCentre}>\n                <Typography style={{color: \"red\"}}>{error}</Typography>\n            </div>\n        </>\n    )\n}","import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory} from 'react-router-dom';\n\n\nconst useStyles = makeStyles(() => ({\n    sinCentre: {\n        paddingTop: '3em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    }\n}));\n\ninterface CustomerResponse {\n    customer_sin: string;\n    customer_name: string;\n    customer_address: string;\n    customer_email: string;\n    customer_phone: string;\n}\n\nexport default function SignInCustomer() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [SIN, setSIN] = useState(\"\");\n    const [disableSignIn, setDisableSignIn] = useState(false);\n    const sinRegex: RegExp = /^[0-9]{3}-[0-9]{3}-[0-9]{3}$/;\n\n    function validateSIN(): boolean {\n        return !sinRegex.test(SIN) && SIN.length !== 0;\n    }\n\n    function keyPressed(e: React.KeyboardEvent<HTMLDivElement>) {\n        if (e.key === 'Enter' && sinRegex.test(SIN)) {\n            checkCustomer();\n        }\n    }\n\n    function checkCustomer() {\n        setDisableSignIn(true);\n        fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + SIN)\n            .then(response => {\n                if (response.status === 404) {\n                    history.push('/ui/customer/name', {customerSIN: SIN})\n                } else {\n                    response.json().then((response: CustomerResponse) => {\n                        history.push('/ui/customer/welcome', {\n                            customerSIN: response.customer_sin,\n                            customerName: response.customer_name,\n                            customerAddress: response.customer_address,\n                            customerEmail: response.customer_email,\n                            customerPhone: response.customer_phone\n                        })\n                    })\n                }\n            }).catch(error => {\n                console.log('Error:', error);\n                setDisableSignIn(false);\n            }\n        )\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>Sign In</Typography>\n            <div className={classes.sinCentre}>\n                <Typography>To begin searching destinations, enter your social insurance number:</Typography>\n            </div>\n            <div className={classes.sinCentre}>\n                <TextField error={validateSIN()} helperText={validateSIN() ? \"SIN must have format XXX-XXX-XXX\" : \"\"}\n                           onChange={event => setSIN(event.currentTarget.value)}\n                           onKeyPress={e => keyPressed(e)}\n                           id=\"outlined-basic\" label=\"Social Insurance Number\" variant=\"outlined\" value={SIN}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => checkCustomer()}\n                        disabled={!sinRegex.test(SIN) || disableSignIn}>Sign In</Button>\n            </div>\n        </>\n    )\n}","import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '5em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    textField: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}));\n\nexport default function Name() {\n    const classes = useStyles();\n    const location = useLocation<{ customerSIN: string }>();\n    const history = useHistory();\n    const [name, setName] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n    const [nameError, setNameError]: [boolean, any] = useState(false);\n    const [addressError, setAddressError]: [boolean, any] = useState(false);\n    const [emailError, setEmailError]: [boolean, any] = useState(false);\n    const [phoneError, setPhoneError]: [boolean, any] = useState(false);\n    const [disableUseButton, setDisableUseButton]: [boolean, any] = useState(false);\n\n    async function submitInfo() {\n        const nameError: boolean = name.length === 0;\n        const addressError: boolean = address.length === 0;\n        let emailError: boolean = email.includes(' ') || email.indexOf('@') < 1\n        if (!emailError) {\n            const index: number = email.indexOf('.', email.indexOf('@'))\n            if (index < 3 || index === email.length - 1) {\n                emailError = true;\n            }\n        }\n        const phoneError: boolean = !(/^[+]?[(]?[0-9]{3}[)]?[-\\s.]?[0-9]{3}[-\\s.]?[0-9]{4,6}$/im).test(phoneNumber);\n\n        setNameError(nameError);\n        setAddressError(addressError);\n        setEmailError(emailError);\n        setPhoneError(phoneError);\n\n        if (nameError || addressError || emailError || phoneError) {\n            return;\n        }\n\n        if (name.length === 0 && address.length === 0) {\n            setNameError(true);\n            setAddressError(true)\n        } else if (name.length !== 0 && address.length === 0) {\n            setNameError(false);\n            setAddressError(true)\n        } else if (name.length === 0 && address.length !== 0) {\n            setNameError(true);\n            setAddressError(false)\n        } else {\n            setDisableUseButton(true);\n            try {\n                let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers\", {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        customer_sin: location.state.customerSIN,\n                        customer_name: name,\n                        customer_address: address,\n                        customer_email: email,\n                        customer_phone: phoneNumber\n                    })\n                })\n                if (response.status === 201) {\n                    history.push('/ui/customer/welcome', {\n                        customerSIN: location.state.customerSIN,\n                        customerName: name,\n                        customerAddress: address,\n                        customerEmail: email,\n                        customerPhone: phoneNumber\n                    })\n                }\n            } catch(error) {\n                console.error('Error:', error);\n                setDisableUseButton(false);\n            }\n        }\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <div className={classes.centre}>\n                <Typography>Welcome to ExpressBook. Please provide some information about yourself:</Typography>\n            </div>\n            <div className={classes.textField}>\n                <TextField label=\"Full Name\" variant=\"outlined\" value={name} error={nameError}\n                           helperText={nameError ? \"Must provide name\" : \"\"}\n                           onChange={event => setName(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.textField}>\n                <TextField label=\"Address\" variant=\"outlined\" value={address} error={addressError}\n                           helperText={addressError ? \"Must provide address\" : \"\"}\n                           onChange={event => setAddress(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.textField}>\n                <TextField label=\"Email\" variant=\"outlined\" value={email} error={emailError}\n                           helperText={emailError ? \"Must provide valid email\" : \"\"}\n                           onChange={event => setEmail(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.textField}>\n                <TextField label=\"Phone Number\" variant=\"outlined\" value={phoneNumber} error={phoneError}\n                           helperText={phoneError ? \"Must provide valid phone number\" : \"\"}\n                           onChange={event => setPhoneNumber(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => submitInfo()} disabled={disableUseButton}>Sign In</Button>\n            </div>\n        </>\n    )\n}","import {Button, makeStyles, Paper, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '1.4em'\n    },\n    inPaper: {\n        display: 'flex'\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: '2em'\n    },\n    buttonSpacing: {\n        marginLeft: '1.5em',\n        marginRight: '1.5em'\n    },\n    paperContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        display: 'inline-block',\n        padding: '1em',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}));\n\nexport default function WelcomeCustomer() {\n    const classes = useStyles();\n    const location = useLocation<{ customerSIN: string, customerName: string, customerAddress: string, customerEmail: string, customerPhone: string }>();\n    const history = useHistory();\n    const [disableHotelButton, setDisableHotelButton] = useState(false);\n    const [disableReservationButton, setDisableReservationButton] = useState(false);\n\n    const welcomeMessage = \"Welcome, \" + location.state.customerName;\n\n    async function goToBrandPage() {\n        setDisableHotelButton(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/brands\");\n            if (response.status !== 200) {\n                setDisableHotelButton(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/customer/brands', {\n                customerSIN: location.state.customerSIN,\n                customerAddress: location.state.customerAddress,\n                customerName: location.state.customerName,\n                customerEmail: location.state.customerEmail,\n                customerPhone: location.state.customerPhone,\n                response: response\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            setDisableHotelButton(false);\n        }\n    }\n\n    async function goToReservationsPage() {\n        setDisableReservationButton(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + location.state.customerSIN + \"/reservations\");\n            if (response.status !== 200) {\n                setDisableReservationButton(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/customer/reservations', {\n                customerName: location.state.customerName,\n                customerSIN: location.state.customerSIN,\n                response: response,\n                isCustomer: true\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            setDisableReservationButton(false);\n        }\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>{welcomeMessage}</Typography>\n            <Typography className={classes.centre}>Your profile:</Typography>\n            <div className={classes.paperContainer}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Typography className={classes.inPaper}>Address: {location.state.customerAddress}</Typography>\n                    <Typography className={classes.inPaper}>Email: {location.state.customerEmail}</Typography>\n                    <Typography className={classes.inPaper}>Phone number: {location.state.customerPhone}</Typography>\n                </Paper>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" className={classes.buttonSpacing} onClick={() => goToBrandPage()}\n                        disabled={disableHotelButton}>Find A Hotel</Button>\n                <Button variant=\"contained\" onClick={() => goToReservationsPage()} disabled={disableReservationButton}>My\n                    Reservations</Button>\n            </div>\n        </>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em',\n        width: '100%'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    brandGrid: {\n        width: '80%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    }\n}));\n\nexport default function HotelBrand() {\n    const classes = useStyles();\n    const location = useLocation<{\n        customerSIN: string,\n        customerName: string,\n        customerAddress: string,\n        customerEmail: string,\n        customerPhone: string,\n        response: any\n    }>();\n    const history = useHistory();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n\n    async function getHotels(index: number) {\n        let newStates = [...buttonStates]\n        newStates[index] = true;\n        setButtonStates(newStates);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/brands/\" + location.state.response[index].brand_id + \"/hotels\");\n            if (response.status !== 200) {\n                let newStates = [...buttonStates]\n                newStates[index] = false;\n                setButtonStates(newStates);\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/customer/hotels', {\n                customerSIN: location.state.customerSIN,\n                customerName: location.state.customerName,\n                customerAddress: location.state.customerAddress,\n                customerEmail: location.state.customerEmail,\n                customerPhone: location.state.customerPhone,\n                response: response,\n                brandName: location.state.response[index].name,\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[index] = false;\n            setButtonStates(newStates);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>Select a hotel brand to view hotels:</Typography>\n            <GridList cols={1} cellHeight={200} className={classes.grid}>\n                {\n                    location.state.response.map((brand: {\n                        brand_id: number;\n                        name: string;\n                        main_office_address: string;\n                        email_address: string;\n                        phone_number: string;\n                        number_of_hotels: number;\n                    }, index: number) => {\n                        return (\n                            <GridListTile key={brand.brand_id} cols={1}>\n                                <Paper elevation={3} key={brand.brand_id} className={classes.brandPaper}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid className={classes.brandGrid}>\n                                            <Typography className={classes.hotelTitle}>{brand.name}</Typography>\n                                            <Typography>Headquarters Address: {brand.main_office_address}</Typography>\n                                            <Typography>Email: {brand.email_address}</Typography>\n                                            <Typography>Phone: {brand.phone_number}</Typography>\n                                            <Typography>Number of hotels: {brand.number_of_hotels}</Typography>\n                                        </Grid>\n                                        <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                        <Grid item xs={2}>\n                                            <Grid className={classes.priceDiv}>\n                                                <Button variant='contained' onClick={() => getHotels(index)}\n                                                        disabled={buttonStates[index]}>Select</Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </GridListTile>\n                        );\n                    })\n                }\n            </GridList>\n        </div>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {Rating} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em',\n        width: '100%'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    hotelGrid: {\n        width: '80%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n\n    }\n}));\n\nexport default function Hotel() {\n    const classes = useStyles();\n    const location = useLocation<{\n        customerSIN: string,\n        customerName: string,\n        customerAddress: string\n        customerEmail: string,\n        customerPhone: string,\n        response: any,\n        brandName: string\n    }>();\n    const history = useHistory();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n\n    async function getHotels(index: number) {\n        let newStates = [...buttonStates]\n        newStates[index] = true;\n        setButtonStates(newStates);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.response[index].hotel_id + \"/rooms\");\n            if (response.status !== 200) {\n                let newStates = [...buttonStates]\n                newStates[index] = false;\n                setButtonStates(newStates);\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/customer/rooms', {\n                customerSIN: location.state.customerSIN,\n                customerName: location.state.customerName,\n                customerAddress: location.state.customerAddress,\n                customerEmail: location.state.customerEmail,\n                customerPhone: location.state.customerPhone,\n                response: response,\n                brandName: location.state.brandName,\n                address: location.state.response[index].physical_address,\n                hotelID: location.state.response[index].hotel_id\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[index] = false;\n            setButtonStates(newStates);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>{location.state.brandName} Hotels</Typography>\n            <GridList cols={1} cellHeight={175} className={classes.grid}>\n                {\n                    location.state.response.map((hotel: {\n                        physical_address: string;\n                        email_address: string;\n                        phone_number: string;\n                        number_of_rooms: number;\n                        hotel_id: number;\n                        star_category: number;\n                    }, index: number) => {\n                        return (\n                            <GridListTile key={hotel.hotel_id} cols={1}>\n                                <Paper elevation={3} key={hotel.hotel_id} className={classes.brandPaper}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid className={classes.hotelGrid}>\n                                            <Typography\n                                                className={classes.hotelTitle}>{hotel.physical_address}</Typography>\n                                            <Typography>Email: {hotel.email_address}</Typography>\n                                            <Typography>Phone: {hotel.phone_number}</Typography>\n                                            <Typography>Number of rooms: {hotel.number_of_rooms}</Typography>\n                                        </Grid>\n                                        <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                        <Grid item xs={2}>\n                                            <Grid className={classes.priceDiv}>\n                                                <Rating value={hotel.star_category} readOnly/>\n                                                <br/><br/>\n                                                <Button variant='contained' onClick={() => getHotels(index)}\n                                                        disabled={buttonStates[index]}>View Details</Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </GridListTile>\n                        );\n                    })\n                }\n            </GridList>\n        </div>\n    )\n}","import {\n    Button,\n    Divider, FormControlLabel,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper, Radio, RadioGroup, Snackbar,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {Severity, TitleBarCustomer} from \"./index\";\nimport {useLocation} from \"react-router-dom\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    hotelGrid: {\n        width: '70%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    radioGroup: {\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em'\n    }\n}));\n\ntype Reservation = {\n    booking_id: number;\n    physical_address: string;\n    date_of_registration: string;\n    check_in_day: string;\n    check_out_day: string;\n    status: string;\n    title: string;\n    is_extendable: boolean;\n    amenities: string[];\n    view: string;\n    price: string;\n}\n\nconst GenerateReservations = ({\n                                  classes,\n                                  reservations,\n                                  editButtonToDisable,\n                                  radioState,\n                                  setEditButtonToDisable,\n                                  setAlertMessage,\n                                  setAlertStatus,\n                                  setAlertOpen,\n                                  customerSIN,\n                                  setReservations\n                              }: any) => {\n\n    return <GridList cols={1} cellHeight={220} className={classes.grid}>\n        {\n            reservations.filter((reservation: Reservation) => {\n                return !((radioState === 1 && reservation.status !== 'Renting')\n                    || (radioState === 2 && reservation.status !== 'Booked')\n                    || (radioState === 3 && reservation.status !== 'Archived' && reservation.status !== 'Cancelled'))\n            }).map((reservation: Reservation) => {\n                const checkIn: Date = new Date(reservation.check_in_day.replace('-', '/'))\n                const checkOut: Date = new Date(reservation.check_out_day.replace('-', '/'))\n                const days: number = Math.round(Math.abs(+checkIn - +checkOut) / 24 / 60 / 60 / 1000)\n                const totalPrice: string = (days * parseFloat(reservation.price)).toFixed(2)\n\n                if (reservation.amenities.length === 0) {\n                    reservation.amenities.push(\"None\")\n                }\n\n                return (\n                    <GridListTile key={reservation.booking_id} cols={1}>\n                        <Paper elevation={3} key={reservation.booking_id} className={classes.brandPaper}>\n                            <Grid container spacing={2} alignItems=\"center\">\n                                <Grid className={classes.hotelGrid}>\n                                    <Typography\n                                        className={classes.hotelTitle}>Room: {reservation.title} | {reservation.check_in_day} to {reservation.check_out_day}\n                                    </Typography>\n                                    <Typography>{reservation.physical_address}</Typography>\n                                    <Typography>Booking status: {reservation.status}</Typography>\n                                    <Typography>Amenities: {reservation.amenities.join(', ')}</Typography>\n                                    <Typography>View: {reservation.view}</Typography>\n                                    <Typography>\n                                        Extendable: {reservation.is_extendable ? \"Yes\" : \"No\"}\n                                    </Typography>\n                                </Grid>\n                                <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                <Grid item xs={3}>\n                                    <Grid className={classes.priceDiv}>\n                                        <Typography>Booked on {reservation.date_of_registration}</Typography>\n                                        <Typography className={classes.hotelTitle}>Total price:</Typography>\n                                        <Typography className={classes.hotelTitle}>${totalPrice}</Typography>\n                                        <br/>\n                                        <ReservationEditButton reservation={reservation}\n                                                               reservations={reservations}\n                                                               setEditButtonToDisable={setEditButtonToDisable}\n                                                               editButtonToDisable={editButtonToDisable}\n                                                               setAlertMessage={setAlertMessage}\n                                                               setAlertStatus={setAlertStatus}\n                                                               setAlertOpen={setAlertOpen}\n                                                               customerSIN={customerSIN}\n                                                               setReservations={setReservations}/>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </GridListTile>\n                );\n            })\n        }\n    </GridList>\n}\n\ntype ReservationEditProps = {\n    reservation: Reservation;\n    reservations: Reservation[];\n    editButtonToDisable: number;\n    setEditButtonToDisable: any;\n    setAlertMessage: any;\n    setAlertStatus: any;\n    setAlertOpen: any;\n    customerSIN: string;\n    setReservations: any;\n}\n\nconst ReservationEditButton = ({\n                                   reservation,\n                                   reservations,\n                                   editButtonToDisable,\n                                   setEditButtonToDisable,\n                                   setAlertMessage,\n                                   setAlertStatus,\n                                   setAlertOpen,\n                                   customerSIN,\n                                   setReservations\n                               }: ReservationEditProps) => {\n    if (reservation.status === 'Renting') {\n        return <Button variant='contained'\n                       onClick={() => patchReservation('Archived', setEditButtonToDisable, reservations, reservation, setAlertMessage, setAlertStatus, setAlertOpen, customerSIN, setReservations)}\n                       disabled={editButtonToDisable === reservation.booking_id}>Check Out</Button>\n    }\n    if (reservation.status === 'Booked') {\n        return <Button variant='contained'\n                       onClick={() => patchReservation('Cancelled', setEditButtonToDisable, reservations, reservation, setAlertMessage, setAlertStatus, setAlertOpen, customerSIN, setReservations)}\n                       disabled={editButtonToDisable === reservation.booking_id}>Cancel</Button>\n    }\n    return <></>\n}\n\nasync function patchReservation(action: string, setEditButtonToDisable: any, reservations: Reservation[], reservation: Reservation, setAlertMessage: any, setAlertStatus: any, setAlertOpen: any, customerSIN: string, setReservations: any) {\n    setEditButtonToDisable(reservation.booking_id);\n    try {\n        let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + customerSIN + \"/reservations/\" + reservation.booking_id, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                status: action\n            })\n        })\n        if (response.status === 204) {\n            if (action === 'Archived') {\n                updateReservations([...reservations], reservation.booking_id, 'Archived', setReservations);\n                openAlert('Successfully checked out of hotel', 'success', setAlertMessage, setAlertStatus, setAlertOpen);\n\n            } else {\n                updateReservations([...reservations], reservation.booking_id, 'Cancelled', setReservations);\n                openAlert('Successfully cancelled room booking', 'success', setAlertMessage, setAlertStatus, setAlertOpen)\n            }\n        } else {\n            openAlert('Error: Unable to modify reservation', 'error', setAlertMessage, setAlertStatus, setAlertOpen);\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        openAlert('Error: Unable to modify reservation', 'error', setAlertMessage, setAlertStatus, setAlertOpen)\n    }\n    setEditButtonToDisable(-1);\n}\n\nfunction updateReservations(reservations: Reservation[], bookingID: number, status: string, setReservations: any) {\n    for (let i = 0; i < reservations.length; i++) {\n        if (reservations[i].booking_id === bookingID) {\n            reservations[i].status = status;\n            setReservations(reservations);\n            return;\n        }\n    }\n}\n\nfunction openAlert(message: string, status: string, setAlertMessage: any, setAlertStatus: any, setAlertOpen: any) {\n    setAlertMessage(message);\n    setAlertStatus(status);\n    setAlertOpen(true);\n}\n\nexport default function Reservations() {\n    const classes = useStyles();\n    const location = useLocation<{\n        customerName: string;\n        customerSIN: string;\n        response: Reservation[];\n        isCustomer: boolean;\n    }>();\n\n    location.state.response.sort((r1: Reservation, r2: Reservation) => (r1.check_in_day > r2.check_in_day) ? 1 : -1);\n\n    const [radioState, setRadioState] = useState(0);\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertStatus, setAlertStatus]: [Severity, any] = useState(\"success\");\n    const [editButtonToDisable, setEditButtonToDisable]: [number, any] = useState(-1);\n    const [reservations, setReservations]: [Reservation[], any] = useState([...location.state.response]);\n\n    const titleMessage = location.state.isCustomer ? 'My Reservations - ' + location.state.customerName : 'Customer Reservations - ' + location.state.customerName;\n\n    function closeAlert() {\n        setAlertOpen(false);\n    }\n\n    function setReservationRadioState(event: React.ChangeEvent<HTMLInputElement>) {\n        const value = parseInt(event.target.value);\n        setRadioState(value);\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>{titleMessage}</Typography>\n            <RadioGroup className={classes.radioGroup} value={radioState} onChange={e => setReservationRadioState(e)}\n                        row>\n                <Typography>Filter by:&nbsp;&nbsp;&nbsp;</Typography>\n                <FormControlLabel value={0} control={<Radio/>} label=\"All Reservations\"/>\n                <FormControlLabel value={1} control={<Radio/>} label=\"Ongoing\"/>\n                <FormControlLabel value={2} control={<Radio/>} label=\"Upcoming\"/>\n                <FormControlLabel value={3} control={<Radio/>} label=\"Cancelled/Archived\"/>\n            </RadioGroup>\n            <GenerateReservations classes={classes} reservations={reservations}\n                                  editButtonToDisable={editButtonToDisable} radioState={radioState}\n                                  setEditButtonToDisable={setEditButtonToDisable} setAlertMessage={setAlertMessage}\n                                  setAlertStatus={setAlertStatus} setAlertOpen={setAlertOpen}\n                                  customerSIN={location.state.customerSIN} setReservations={setReservations}/>\n            <Snackbar open={alertOpen} autoHideDuration={6000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity={alertStatus}>\n                    {alertMessage}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}","import {\n    Button, Dialog, DialogActions, DialogTitle,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper, Snackbar, TextField, Tooltip,\n    TooltipProps,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {Severity, TitleBarCustomer} from \"../index\";\nimport {useLocation} from \"react-router-dom\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {MaterialUiPickersDate} from \"@material-ui/pickers/typings/date\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '1em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    centreTitleNoSpace: {\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    smallerTitle: {\n        fontSize: '1.7em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        marginBottom: '0.5em'\n    },\n    brandPaper: {\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        marginTop: '1em'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '50em',\n        width: '85%',\n        marginTop: '10em'\n    },\n    outsideGrid: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        marginBottom: '2em'\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em',\n    },\n    hotelGrid: {\n        width: '70%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n\n    },\n    dateGrid: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    gridParent: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    dialogDiv: {\n        marginLeft: \"0.5em\",\n        marginRight: \"0.5em\"\n    },\n    dialogHeader: {\n        fontWeight: 'bold'\n    },\n    dialogTitle: {\n        fontSize: \"1.8em\",\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    dialogAddress: {\n        marginLeft: \"0.5em\",\n        marginRight: \"0.5em\",\n        fontStyle: \"italic\",\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    }\n}));\n\nconst useStylesBootstrap = makeStyles((theme) => ({\n    arrow: {\n        color: theme.palette.common.black,\n    },\n    tooltip: {\n        backgroundColor: theme.palette.common.black,\n    },\n}));\n\nfunction BootstrapTooltip(props: JSX.IntrinsicAttributes & TooltipProps) {\n    const classes = useStylesBootstrap();\n\n    return <Tooltip arrow classes={classes} {...props} />;\n}\n\ninterface Room {\n    type_id: number;\n    title: string;\n    price: string;\n    amenities: string[];\n    room_capacity: number;\n    view: string;\n    is_extendable: boolean;\n    total_number_rooms: number;\n    rooms_available: number;\n    enabled: undefined | boolean;\n    tooltip: string;\n}\n\ninterface AvailableRoom {\n    type_id: number;\n    occupancy: number;\n}\n\nconst ConfirmationDialog = ({\n                                dialogOpen,\n                                setDialogOpen,\n                                roomToBook,\n                                classes,\n                                location,\n                                checkInDateToBook,\n                                checkOutDateToBook,\n                                disableBookRoomButton,\n                                bookRoom\n                            }: any) => {\n\n    return <Dialog onClose={() => setDialogOpen(false)} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n        <DialogTitle id=\"dialog-title\" className={classes.dialogTitle}>\n            <Typography className={classes.dialogTitle}>Confirm Room Booking</Typography>\n        </DialogTitle>\n        <div className={classes.dialogAddress}>\n            <Typography align=\"center\">{location.state.address}</Typography>\n        </div>\n        <br/>\n        <Divider/>\n        <Typography align=\"center\" className={classes.dialogHeader}>Customer Info</Typography>\n        <Divider/>\n        <div className={classes.dialogDiv}>\n            <Typography>{location.state.customerName}</Typography>\n            <Typography>{location.state.customerAddress}</Typography>\n            <Typography>{location.state.customerEmail}</Typography>\n            <Typography>{location.state.customerPhone}</Typography>\n        </div>\n        <br/>\n        <Divider/>\n        <Typography align=\"center\" className={classes.dialogHeader}>Room Details</Typography>\n        <Divider/>\n        <div className={classes.dialogDiv}>\n            <Typography>Room type: {roomToBook.title}</Typography>\n            <Typography>{checkInDateToBook} to {checkOutDateToBook}</Typography>\n            <Typography>Amenities: {roomToBook.amenities.join(', ')}</Typography>\n            <Typography>View: {roomToBook.view}</Typography>\n            <Typography>\n                Extendable: {roomToBook.is_extendable ? \"Yes\" : \"No\"}\n            </Typography>\n        </div>\n        <br/>\n        <DialogActions>\n            <Button disabled={disableBookRoomButton} onClick={() => bookRoom(roomToBook.type_id)} variant=\"contained\"\n                    color=\"primary\">\n                Book Room\n            </Button>\n            <Button onClick={() => setDialogOpen(false)} variant=\"contained\" color=\"secondary\">\n                Cancel\n            </Button>\n        </DialogActions>\n    </Dialog>\n};\n\nexport default function Rooms() {\n    const classes = useStyles();\n    const location = useLocation<{\n        address: string;\n        customerSIN: string,\n        customerName: string,\n        customerAddress: string,\n        customerEmail: string,\n        customerPhone: string,\n        response: Room[],\n        brandName: string,\n        hotelID: string\n    }>();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(true)\n    }\n\n    const [checkInDate, setCheckInDate]: [Date, any] = useState(new Date());\n    const tomorrow: MaterialUiPickersDate = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1)\n    const [checkOutDate, setCheckOutDate]: [Date, any] = useState(tomorrow);\n    const [checkInDateToBook, setCheckInDateToBook]: [string, any] = useState(\"\");\n    const [checkOutDateToBook, setCheckOutDateToBook]: [string, any] = useState(\"\");\n    const [numPeople, setNumPeople]: [number, any] = useState(1);\n    const [availability, setAvailability]: [boolean, any] = useState(false);\n    const [disableAvailability, setDisableAvailability]: [boolean, any] = useState(false);\n    const [roomData, setRoomData]: [Room[], any] = useState(location.state.response);\n    const [numRooms, setNumRooms]: [number, any] = useState(location.state.response.length);\n    const [dialogOpen, setDialogOpen]: [boolean, any] = useState(false);\n    const [roomToBook, setRoomToBook]: [Room, any] = useState(location.state.response[0]);\n    const [disableBookRoomButton, setDisableBookRoomButton]: [boolean, any] = useState(false);\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertStatus, setAlertStatus]: [Severity, any] = useState(\"success\");\n\n    const past: [Date, Date, number] = [tomorrow, tomorrow, -1]\n\n    location.state.response.forEach((room: Room) => {\n        room.enabled = true;\n        room.tooltip = \"\";\n    })\n\n    function confirmBookRoom(room: Room) {\n        setRoomToBook(room);\n        setDialogOpen(true);\n    }\n\n    async function bookRoom(typeID: number) {\n        setDisableBookRoomButton(true);\n        try {\n            let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + location.state.customerSIN + \"/reservations\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    type_id: typeID,\n                    check_in: checkInDateToBook,\n                    check_out: checkOutDateToBook\n                })\n            })\n            if (response.status === 201) {\n                await checkAvailability();\n                openAlert('Successfully booked room', 'success');\n                setDialogOpen(false);\n            } else {\n                openAlert('Error: Unable to book room', 'error');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            openAlert('Error: Unable to book room', 'error');\n        }\n        setDisableBookRoomButton(false);\n    }\n\n    function openAlert(message: string, status: string) {\n        setAlertMessage(message);\n        setAlertStatus(status);\n        setAlertOpen(true);\n    }\n\n    function closeAlert() {\n        setAlertOpen(false);\n    }\n\n    async function checkAvailability() {\n        //Only check availability if filters have been changed\n        if (past[0] !== checkInDate || past[1] !== checkOutDate || past[2] !== numPeople) {\n            setDisableAvailability(true);\n            try {\n                let url: string = process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.hotelID + \"/rooms/availability\"\n                url += \"?check-in=\" + dateToString(checkInDate) + \"&check-out=\" + dateToString(checkOutDate) + \"&people=\" + numPeople;\n\n                let response: Response = await fetch(url);\n                if (response.status !== 200) {\n                    return;\n                }\n                const availableRooms: AvailableRoom[] = await response.json();\n                const newRoomData: Room[] = JSON.parse(JSON.stringify(roomData));\n                let roomNum: number = newRoomData.length;\n                newRoomData.forEach(room => {\n                    const roomInfo = getRoom(room.type_id, availableRooms);\n                    room.enabled = true;\n                    room.tooltip = \"\";\n                    room.rooms_available = room.total_number_rooms - roomInfo.occupancy;\n                    //Room capacity is too small; disable\n                    if (roomInfo.type_id === -1) {\n                        room.enabled = false;\n                        room.tooltip = \"Room capacity is too small\";\n                        roomNum--;\n                    }\n                    if (room.rooms_available <= 0) {\n                        room.enabled = false;\n                        room.tooltip = \"Room is booked up over these dates\"\n                        roomNum--;\n                    }\n                });\n                newRoomData.sort((r1: Room, r2: Room) => {\n                    if (r1.enabled && !r2.enabled) {\n                        return -1;\n                    }\n                    if (!r1.enabled && r2.enabled) {\n                        return 1;\n                    }\n                    return r1.type_id > r2.type_id ? -1 : 1;\n                })\n                setRoomData(newRoomData);\n                setNumRooms(roomNum);\n                setCheckInDateToBook(dateToString(checkInDate));\n                setCheckOutDateToBook(dateToString(checkOutDate));\n            } catch (error) {\n                console.error('Error:', error);\n            }\n            setDisableAvailability(false);\n        }\n        if (!availability) {\n            setAvailability(true);\n        }\n    }\n\n    function getRoom(typeID: number, roomData: AvailableRoom[]): AvailableRoom {\n        for (let i = 0; i < roomData.length; i++) {\n            if (roomData[i].type_id === typeID) {\n                return roomData[i];\n            }\n        }\n        return {\n            type_id: -1,\n            occupancy: -1\n        }\n    }\n\n    function setNumberOfPeople(num: number) {\n        if (num > 0) {\n            setNumPeople(num);\n            setAvailability(false);\n        }\n    }\n\n    function setCheckOut(date: MaterialUiPickersDate) {\n        if (date !== null && checkInDate !== null) {\n            if (date.getTime() <= checkInDate.getTime()) {\n                const checkIn: MaterialUiPickersDate = new Date();\n                checkIn.setMonth(date.getMonth())\n                checkIn.setDate(date.getDate() - 1)\n                setCheckInDate(checkIn);\n            }\n            setAvailability(false);\n            setCheckOutDate(date);\n        }\n    }\n\n    function setCheckIn(date: MaterialUiPickersDate) {\n        if (date !== null && checkOutDate !== null) {\n            if (date.getTime() >= checkOutDate.getTime()) {\n                const checkOut: MaterialUiPickersDate = new Date();\n                checkOut.setMonth(date.getMonth())\n                checkOut.setDate(date.getDate() + 1)\n                setCheckOutDate(checkOut);\n            }\n            setAvailability(false);\n            setCheckInDate(date);\n        }\n    }\n\n    function dateToString(date: Date): string {\n        let year: string = date.getFullYear().toString();\n        let month: string = '' + (date.getMonth() + 1);\n        let day: string = '' + date.getDate();\n\n        if (month.length < 2) {\n            month = '0' + month;\n        }\n        if (day.length < 2) {\n            day = '0' + day;\n        }\n        return year + '-' + month + '-' + day;\n    }\n\n    function getRoomAvailabilityMessage(numAvailable: number, total: number): string {\n        return numAvailable + '/' + total + ' rooms available';\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>{location.state.brandName}</Typography>\n            <Typography className={classes.centreTitleNoSpace}>{location.state.address}</Typography>\n            <GridList className={classes.gridParent}>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <Typography>Enter booking info to select a room:</Typography>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"check-in-dialog\"\n                            label=\"Check in date\"\n                            format=\"yyyy-MM-dd\"\n                            minDate={new Date()}\n                            value={checkInDate}\n                            onChange={(date: MaterialUiPickersDate) => setCheckIn(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"check-out-dialog\"\n                            label=\"Check out date\"\n                            format=\"yyyy-MM-dd\"\n                            minDate={tomorrow}\n                            value={checkOutDate}\n                            onChange={(date: MaterialUiPickersDate) => setCheckOut(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <TextField\n                        id=\"capacity-number\"\n                        label=\"# of people\"\n                        type=\"number\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        variant=\"outlined\"\n                        value={numPeople}\n                        onChange={e => setNumberOfPeople(parseInt(e.target.value))}\n                    />\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <Button variant=\"contained\" onClick={checkAvailability} disabled={disableAvailability}>Check\n                        Availability</Button>\n                </Grid>\n            </GridList>\n            <Typography className={classes.smallerTitle}>{numRooms} Rooms Found</Typography>\n            <div className={classes.outsideGrid}>\n                <GridList cols={1} cellHeight={190} className={classes.grid}>\n                    <div style={{height: '1em'}}/>\n                    {\n                        roomData.map((room: Room) => {\n                            return (\n                                <GridListTile key={room.type_id} cols={1}>\n                                    <BootstrapTooltip title={room.tooltip} aria-label=\"add\" placement=\"top\">\n                                        <Paper elevation={3} key={room.type_id} className={classes.brandPaper}\n                                               style={room.enabled ? {} : {\n                                                   backgroundColor: 'grey'\n                                               }}>\n                                            <div style={room.enabled ? {opacity: '1'} : {\n                                                opacity: '0.40'\n                                            }}>\n                                                <Grid container spacing={2} alignItems=\"center\">\n                                                    <Grid className={classes.hotelGrid}>\n                                                        <Typography\n                                                            className={classes.hotelTitle}>{room.title}</Typography>\n                                                        <Typography>Amenities: {room.amenities.length === 0 ? \"None\" : room.amenities.join(', ')}</Typography>\n                                                        <Typography>Max\n                                                            capacity: {room.room_capacity} adults</Typography>\n                                                        <Typography>View: {room.view}</Typography>\n                                                        <Typography>Extendable: {room.is_extendable ? \"Yes\" : \"No\"}</Typography>\n                                                    </Grid>\n                                                    <Divider orientation=\"vertical\" flexItem\n                                                             className={classes.divider}/>\n                                                    <Grid container item xs={3} alignItems=\"center\">\n                                                        <Grid container className={classes.priceDiv}>\n                                                            <Typography\n                                                                className={classes.hotelTitle}>${room.price}/night</Typography>\n                                                            <Typography>{getRoomAvailabilityMessage(room.rooms_available, room.total_number_rooms)}</Typography>\n                                                            <br/>\n                                                            <BootstrapTooltip\n                                                                title={(!availability && room.enabled) ? \"Check availability to book a room\" : \"\"}\n                                                                aria-label=\"add\" placement=\"top\">\n                                                                <div>\n                                                                    <Button variant='contained'\n                                                                            onClick={() => confirmBookRoom(room)}\n                                                                            disabled={!room.enabled || !availability}>\n                                                                        Book Room\n                                                                    </Button>\n                                                                </div>\n                                                            </BootstrapTooltip>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </div>\n                                        </Paper>\n                                    </BootstrapTooltip>\n                                </GridListTile>\n                            );\n                        })\n                    }\n                </GridList>\n            </div>\n            <ConfirmationDialog dialogOpen={dialogOpen} setDialogOpen={setDialogOpen} roomToBook={roomToBook}\n                                classes={classes} location={location} checkInDateToBook={checkInDateToBook}\n                                bookRoom={bookRoom} checkOutDateToBook={checkOutDateToBook}\n                                disableBookRoomButton={disableBookRoomButton}/>\n            <Snackbar open={alertOpen} autoHideDuration={6000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity={alertStatus}>\n                    {alertMessage}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}","import {Box, Button, makeStyles, Paper, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarEmployee} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '1.4em'\n    },\n    inPaper: {\n        display: 'flex'\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: '2em',\n        flexGrow: 1\n    },\n    buttonSpacing: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em',\n        marginTop: '1em',\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    gridSpacing: {\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    paperContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        display: 'inline-block',\n        padding: '1em',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    topGrid: {\n        maxWidth: '45em'\n    }\n}));\n\ninterface Employee {\n    employeeSIN: string;\n    employeeName: string;\n    employeeAddress: string;\n    salary: string;\n    jobTitle: string;\n    brandName: string;\n    brandID: number;\n    hotelID: number;\n    hotelAddress: string;\n}\n\nexport default function WelcomeEmployee() {\n    const classes = useStyles();\n    const location = useLocation<Employee>();\n    const history = useHistory();\n\n    const [checkInDisabled, setCheckInDisabled]: [boolean, any] = useState(false);\n    const [checkOutDisabled, setCheckOutDisabled]: [boolean, any] = useState(false);\n    const [manageEmployeeDisabled, setManageEmployeeDisabled]: [boolean, any] = useState(false);\n\n    const welcomeMessage = location.state.brandName + \", \" + location.state.hotelAddress\n\n    async function checkIn() {\n        setCheckInDisabled(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.hotelID + \"/reservations?action=check-in\");\n            if (response.status !== 200) {\n                setCheckInDisabled(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/employee/checkin', {response: response, checkIn: true});\n        } catch (error) {\n            console.error('Error:', error);\n            setCheckInDisabled(false);\n        }\n    }\n\n    function manageCustomer() {\n        history.push('/ui/employee/managecustomer');\n    }\n\n    async function checkOut() {\n        setCheckOutDisabled(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.hotelID + \"/reservations?action=check-out\");\n            if (response.status !== 200) {\n                setCheckOutDisabled(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/employee/checkout', {response: response, checkOut: false});\n        } catch (error) {\n            console.error('Error:', error);\n            setCheckOutDisabled(false);\n        }\n    }\n\n    function ManagerActions() {\n        if (location.state.jobTitle === 'Manager') {\n            return (\n                <>\n                    <Typography className={classes.centre}>Manager Actions:</Typography>\n                    <br/>\n                    <div className={classes.paperContainer}>\n                        <Button variant=\"contained\" color='primary' disabled={manageEmployeeDisabled}>\n                            Manage Employees\n                        </Button>\n                    </div>\n                </>\n            )\n        }\n        return <></>\n    }\n\n    return (\n        <>\n            <TitleBarEmployee/>\n            <Typography className={classes.centreTitle}>{welcomeMessage}</Typography>\n            <Typography className={classes.centre}>Your profile:</Typography>\n            <div className={classes.paperContainer}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Typography className={classes.inPaper}>Name: {location.state.employeeName}</Typography>\n                    <Typography className={classes.inPaper}>Address: {location.state.employeeAddress}</Typography>\n                    <Typography className={classes.inPaper}>Job title: {location.state.jobTitle}</Typography>\n                    <Typography className={classes.inPaper}>Salary: ${location.state.salary}</Typography>\n                </Paper>\n            </div>\n            <div className={classes.paperContainer}>\n                <Box display=\"flex\" flexDirection=\"row\" p={1} m={1}>\n                    <Box p={1}>\n                        <Button variant=\"contained\" className={classes.buttonSpacing} disabled={checkInDisabled}\n                                onClick={() => checkIn()}>\n                            Customer Check In\n                        </Button>\n                    </Box>\n                    <Box p={1}>\n                        <Button variant=\"contained\" className={classes.buttonSpacing} disabled={checkOutDisabled}\n                                onClick={() => checkOut()}>\n                            Customer Check Out\n                        </Button>\n                    </Box>\n                    <Box p={1}>\n                        <Button variant=\"contained\" className={classes.buttonSpacing}\n                                onClick={() => manageCustomer()}>\n                            Manage Customer\n                        </Button>\n                    </Box>\n                </Box>\n            </div>\n            <br/>\n            <ManagerActions/>\n        </>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper, Snackbar, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {Severity, TitleBarCustomer} from \"../index\";\nimport {useLocation} from \"react-router-dom\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    centreSubTitle: {\n        paddingTop: '0.5em',\n        fontSize: '1.4em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    hotelGrid: {\n        width: '70%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    centreDiv: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em',\n        marginTop: '1em'\n    }\n}));\n\ninterface Reservation {\n    booking_id: number;\n    date_of_registration: string;\n    check_in_day: string;\n    check_out_day: string;\n    title: string;\n    is_extendable: boolean;\n    amenities: string[];\n    view: string;\n    price: string;\n    customer_sin: string;\n    customer_name: string;\n}\n\nconst GenerateReservations = ({\n                                  classes,\n                                  reservations,\n                                  editButtonToDisable,\n                                  setEditButtonToDisable,\n                                  setAlertMessage,\n                                  setAlertStatus,\n                                  setAlertOpen,\n                                  setReservations,\n                                  isCheckIn,\n                                  searchSIN\n                              }: any) => {\n\n    const filteredReservations = reservations.filter((reservation: Reservation) => reservation.customer_sin.includes(searchSIN));\n    if (filteredReservations.length === 0) {\n        return (\n            <GridList cols={1} cellHeight={220} className={classes.grid}>\n                <GridListTile cols={1}>\n                    <Typography className={classes.centreSubTitle}>No reservations found!</Typography>\n                </GridListTile>\n            </GridList>\n        )\n    }\n\n    return <GridList cols={1} cellHeight={220} className={classes.grid}>\n        {\n            filteredReservations.map((reservation: Reservation, index: number) => {\n                const checkIn: Date = new Date(reservation.check_in_day.replace('-', '/'))\n                const checkOut: Date = new Date(reservation.check_out_day.replace('-', '/'))\n                const days: number = Math.round(Math.abs(+checkIn - +checkOut) / 24 / 60 / 60 / 1000)\n                const totalPrice: string = (days * parseFloat(reservation.price)).toFixed(2)\n\n                if (reservation.amenities.length === 0) {\n                    reservation.amenities.push(\"None\")\n                }\n\n                return (\n                    <GridListTile key={reservation.booking_id} cols={1}>\n                        <Paper elevation={3} key={reservation.booking_id} className={classes.brandPaper}>\n                            <Grid container spacing={2} alignItems=\"center\">\n                                <Grid className={classes.hotelGrid}>\n                                    <Typography\n                                        className={classes.hotelTitle}>Room: {reservation.title} | {reservation.check_in_day} to {reservation.check_out_day}\n                                    </Typography>\n                                    <Typography>Customer name: {reservation.customer_name}</Typography>\n                                    <Typography>Customer SIN: {reservation.customer_sin}</Typography>\n                                    <Typography>Amenities: {reservation.amenities.join(', ')}</Typography>\n                                    <Typography>View: {reservation.view}</Typography>\n                                    <Typography>\n                                        Extendable: {reservation.is_extendable ? \"Yes\" : \"No\"}\n                                    </Typography>\n                                </Grid>\n                                <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                <Grid item xs={3}>\n                                    <Grid className={classes.priceDiv}>\n                                        <Typography>Booked on {reservation.date_of_registration}</Typography>\n                                        <Typography className={classes.hotelTitle}>Total price:</Typography>\n                                        <Typography className={classes.hotelTitle}>${totalPrice}</Typography>\n                                        <br/>\n                                        <Button variant='contained'\n                                                onClick={() => patchReservation(isCheckIn ? 'Renting' : 'Archived', setEditButtonToDisable, reservations, reservation, setAlertMessage, setAlertStatus, setAlertOpen, setReservations, index)}\n                                                disabled={editButtonToDisable === reservation.booking_id}>\n                                            {isCheckIn ? \"Check In\" : \"Check Out\"}\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </GridListTile>\n                );\n            })\n        }\n    </GridList>\n}\n\nasync function patchReservation(action: string, setEditButtonToDisable: any, reservations: Reservation[], reservation: Reservation, setAlertMessage: any, setAlertStatus: any, setAlertOpen: any, setReservations: any, index: number) {\n    setEditButtonToDisable(reservation.booking_id);\n    try {\n        let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + reservation.customer_sin + \"/reservations/\" + reservation.booking_id, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                status: action\n            })\n        })\n        if (response.status === 204) {\n            if (action === 'Renting') {\n                openAlert('Successfully checked in customer', 'success', setAlertMessage, setAlertStatus, setAlertOpen);\n            } else {\n                openAlert('Successfully checked out customer', 'success', setAlertMessage, setAlertStatus, setAlertOpen);\n            }\n            const newReservations: Reservation[] = [...reservations];\n            newReservations.splice(index, 1);\n            setReservations(newReservations);\n        } else {\n            openAlert('Error: Unable to modify reservation', 'error', setAlertMessage, setAlertStatus, setAlertOpen);\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        openAlert('Error: Unable to modify reservation', 'error', setAlertMessage, setAlertStatus, setAlertOpen)\n    }\n    setEditButtonToDisable(-1);\n}\n\nfunction openAlert(message: string, status: string, setAlertMessage: any, setAlertStatus: any, setAlertOpen: any) {\n    setAlertMessage(message);\n    setAlertStatus(status);\n    setAlertOpen(true);\n}\n\nexport default function CheckCustomer() {\n    const classes = useStyles();\n    const location = useLocation<{\n        response: Reservation[];\n        checkIn: boolean;\n    }>();\n\n    location.state.response.sort((r1: Reservation, r2: Reservation) => (r1.check_in_day > r2.check_in_day) ? 1 : -1);\n\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertStatus, setAlertStatus]: [Severity, any] = useState(\"success\");\n    const [editButtonToDisable, setEditButtonToDisable]: [number, any] = useState(-1);\n    const [reservations, setReservations]: [Reservation[], any] = useState([...location.state.response]);\n    const [searchSIN, setSearchSIN]: [string, any] = useState(\"\");\n\n    const dateWords = new Date().toDateString();\n    const subTitle = location.state.checkIn ? 'For ' + dateWords : 'Customers currently renting rooms'\n\n    function closeAlert() {\n        setAlertOpen(false);\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography\n                className={classes.centreTitle}>Customer {location.state.checkIn ? 'Check In' : 'Check Out'}</Typography>\n            <Typography className={classes.centreSubTitle}>{subTitle}</Typography>\n            <div className={classes.centreDiv}>\n                <TextField label=\"Search by SIN\" variant=\"outlined\" value={searchSIN}\n                           onChange={event => setSearchSIN(event.currentTarget.value)}/>\n            </div>\n            <GenerateReservations classes={classes} reservations={reservations}\n                                  editButtonToDisable={editButtonToDisable}\n                                  setEditButtonToDisable={setEditButtonToDisable} setAlertMessage={setAlertMessage}\n                                  setAlertStatus={setAlertStatus} setAlertOpen={setAlertOpen} searchSIN={searchSIN}\n                                  setReservations={setReservations} isCheckIn={location.state.checkIn}/>\n            <Snackbar open={alertOpen} autoHideDuration={6000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity={alertStatus}>\n                    {alertMessage}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}","import {\n    Button,\n    Dialog, DialogActions,\n    DialogTitle,\n    Grid,\n    GridList,\n    makeStyles,\n    Paper, Snackbar,\n    TextField,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {Severity, TitleBarEmployee} from \"../index\";\nimport {useHistory,} from \"react-router-dom\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(() => ({\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    dateGrid: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    gridParent: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    subTitle: {\n        fontSize: '1.4em'\n    },\n    paperContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        display: 'inline-block',\n        padding: '1em',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inPaper: {\n        display: 'flex'\n    },\n    dialogTitle: {\n        fontSize: \"1.8em\",\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    dialogAddress: {\n        marginLeft: \"0.5em\",\n        marginRight: \"0.5em\",\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    }\n}));\n\ninterface CustomerResponse {\n    customer_sin: string;\n    customer_name: string;\n    customer_address: string;\n    customer_email: string;\n    customer_phone: string;\n}\n\ninterface CustomerError {\n    error: string;\n    message: string;\n}\n\nconst CreateCustomerDialog = ({\n                                  dialogOpen, setDialogOpen,\n                                  classes,\n                                  customerSIN,\n                                  setAlertMessage,\n                                  setAlertStatus,\n                                  setAlertOpen,\n                                  setCustomerData,\n                                  customerName, setCustomerName,\n                                  customerAddress, setCustomerAddress,\n                                  customerPhone, setCustomerPhone,\n                                  customerEmail, setCustomerEmail\n                              }: any) => {\n\n    const [nameError, setNameError]: [boolean, any] = useState(false);\n    const [addressError, setAddressError]: [boolean, any] = useState(false);\n    const [emailError, setEmailError]: [boolean, any] = useState(false);\n    const [phoneError, setPhoneError]: [boolean, any] = useState(false);\n\n    const [disableCreateCustomer, setDisableCreateCustomer]: [boolean, any] = useState(false);\n\n    return <Dialog onClose={() => setDialogOpen(false)} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n        <DialogTitle id=\"dialog-title\" className={classes.dialogTitle}>\n            <Typography className={classes.dialogTitle}>Create Customer Profile</Typography>\n        </DialogTitle>\n        <div className={classes.dialogAddress}>\n            <Typography align=\"center\">Customer SIN: {customerSIN}</Typography>\n            <br/>\n            <TextField label=\"Customer Name\" variant=\"outlined\" value={customerName} error={nameError}\n                       helperText={nameError ? \"Must provide name\" : \"\"}\n                       onChange={event => setCustomerName(event.currentTarget.value)}/>\n            <br/>\n            <TextField label=\"Customer Address\" variant=\"outlined\" value={customerAddress} error={addressError}\n                       helperText={addressError ? \"Must provide address\" : \"\"}\n                       onChange={event => setCustomerAddress(event.currentTarget.value)}/>\n            <br/>\n            <TextField label=\"Customer Email\" variant=\"outlined\" value={customerEmail} error={emailError}\n                       helperText={emailError ? \"Must provide valid email\" : \"\"}\n                       onChange={event => setCustomerEmail(event.currentTarget.value)}/>\n            <br/>\n            <TextField label=\"Customer Phone Number\" variant=\"outlined\" value={customerPhone} error={phoneError}\n                       helperText={phoneError ? \"Must provide valid phone number\" : \"\"}\n                       onChange={event => setCustomerPhone(event.currentTarget.value)}/>\n            <br/>\n        </div>\n        <DialogActions>\n            <Button disabled={disableCreateCustomer}\n                    onClick={() => createCustomer(customerSIN, customerName, customerAddress, customerEmail, customerPhone,\n                        setDisableCreateCustomer, setNameError, setAddressError, setEmailError, setPhoneError,\n                        setAlertMessage, setAlertStatus, setAlertOpen, setCustomerData, setDialogOpen)}\n                    variant=\"contained\"\n                    color=\"primary\">\n                Create Profile\n            </Button>\n            <Button onClick={() => {\n                setDialogOpen(false);\n            }} variant=\"contained\" color=\"secondary\">\n                Cancel\n            </Button>\n        </DialogActions>\n    </Dialog>\n};\n\nasync function createCustomer(customerSIN: string, name: string, address: string, email: string,\n                              phoneNumber: string, setDisableCreateCustomer: any, setNameError: any,\n                              setAddressError: any, setEmailError: any, setPhoneError: any,\n                              setAlertMessage: any, setAlertStatus: any, setAlertOpen: any,\n                              setCustomerData: any, setDialogOpen: any) {\n    const isNameError: boolean = name.length === 0;\n    const isAddressError: boolean = address.length === 0;\n    let isEmailError: boolean = email.includes(' ') || email.indexOf('@') < 1\n    if (!isEmailError) {\n        const index: number = email.indexOf('.', email.indexOf('@'))\n        if (index < 3 || index === email.length - 1) {\n            isEmailError = true;\n        }\n    }\n    const isPhoneError: boolean = !(/^[+]?[(]?[0-9]{3}[)]?[-\\s.]?[0-9]{3}[-\\s.]?[0-9]{4,6}$/im).test(phoneNumber);\n\n    setNameError(isNameError);\n    setAddressError(isAddressError);\n    setEmailError(isEmailError);\n    setPhoneError(isPhoneError);\n\n    if (isNameError || isAddressError || isEmailError || isPhoneError) {\n        return;\n    }\n\n    setDisableCreateCustomer(true);\n\n    try {\n        let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                customer_sin: customerSIN,\n                customer_name: name,\n                customer_address: address,\n                customer_email: email,\n                customer_phone: phoneNumber\n            })\n        })\n        if (response.status === 201) {\n            setCustomerData({\n                customer_sin: customerSIN,\n                customer_name: name,\n                customer_address: address,\n                customer_email: email,\n                customer_phone: phoneNumber\n            });\n            openAlert('Successfully created customer profile', 'success', setAlertMessage, setAlertStatus, setAlertOpen);\n            setDialogOpen(false);\n        } else {\n            openAlert('Error: Unable to created customer profile', 'error', setAlertMessage, setAlertStatus, setAlertOpen);\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        openAlert('Error: Unable to created customer profile', 'error', setAlertMessage, setAlertStatus, setAlertOpen);\n    }\n    setDisableCreateCustomer(false);\n}\n\nfunction openAlert(message: string, status: string, setAlertMessage: any, setAlertStatus: any, setAlertOpen: any) {\n    setAlertMessage(message);\n    setAlertStatus(status);\n    setAlertOpen(true);\n}\n\nexport default function ManageCustomer() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [SIN, setSIN] = useState(\"\");\n    const [disableFindCustomer, setDisableFindCustomer]: [boolean, any] = useState(false);\n    const [customerData, setCustomerData]: [CustomerResponse | CustomerError | null, any] = useState(null);\n    const [disableReservations, setDisableReservations]: [boolean, any] = useState(false);\n    const [dialogOpen, setDialogOpen]: [boolean, any] = useState(false);\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertStatus, setAlertStatus]: [Severity, any] = useState(\"success\");\n\n    const [customerName, setCustomerName]: [string, any] = useState(\"\");\n    const [customerAddress, setCustomerAddress]: [string, any] = useState(\"\");\n    const [customerEmail, setCustomerEmail]: [string, any] = useState(\"\");\n    const [customerPhone, setCustomerPhone]: [string, any] = useState(\"\");\n\n    const sinRegex: RegExp = /^[0-9]{3}-[0-9]{3}-[0-9]{3}$/;\n\n    function validateSIN(): boolean {\n        return !sinRegex.test(SIN) && SIN.length !== 0;\n    }\n\n    function closeAlert() {\n        setAlertOpen(false);\n    }\n\n    function keyPressed(e: React.KeyboardEvent<HTMLDivElement>) {\n        if (e.key === 'Enter' && sinRegex.test(SIN)) {\n            findCustomer();\n        }\n    }\n\n    function ShowCustomer() {\n        if (customerData === null) {\n            return <></>\n        } else if (customerData.hasOwnProperty('error')) {\n            return <>\n                <Typography className={classes.subTitle} align=\"center\">Customer not found. Try searching a different\n                    social insurance number, or create a new customer profile:</Typography>\n                <br/>\n                <div className={classes.paperContainer}>\n                    <Button variant=\"contained\" onClick={() => {\n                        setCustomerName(\"\");\n                        setCustomerAddress(\"\");\n                        setCustomerEmail(\"\");\n                        setCustomerPhone(\"\");\n                        setDialogOpen(true);\n                    }}>Create Customer Account</Button>\n                </div>\n            </>\n        }\n        return (\n            <>\n                <Typography className={classes.subTitle}\n                            align=\"center\">Customer: {\"customer_name\" in customerData ? customerData.customer_name : ''}</Typography>\n                <div className={classes.paperContainer}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Typography\n                            className={classes.inPaper}>Address: {\"customer_address\" in customerData ? customerData.customer_address : ''}</Typography>\n                        <Typography\n                            className={classes.inPaper}>Email: {\"customer_email\" in customerData ? customerData.customer_email : ''}</Typography>\n                        <Typography className={classes.inPaper}>Phone\n                            number: {\"customer_phone\" in customerData ? customerData.customer_phone : ''}</Typography>\n                    </Paper>\n                </div>\n                <br/><br/>\n                <div className={classes.paperContainer}>\n                    <Button variant=\"contained\" color=\"primary\" disabled={disableReservations}\n                            onClick={getReservations}>View Customer Reservations</Button>\n                </div>\n            </>\n        );\n    }\n\n    async function getReservations() {\n        if (customerData !== null && \"customer_name\" in customerData) {\n            setDisableReservations(true);\n            try {\n                let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + customerData.customer_sin + \"/reservations\");\n                if (response.status !== 200) {\n                    setDisableReservations(false);\n                    return;\n                }\n                response = await response.json();\n                history.push('/ui/employee/reservations', {\n                    customerName: customerData.customer_name,\n                    customerSIN: customerData.customer_sin,\n                    response: response,\n                    isCustomer: false\n                });\n            } catch (error) {\n                console.error('Error:', error);\n                setDisableReservations(false);\n            }\n        }\n    }\n\n    function findCustomer() {\n        setDisableFindCustomer(true);\n        fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + SIN)\n            .then(response => {\n                if (response.status === 200) {\n                    response.json().then((response: CustomerResponse) => {\n                        setCustomerData(response);\n                    })\n                } else if (response.status === 404) {\n                    response.json().then((response: CustomerError) => {\n                        setCustomerData(response);\n                    })\n                } else {\n                    console.error('Error: unable to get customer info');\n                }\n            }).catch(error => {\n                console.error('Error:', error);\n            }\n        );\n        setDisableFindCustomer(false);\n    }\n\n    return (\n        <>\n            <TitleBarEmployee/>\n            <Typography className={classes.centreTitle}>Manage Customer</Typography>\n            <GridList className={classes.gridParent}>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <Typography>Enter customer SIN:</Typography>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <TextField error={validateSIN()}\n                               helperText={validateSIN() ? \"SIN must have format XXX-XXX-XXX\" : \"\"}\n                               onChange={event => setSIN(event.currentTarget.value)}\n                               onKeyPress={e => keyPressed(e)}\n                               id=\"outlined-basic\" label=\"Social Insurance Number\" variant=\"outlined\" value={SIN}/>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <Button variant=\"contained\" onClick={() => findCustomer()}\n                            disabled={!sinRegex.test(SIN) || disableFindCustomer}>\n                        Find Customer\n                    </Button>\n                </Grid>\n            </GridList>\n            <ShowCustomer/>\n            <CreateCustomerDialog dialogOpen={dialogOpen} setDialogOpen={setDialogOpen} classes={classes}\n                                  setAlertMessage={setAlertMessage} setAlertStatus={setAlertStatus}\n                                  setAlertOpen={setAlertOpen} setCustomerData={setCustomerData}\n                                  customerName={customerName} setCustomerName={setCustomerName} customerSIN={SIN}\n                                  customerAddress={customerAddress} setCustomerAddress={setCustomerAddress}\n                                  customerEmail={customerEmail} setCustomerEmail={setCustomerEmail}\n                                  customerPhone={customerPhone} setCustomerPhone={setCustomerPhone}/>\n            <Snackbar open={alertOpen} autoHideDuration={6000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity={alertStatus}>\n                    {alertMessage}\n                </Alert>\n            </Snackbar>\n        </>\n    )\n}","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport SignInEmployee from \"./employee/SignInEmployee\";\nimport SignInCustomer from \"./customer/SignInCustomer\";\nimport {AppBar, makeStyles, Typography} from \"@material-ui/core\";\nimport Name from \"./customer/Name\";\nimport WelcomeCustomer from \"./customer/WelcomeCustomer\";\nimport HotelBrand from \"./customer/HotelBrand\";\nimport Hotel from \"./customer/Hotel\";\nimport Reservations from \"./Reservations\";\nimport Rooms from \"./customer/Rooms\";\nimport WelcomeEmployee from \"./employee/WelcomeEmployee\";\nimport CheckCustomer from \"./employee/CheckCustomer\";\nimport ManageCustomer from \"./employee/ManageCustomer\";\n\nrequire('dotenv').config()\n\nconst useTitleStyles = makeStyles(() => ({\n    title: {\n        fontSize: \"2.5em\",\n        fontWeight: \"bold\",\n        paddingLeft: \"1em\"\n    }\n}));\n\nexport type Severity = \"error\" | \"success\" | \"info\" | \"warning\" | undefined;\n\nexport function TitleBarCustomer() {\n    const classes = useTitleStyles();\n    return <AppBar position=\"static\">\n        <Typography className={classes.title}>ExpressBook Customer Portal</Typography>\n    </AppBar>\n}\n\nexport function TitleBarEmployee() {\n    const classes = useTitleStyles();\n    return <AppBar position=\"static\">\n        <Typography className={classes.title}>ExpressBook Employee Portal</Typography>\n    </AppBar>\n}\n\nReactDOM.render(\n    <>\n        <Router>\n            <Switch>\n                <Route exact path=\"/ui/employee\" component={SignInEmployee}/>\n                <Route exact path=\"/ui/employee/welcome\" component={WelcomeEmployee}/>\n                <Route exact path=\"/ui/employee/checkin\" component={CheckCustomer}/>\n                <Route exact path=\"/ui/employee/checkout\" component={CheckCustomer}/>\n                <Route exact path=\"/ui/employee/managecustomer\" component={ManageCustomer}/>\n                <Route exact path=\"/ui/employee/reservations\" component={Reservations}/>\n                <Route exact path=\"/ui/customer\" component={SignInCustomer}/>\n                <Route exact path=\"/ui/customer/name\" component={Name}/>\n                <Route exact path=\"/ui/customer/welcome\" component={WelcomeCustomer}/>\n                <Route exact path=\"/ui/customer/brands\" component={HotelBrand}/>\n                <Route exact path=\"/ui/customer/hotels\" component={Hotel}/>\n                <Route exact path=\"/ui/customer/reservations\" component={Reservations}/>\n                <Route exact path=\"/ui/customer/rooms\" component={Rooms}/>\n            </Switch>\n        </Router>\n    </>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}