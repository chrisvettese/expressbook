{"version":3,"sources":["customer/Customer.tsx","customer/Name.tsx","customer/Welcome.tsx","customer/HotelBrand.tsx","customer/Hotel.tsx","customer/Reservations.tsx","customer/Rooms.tsx","index.tsx","Employee.tsx"],"names":["useStyles","makeStyles","sinCentre","paddingTop","display","alignItems","justifyContent","buttonCentre","centreTitle","fontWeight","fontSize","width","centre","marginTop","buttonSpacing","marginLeft","marginRight","theme","root","flexWrap","backgroundColor","palette","background","paper","marginBottom","brandPaper","padding","flexDirection","hotelTitle","grid","boxShadow","height","divider","brandGrid","priceDiv","hotelGrid","radioGroup","centreTitleNoSpace","smallerTitle","outsideGrid","dateGrid","gridParent","dialogDiv","dialogHeader","dialogTitle","textDecoration","dialogAddress","fontStyle","useStylesBootstrap","arrow","color","common","black","tooltip","BootstrapTooltip","props","classes","Tooltip","require","config","useTitleStyles","title","paddingLeft","TitleBar","AppBar","position","Typography","className","ReactDOM","exact","path","component","history","useHistory","useState","SIN","setSIN","disableSignIn","setDisableSignIn","sin_re","validateSIN","test","length","checkCustomer","fetch","process","then","response","status","push","customerSIN","json","customer_sin","customerName","customer_name","customerAddress","customer_address","catch","error","console","log","TextField","helperText","onChange","event","currentTarget","value","onKeyPress","e","key","keyPressed","id","label","variant","Button","onClick","disabled","location","useLocation","name","setName","address","setAddress","nameError","setNameError","addressError","setAddressError","disableUseButton","setDisableUseButton","a","method","headers","body","JSON","stringify","state","submitInfo","disableHotelButton","setDisableHotelButton","disableReservationButton","setDisableReservationButton","welcomeMessage","addressMessage","goToBrandPage","goToReservationsPage","buttonStateValues","i","buttonStates","setButtonStates","index","newStates","brand_id","brandName","GridList","cols","cellHeight","map","brand","GridListTile","Paper","elevation","Grid","container","spacing","main_office_address","email_address","phone_number","number_of_hotels","Divider","orientation","flexItem","item","xs","getHotels","hotel_id","physical_address","hotelID","hotel","number_of_rooms","Rating","star_category","readOnly","sort","r1","r2","check_in_day","ongoing","upcoming","past","all","booking_id","forEach","res","radioState","setRadioState","alertOpen","setAlertOpen","alertMessage","setAlertMessage","alertStatus","setAlertStatus","bookingIDs","setBookingIDs","openAlert","message","closeAlert","patchReservation","action","bookingID","reservation","bookingIDToReservation","splice","indexOf","setReservationIndices","ReservationEditButton","date_of_registration","check_out_day","is_extendable","amenities","view","price","GenerateReservations","reservations","checkIn","Date","replace","checkOut","totalPrice","Math","round","abs","parseFloat","toFixed","join","RadioGroup","parseInt","target","setReservationRadioState","row","FormControlLabel","control","Radio","Snackbar","open","autoHideDuration","onClose","Alert","severity","checkInDate","setCheckInDate","tomorrow","setDate","getDate","checkOutDate","setCheckOutDate","checkInDateToBook","setCheckInDateToBook","checkOutDateToBook","setCheckOutDateToBook","numPeople","setNumPeople","availability","setAvailability","disableAvailability","setDisableAvailability","roomData","setRoomData","numRooms","setNumRooms","dialogOpen","setDialogOpen","roomToBook","setRoomToBook","url","dateToString","availableRooms","newRoomData","parse","roomNum","room","roomInfo","getRoom","type_id","enabled","rooms_available","total_number_rooms","occupancy","typeID","date","year","getFullYear","toString","month","getMonth","day","ConfirmationDialog","Dialog","aria-labelledby","DialogTitle","align","DialogActions","utils","DateFnsUtils","margin","format","minDate","getTime","setMonth","setCheckIn","KeyboardButtonProps","setCheckOut","type","InputLabelProps","shrink","num","style","aria-label","placement","opacity","room_capacity","numAvailable","total","confirmBookRoom","document","getElementById"],"mappings":"qPAMMA,EAAYC,aAAW,iBAAO,CAChCC,UAAW,CACPC,WAAY,MACZC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEpBC,aAAc,CACVJ,WAAY,MACZC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEpBE,YAAa,CACTL,WAAY,MACZM,WAAY,OACZC,SAAU,MACVN,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBK,MAAO,Y,sCCrBTX,EAAYC,aAAW,iBAAO,CAChCW,OAAQ,CACJT,WAAY,MACZC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEpBC,aAAc,CACVJ,WAAY,MACZC,QAAS,OACTC,WAAY,SACZC,eAAgB,cCXxB,IAAMN,EAAYC,aAAW,iBAAO,CAChCW,OAAQ,CACJT,WAAY,MACZC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEpBE,YAAa,CACTL,WAAY,MACZM,WAAY,OACZC,SAAU,MACVN,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEpBC,aAAc,CACVH,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBO,UAAW,OAEfC,cAAe,CACXC,WAAY,QACZC,YAAa,a,yDCdfhB,EAAYC,aAAW,SAAAgB,GAAK,MAAK,CACnCC,KAAM,CACFd,QAAS,OACTe,SAAU,OACVb,eAAgB,eAChBc,gBAAiBH,EAAMI,QAAQC,WAAWC,OAG9Cf,YAAa,CACTL,WAAY,MACZM,WAAY,OACZC,SAAU,MACVN,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBkB,aAAc,OAElBC,WAAY,CACRZ,UAAW,MACXE,WAAY,MACZC,YAAa,MACbU,QAAS,MACTtB,QAAS,OACTuB,cAAe,SACfrB,eAAgB,UAEpBsB,WAAY,CACRnB,WAAY,OACZC,SAAU,QACVC,MAAO,QAEXkB,KAAM,CACFC,UAAW,mBACXC,OAAQ,OACRpB,MAAO,MACPE,UAAW,OACXE,WAAY,QAEhBiB,QAAS,CACLjB,WAAY,MACZC,YAAa,OAEjBiB,UAAW,CACPtB,MAAO,OAEXuB,SAAU,CACN9B,QAAS,OACTC,WAAY,SACZsB,cAAe,SACfrB,eAAgB,c,aChDlBN,EAAYC,aAAW,SAAAgB,GAAK,MAAK,CACnCC,KAAM,CACFd,QAAS,OACTe,SAAU,OACVb,eAAgB,eAChBc,gBAAiBH,EAAMI,QAAQC,WAAWC,OAG9Cf,YAAa,CACTL,WAAY,MACZM,WAAY,OACZC,SAAU,MACVN,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBkB,aAAc,MACdb,MAAO,QAEXc,WAAY,CACRZ,UAAW,MACXE,WAAY,MACZC,YAAa,MACbU,QAAS,MACTtB,QAAS,OACTuB,cAAe,SACfrB,eAAgB,UAEpBsB,WAAY,CACRnB,WAAY,OACZC,SAAU,SAEdmB,KAAM,CACFC,UAAW,mBACXC,OAAQ,OACRpB,MAAO,MACPE,UAAW,OACXE,WAAY,QAEhBiB,QAAS,CACLjB,WAAY,MACZC,YAAa,OAEjBmB,UAAW,CACPxB,MAAO,OAEXuB,SAAU,CACN9B,QAAS,OACTC,WAAY,SACZsB,cAAe,SACfrB,eAAgB,c,iDCjDlBN,EAAYC,aAAW,SAAAgB,GAAK,MAAK,CACnCC,KAAM,CACFd,QAAS,OACTe,SAAU,OACVb,eAAgB,eAChBc,gBAAiBH,EAAMI,QAAQC,WAAWC,OAG9Cf,YAAa,CACTL,WAAY,MACZM,WAAY,OACZC,SAAU,MACVN,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBK,MAAO,QAEXc,WAAY,CACRZ,UAAW,MACXE,WAAY,MACZC,YAAa,MACbU,QAAS,MACTtB,QAAS,OACTuB,cAAe,SACfrB,eAAgB,UAEpBsB,WAAY,CACRnB,WAAY,OACZC,SAAU,SAEdmB,KAAM,CACFC,UAAW,mBACXC,OAAQ,OACRpB,MAAO,MACPE,UAAW,OACXE,WAAY,QAEhBiB,QAAS,CACLjB,WAAY,MACZC,YAAa,OAEjBmB,UAAW,CACPxB,MAAO,OAEXuB,SAAU,CACN9B,QAAS,OACTC,WAAY,SACZsB,cAAe,SACfrB,eAAgB,UAEpB8B,WAAY,CACRzB,MAAO,OACPN,WAAY,SACZC,eAAgB,SAChBkB,aAAc,W,0EChDhBxB,EAAYC,aAAW,SAAAgB,GAAK,MAAK,CACnCC,KAAM,CACFd,QAAS,OACTe,SAAU,OACVb,eAAgB,eAChBc,gBAAiBH,EAAMI,QAAQC,WAAWC,OAG9Cf,YAAa,CACTL,WAAY,MACZM,WAAY,OACZC,SAAU,MACVN,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBK,MAAO,QAEX0B,mBAAoB,CAChB5B,WAAY,OACZC,SAAU,MACVN,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBK,MAAO,QAEX2B,aAAc,CACV5B,SAAU,QACVN,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBK,MAAO,OACPa,aAAc,SAElBC,WAAY,CACRV,WAAY,MACZC,YAAa,MACbU,QAAS,MACTtB,QAAS,OACTuB,cAAe,SACfrB,eAAgB,SAChBO,UAAW,OAEfe,WAAY,CACRnB,WAAY,OACZC,SAAU,SAEdmB,KAAM,CACFC,UAAW,mBACXC,OAAQ,OACRpB,MAAO,MACPE,UAAW,QAEf0B,YAAa,CACTnC,QAAS,OACTC,WAAY,SACZsB,cAAe,SACfrB,eAAgB,SAChBkB,aAAc,OAElBQ,QAAS,CACLjB,WAAY,MACZC,YAAa,OAEjBmB,UAAW,CACPxB,MAAO,OAEXuB,SAAU,CACN9B,QAAS,OACTC,WAAY,SACZsB,cAAe,SACfrB,eAAgB,UAGpBkC,SAAU,CACNpC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBK,MAAO,QAEX8B,WAAY,CACRrC,QAAS,OACTE,eAAgB,SAChBK,MAAO,QAEX+B,UAAW,CACP3B,WAAY,QACZC,YAAa,SAEjB2B,aAAc,CACVlC,WAAY,QAEhBmC,YAAa,CACTC,eAAgB,YAChBzC,QAAS,OACTC,WAAY,SACZsB,cAAe,SACfrB,eAAgB,UAEpBwC,cAAe,CACX/B,WAAY,QACZC,YAAa,QACb+B,UAAW,cAIbC,EAAqB/C,aAAW,SAACgB,GAAD,MAAY,CAC9CgC,MAAO,CACHC,MAAOjC,EAAMI,QAAQ8B,OAAOC,OAEhCC,QAAS,CACLjC,gBAAiBH,EAAMI,QAAQ8B,OAAOC,WAI9C,SAASE,EAAiBC,GACtB,IAAMC,EAAUR,IAEhB,OAAO,cAACS,EAAA,EAAD,aAASR,OAAK,EAACO,QAASA,GAAaD,ICzHhDG,EAAQ,KAAUC,SAElB,IAAMC,EAAiB3D,aAAW,iBAAO,CACrC4D,MAAO,CACHnD,SAAU,QACVD,WAAY,OACZqD,YAAa,WAId,SAASC,IACZ,IAAMP,EAAUI,IAChB,OAAO,cAACI,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACH,cAACC,EAAA,EAAD,CAAYC,UAAWX,EAAQK,MAA/B,2CAIRO,SACI,mCACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UCtClC,WACX,OACI,wDDqCQ,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,eAAeC,UPTlC,WACX,IAAMf,EAAUxD,IACVwE,EAAUC,cAFe,EAITC,mBAAS,IAJA,mBAIxBC,EAJwB,KAInBC,EAJmB,OAKWF,oBAAS,GALpB,mBAKxBG,EALwB,KAKTC,EALS,KAMzBC,EAAiB,+BAEvB,SAASC,IACL,OAAQD,EAAOE,KAAKN,IAAuB,IAAfA,EAAIO,OASpC,SAASC,IACLL,GAAiB,GACjBM,MAAMC,mCAAmDV,GACpDW,MAAK,SAAAC,GACsB,MAApBA,EAASC,OACThB,EAAQiB,KAAK,oBAAqB,CAACC,YAAaf,IAEhDY,EAASI,OAAOL,MAAK,SAAAC,GACjBf,EAAQiB,KAAK,uBAAwB,CACjCC,YAAaH,EAASK,aACtBC,aAAcN,EAASO,cACvBC,gBAAiBR,EAASS,yBAIvCC,OAAM,SAAAC,GACLC,QAAQC,IAAI,SAAUF,GACtBpB,GAAiB,MAK7B,OACI,qCACI,cAACf,EAAD,IACA,cAACG,EAAA,EAAD,CAAYC,UAAWX,EAAQhD,YAA/B,qBACA,qBAAK2D,UAAWX,EAAQtD,UAAxB,SACI,cAACgE,EAAA,EAAD,qFAEJ,qBAAKC,UAAWX,EAAQtD,UAAxB,SACI,cAACmG,EAAA,EAAD,CAAWH,MAAOlB,IAAesB,WAAYtB,IAAgB,mCAAqC,GACvFuB,SAAU,SAAAC,GAAK,OAAI5B,EAAO4B,EAAMC,cAAcC,QAC9CC,WAAY,SAAAC,GAAC,OAtCpC,SAAoBA,GACF,UAAVA,EAAEC,KAAmB9B,EAAOE,KAAKN,IACjCQ,IAoCgC2B,CAAWF,IAC5BG,GAAG,iBAAiBC,MAAM,0BAA0BC,QAAQ,WAAWP,MAAO/B,MAE7F,qBAAKR,UAAWX,EAAQjD,aAAxB,SACI,cAAC2G,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QAAS,kBAAMhC,KACnCiC,UAAWrC,EAAOE,KAAKN,IAAQE,EADvC,6BO5CA,cAAC,IAAD,CAAOR,OAAK,EAACC,KAAK,oBAAoBC,UNpBvC,WACX,IAAMf,EAAUxD,IACVqH,EAAWC,cACX9C,EAAUC,cAHW,EAIHC,mBAAS,IAJN,mBAIpB6C,EAJoB,KAIdC,EAJc,OAKG9C,mBAAS,IALZ,mBAKpB+C,EALoB,KAKXC,EALW,OAMOhD,oBAAS,GANhB,mBAMpBiD,EANoB,KAMTC,EANS,OAOalD,oBAAS,GAPtB,mBAOpBmD,EAPoB,KAONC,EAPM,OAQqBpD,oBAAS,GAR9B,mBAQpBqD,EARoB,KAQFC,EARE,iDAU3B,sBAAAC,EAAA,yDACwB,IAAhBV,EAAKrC,QAAmC,IAAnBuC,EAAQvC,OADrC,gBAEQ0C,GAAa,GACbE,GAAgB,GAHxB,0BAI+B,IAAhBP,EAAKrC,QAAmC,IAAnBuC,EAAQvC,OAJ5C,iBAKQ0C,GAAa,GACbE,GAAgB,GANxB,2BAO+B,IAAhBP,EAAKrC,QAAmC,IAAnBuC,EAAQvC,OAP5C,iBAQQ0C,GAAa,GACbE,GAAgB,GATxB,+BAWQE,GAAoB,GAX5B,oBAaiC5C,MAAMC,kCAAiD,CACxE6C,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB1C,aAAcyB,EAASkB,MAAM7C,YAC7BI,cAAeyB,EACfvB,iBAAkByB,MArBtC,QAwBoC,MAxBpC,OAwByBjC,QACThB,EAAQiB,KAAK,uBAAwB,CACjCC,YAAa2B,EAASkB,MAAM7C,YAC5BG,aAAc0B,EACdxB,gBAAiB0B,IA5BrC,mDAgCYtB,QAAQD,MAAM,SAAd,MACA8B,GAAoB,GAjChC,4DAV2B,sBAgD3B,OACI,qCACI,cAACjE,EAAD,IACA,qBAAKI,UAAWX,EAAQ5C,OAAxB,SACI,cAACsD,EAAA,EAAD,wFAEJ,qBAAKC,UAAWX,EAAQ5C,OAAxB,SACI,cAACyF,EAAA,EAAD,CAAWW,MAAM,YAAYC,QAAQ,WAAWP,MAAOa,EAAMrB,MAAOyB,EACzDrB,WAAYqB,EAAY,oBAAsB,GAC9CpB,SAAU,SAAAC,GAAK,OAAIgB,EAAQhB,EAAMC,cAAcC,YAE9D,qBAAKvC,UAAWX,EAAQ5C,OAAxB,SACI,cAACyF,EAAA,EAAD,CAAWW,MAAM,UAAUC,QAAQ,WAAWP,MAAOe,EAASvB,MAAO2B,EAC1DvB,WAAYuB,EAAe,uBAAyB,GACpDtB,SAAU,SAAAC,GAAK,OAAIkB,EAAWlB,EAAMC,cAAcC,YAEjE,qBAAKvC,UAAWX,EAAQjD,aAAxB,SACI,cAAC2G,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QAAS,kBAjEtB,0CAiE4BqB,IAAcpB,SAAUW,EAAnE,6BM5CA,cAAC,IAAD,CAAO1D,OAAK,EAACC,KAAK,uBAAuBC,ULT1C,WACX,IAAMf,EAAUxD,IACVqH,EAAWC,cACX9C,EAAUC,cAHc,EAIsBC,oBAAS,GAJ/B,mBAIvB+D,EAJuB,KAIHC,EAJG,OAKkChE,oBAAS,GAL3C,mBAKvBiE,EALuB,KAKGC,EALH,KAOxBC,EAAiB,YAAcxB,EAASkB,MAAM1C,aAC9CiD,EAAiB,iBAAmBzB,EAASkB,MAAMxC,gBAR3B,4CAU9B,4BAAAkC,EAAA,6DACIS,GAAsB,GAD1B,kBAGuCtD,MAAMC,gCAH7C,UAIgC,OADpBE,EAHZ,QAIqBC,OAJrB,uBAKYkD,GAAsB,GALlC,2CAQyBnD,EAASI,OARlC,QAQQJ,EARR,OASQf,EAAQiB,KAAK,sBAAuB,CAChCC,YAAa2B,EAASkB,MAAM7C,YAC5BK,gBAAiBsB,EAASkB,MAAMxC,gBAChCF,aAAcwB,EAASkB,MAAM1C,aAC7BN,SAAUA,IAbtB,kDAgBQY,QAAQD,MAAM,SAAd,MACAwC,GAAsB,GAjB9B,2DAV8B,kEA+B9B,4BAAAT,EAAA,6DACIW,GAA4B,GADhC,kBAGuCxD,MAAMC,mCAAmDgC,EAASkB,MAAM7C,YAAc,iBAH7H,UAIgC,OADpBH,EAHZ,QAIqBC,OAJrB,uBAKYoD,GAA4B,GALxC,2CAQyBrD,EAASI,OARlC,QAQQJ,EARR,OASQf,EAAQiB,KAAK,4BAA6B,CACtCI,aAAcwB,EAASkB,MAAM1C,aAC7BH,YAAa2B,EAASkB,MAAM7C,YAC5BK,gBAAiBsB,EAASkB,MAAMxC,gBAChCR,SAAUA,IAbtB,kDAgBQY,QAAQD,MAAM,SAAd,MACA0C,GAA4B,GAjBpC,2DA/B8B,sBAoD9B,OACI,qCACI,cAAC7E,EAAD,IACA,cAACG,EAAA,EAAD,CAAYC,UAAWX,EAAQhD,YAA/B,SAA6CqI,IAC7C,cAAC3E,EAAA,EAAD,CAAYC,UAAWX,EAAQ5C,OAA/B,SAAwCkI,IACxC,sBAAK3E,UAAWX,EAAQjD,aAAxB,UACI,cAAC2G,EAAA,EAAD,CAAQD,QAAQ,YAAY9C,UAAWX,EAAQ1C,cAAeqG,QAAS,kBA1DrD,0CA0D2D4B,IACrE3B,SAAUqB,EADlB,0BAEA,cAACvB,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QAAS,kBA5DnB,0CA4DyB6B,IAAwB5B,SAAUuB,EAA7E,sCKlDA,cAAC,IAAD,CAAOtE,OAAK,EAACC,KAAK,sBAAsBC,UJyBzC,WAMX,IALA,IAAMf,EAAUxD,IACVqH,EAAWC,cACX9C,EAAUC,cAEVwE,EAA+B,GAC5BC,EAAI,EAAGA,EAAI7B,EAASkB,MAAMhD,SAASL,OAAQgE,IAChDD,EAAkBxD,MAAK,GAPM,MASOf,mBAASuE,GAThB,mBAS1BE,EAT0B,KASZC,EATY,iDAWjC,WAAyBC,GAAzB,qBAAApB,EAAA,6DACQqB,EADR,YACwBH,IACVE,IAAS,EACnBD,EAAgBE,GAHpB,kBAKuClE,MAAMC,gCAAgDgC,EAASkB,MAAMhD,SAAS8D,GAAOE,SAAW,WALvI,UAMgC,OADpBhE,EALZ,QAMqBC,OANrB,wBAOgB8D,EAPhB,YAOgCH,IACVE,IAAS,EACnBD,EAAgBE,GAT5B,4CAYyB/D,EAASI,OAZlC,QAYQJ,EAZR,OAaQf,EAAQiB,KAAK,sBAAuB,CAChCC,YAAa2B,EAASkB,MAAM7C,YAC5BG,aAAcwB,EAASkB,MAAM1C,aAC7BE,gBAAiBsB,EAASkB,MAAMxC,gBAChCR,SAAUA,EACViE,UAAWnC,EAASkB,MAAMhD,SAAS8D,GAAO9B,OAlBtD,kDAqBQpB,QAAQD,MAAM,SAAd,OACIoD,EAtBZ,YAsB4BH,IACVE,IAAS,EACnBD,EAAgBE,GAxBxB,2DAXiC,sBAuCjC,OACI,sBAAKnF,UAAWX,EAAQtC,KAAxB,UACI,cAAC6C,EAAD,IACA,cAACG,EAAA,EAAD,CAAYC,UAAWX,EAAQhD,YAA/B,kDACA,cAACiJ,EAAA,EAAD,CAAUC,KAAM,EAAGC,WAAY,IAAKxF,UAAWX,EAAQ3B,KAAvD,SAEQwF,EAASkB,MAAMhD,SAASqE,KAAI,SAACC,EAO1BR,GACC,OACI,cAACS,EAAA,EAAD,CAAmCJ,KAAM,EAAzC,SACI,cAACK,EAAA,EAAD,CAAOC,UAAW,EAAwB7F,UAAWX,EAAQ/B,WAA7D,SACI,eAACwI,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAG9J,WAAW,SAAvC,UACI,eAAC4J,EAAA,EAAD,CAAM9F,UAAWX,EAAQvB,UAAzB,UACI,cAACiC,EAAA,EAAD,CAAYC,UAAWX,EAAQ5B,WAA/B,SAA4CiI,EAAMtC,OAClD,eAACrD,EAAA,EAAD,oCAAmC2F,EAAMO,uBACzC,eAAClG,EAAA,EAAD,qBAAoB2F,EAAMQ,iBAC1B,eAACnG,EAAA,EAAD,qBAAoB2F,EAAMS,gBAC1B,eAACpG,EAAA,EAAD,gCAA+B2F,EAAMU,uBAEzC,cAACC,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,EAACvG,UAAWX,EAAQxB,UAC5D,cAACiI,EAAA,EAAD,CAAMU,MAAI,EAACC,GAAI,EAAf,SACI,cAACX,EAAA,EAAD,CAAM9F,UAAWX,EAAQtB,SAAzB,SACI,cAACgF,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QAAS,kBAnEhD,2CAmEsD0D,CAAUxB,IAC7CjC,SAAU+B,EAAaE,GAD/B,4BAZUQ,EAAMN,WADjBM,EAAMN,qBI9ErC,cAAC,IAAD,CAAOlF,OAAK,EAACC,KAAK,sBAAsBC,UH0BzC,WAYX,IAXA,IAAMf,EAAUxD,IACVqH,EAAWC,cAOX9C,EAAUC,cAEVwE,EAA+B,GAC5BC,EAAI,EAAGA,EAAI7B,EAASkB,MAAMhD,SAASL,OAAQgE,IAChDD,EAAkBxD,MAAK,GAbC,MAeYf,mBAASuE,GAfrB,mBAerBE,EAfqB,KAePC,EAfO,iDAiB5B,WAAyBC,GAAzB,qBAAApB,EAAA,6DACQqB,EADR,YACwBH,IACVE,IAAS,EACnBD,EAAgBE,GAHpB,kBAKuClE,MAAMC,gCAAgDgC,EAASkB,MAAMhD,SAAS8D,GAAOyB,SAAW,UALvI,UAMgC,OADpBvF,EALZ,QAMqBC,OANrB,wBAOgB8D,EAPhB,YAOgCH,IACVE,IAAS,EACnBD,EAAgBE,GAT5B,4CAYyB/D,EAASI,OAZlC,QAYQJ,EAZR,OAaQf,EAAQiB,KAAK,qBAAsB,CAC/BC,YAAa2B,EAASkB,MAAM7C,YAC5BG,aAAcwB,EAASkB,MAAM1C,aAC7BE,gBAAiBsB,EAASkB,MAAMxC,gBAChCR,SAAUA,EACViE,UAAWnC,EAASkB,MAAMiB,UAC1B/B,QAASJ,EAASkB,MAAMhD,SAAS8D,GAAO0B,iBACxCC,QAAS3D,EAASkB,MAAMhD,SAAS8D,GAAOyB,WApBpD,kDAuBQ3E,QAAQD,MAAM,SAAd,OACIoD,EAxBZ,YAwB4BH,IACVE,IAAS,EACnBD,EAAgBE,GA1BxB,2DAjB4B,sBA+C5B,OACI,sBAAKnF,UAAWX,EAAQtC,KAAxB,UACI,cAAC6C,EAAD,IACA,eAACG,EAAA,EAAD,CAAYC,UAAWX,EAAQhD,YAA/B,UAA6C6G,EAASkB,MAAMiB,UAA5D,aACA,cAACC,EAAA,EAAD,CAAUC,KAAM,EAAGC,WAAY,IAAKxF,UAAWX,EAAQ3B,KAAvD,SAEQwF,EAASkB,MAAMhD,SAASqE,KAAI,SAACqB,EAO1B5B,GACC,OACI,cAACS,EAAA,EAAD,CAAmCJ,KAAM,EAAzC,SACI,cAACK,EAAA,EAAD,CAAOC,UAAW,EAAwB7F,UAAWX,EAAQ/B,WAA7D,SACI,eAACwI,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAG9J,WAAW,SAAvC,UACI,eAAC4J,EAAA,EAAD,CAAM9F,UAAWX,EAAQrB,UAAzB,UACI,cAAC+B,EAAA,EAAD,CACIC,UAAWX,EAAQ5B,WADvB,SACoCqJ,EAAMF,mBAC1C,eAAC7G,EAAA,EAAD,qBAAoB+G,EAAMZ,iBAC1B,eAACnG,EAAA,EAAD,qBAAoB+G,EAAMX,gBAC1B,eAACpG,EAAA,EAAD,+BAA8B+G,EAAMC,sBAExC,cAACV,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,EAACvG,UAAWX,EAAQxB,UAC5D,cAACiI,EAAA,EAAD,CAAMU,MAAI,EAACC,GAAI,EAAf,SACI,eAACX,EAAA,EAAD,CAAM9F,UAAWX,EAAQtB,SAAzB,UACI,cAACiJ,EAAA,EAAD,CAAQzE,MAAOuE,EAAMG,cAAeC,UAAQ,IAC5C,uBAAK,uBACL,cAACnE,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QAAS,kBA7ErD,2CA6E2D0D,CAAUxB,IAC7CjC,SAAU+B,EAAaE,GAD/B,mCAdU4B,EAAMH,WADjBG,EAAMH,qBGvFrC,cAAC,IAAD,CAAOzG,OAAK,EAACC,KAAK,4BAA4BC,UF6C/C,WACX,IAAMf,EAAUxD,IACVqH,EAAWC,cAMjBD,EAASkB,MAAMhD,SAAS+F,MAAK,SAACC,EAAiBC,GAAlB,OAAuCD,EAAGE,aAAeD,EAAGC,aAAgB,GAAK,KAM9G,IALA,IAAMC,EAAoB,GACpBC,EAAqB,GACrBC,EAAiB,GACjBC,EAAgB,GAEb3C,EAAI,EAAGA,EAAI7B,EAASkB,MAAMhD,SAASL,OAAQgE,IAChD2C,EAAIpG,KAAK4B,EAASkB,MAAMhD,SAAS2D,GAAG4C,YAExCzE,EAASkB,MAAMhD,SAASwG,SAAQ,SAACC,EAAkB3C,GAC5B,YAAf2C,EAAIxG,OACJkG,EAAQjG,KAAK4B,EAASkB,MAAMhD,SAAS8D,GAAOyC,YACtB,WAAfE,EAAIxG,OACXmG,EAASlG,KAAK4B,EAASkB,MAAMhD,SAAS8D,GAAOyC,YAE7CF,EAAKnG,KAAK4B,EAASkB,MAAMhD,SAAS8D,GAAOyC,eAKjD,IADA,IAAM7C,EAA+B,GAC5BC,EAAI,EAAGA,EAAI7B,EAASkB,MAAMhD,SAASL,OAAQgE,IAChDD,EAAkBxD,MAAK,GA7BQ,MA+BKf,mBAASuE,GA/Bd,mBA+B5BE,EA/B4B,KA+BdC,EA/Bc,OAgCC1E,mBAAS,GAhCV,mBAgC5BuH,EAhC4B,KAgChBC,EAhCgB,OAiCDxH,oBAAS,GAjCR,mBAiC5ByH,EAjC4B,KAiCjBC,EAjCiB,OAkCK1H,mBAAS,IAlCd,mBAkC5B2H,EAlC4B,KAkCdC,EAlCc,OAmCoB5H,mBAAS,WAnC7B,mBAmC5B6H,EAnC4B,KAmCfC,EAnCe,OAoCkB9H,mBAASmH,GApC3B,mBAoC5BY,EApC4B,KAoChBC,EApCgB,KAsCnC,SAASC,GAAUC,EAAiBpH,GAChC8G,EAAgBM,GAChBJ,EAAehH,GACf4G,GAAa,GAGjB,SAASS,KACLT,GAAa,GA7CkB,SAgDpBU,GAhDoB,mFAgDnC,WAAgCC,EAAgBC,GAAhD,qBAAA/E,EAAA,6DACQqB,EADR,YACwBH,GACd8D,EAAcC,GAAuBF,GAC3C1D,EAAU2D,EAAY5D,QAAS,EAC/BD,EAAgBE,GAJpB,kBAO6BlE,MAAMC,mCAAmDgC,EAASkB,MAAM7C,YAAc,iBAAmBuH,EAAYA,YAAYnB,WAAY,CAC9J5D,OAAQ,QACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB9C,OAAQuH,MAbxB,OAgBgC,MAhBhC,OAgBqBvH,OACM,aAAXuH,GACArB,EAAQyB,OAAOzB,EAAQ0B,QAAQJ,GAAY,GAC3CC,EAAYA,YAAYzH,OAAS,WACjCoG,EAAKnG,KAAKuH,GACVK,GAAsBpB,GACtBU,GAAU,oCAAqC,aAG/ChB,EAASwB,OAAOxB,EAASyB,QAAQJ,GAAY,GAC7CC,EAAYA,YAAYzH,OAAS,YACjCoG,EAAKnG,KAAKuH,GACVK,GAAsBpB,GACtBU,GAAU,sCAAuC,cAGjDrD,EADD,YACiBH,IACV8D,EAAY5D,QAAS,EAC/BD,EAAgBE,GAChBqD,GAAU,sCAAuC,UAnC7D,kDAsCQxG,QAAQD,MAAM,SAAd,OACIoD,EAvCZ,YAuC4BH,IACV8D,EAAY5D,QAAS,EAC/BD,EAAgBE,GAChBqD,GAAU,sCAAuC,SA1CzD,2DAhDmC,sBA8FnC,SAASW,GAAsB/J,GAC3B,IAAMyI,EAAMkB,GAAuB3J,EAAMyJ,WACzC,MAA+B,YAA3BhB,EAAIiB,YAAYzH,OACT,cAAC0B,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QAAS,kBAAM2F,GAAiB,WAAYvJ,EAAMyJ,YACtE5F,SAAU+B,EAAa6C,EAAI3C,OADnC,uBAGoB,WAA3B2C,EAAIiB,YAAYzH,OACT,cAAC0B,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QAAS,kBAAM2F,GAAiB,YAAavJ,EAAMyJ,YACvE5F,SAAU+B,EAAa6C,EAAI3C,OADnC,oBAGJ,6BASX,SAASgE,GAAsB3G,GAEvBgG,EAAc,GAAD,OADH,IAAVhG,EACkBmF,EACD,IAAVnF,EACWgF,EACD,IAAVhF,EACWiF,EAEAC,IAI1B,SAASsB,GAAuBF,GAC5B,IAAK,IAAI9D,EAAI,EAAGA,EAAI7B,EAASkB,MAAMhD,SAASL,OAAQgE,IAAK,CACrD,IAAM+D,EAAc5F,EAASkB,MAAMhD,SAAS2D,GAC5C,GAAI+D,EAAYnB,aAAekB,EAC3B,MAAO,CAACC,YAAaA,EAAa5D,MAAOH,GAGjD,MAAO,CACH+D,YAAa,CACTnB,YAAa,EACbf,iBAAkB,GAClBwC,qBAAsB,GACtB9B,aAAc,GACd+B,cAAe,GACfhI,OAAQ,GACR3B,MAAO,GACP4J,eAAe,EACfC,UAAW,GACXC,KAAM,GACNC,MAAO,IAEXvE,OAAQ,GAKhB,SAASwE,GAAqBtK,GAC1B,OAAO,cAACkG,EAAA,EAAD,CAAUC,KAAM,EAAGC,WAAY,IAAKxF,UAAWX,EAAQ3B,KAAvD,SAEC0B,EAAMuK,aAAalE,KAAI,SAACoD,GACpB,IACMC,EADMC,GAAuBF,GACXC,YAClBc,EAAgB,IAAIC,KAAKf,EAAYxB,aAAawC,QAAQ,IAAK,MAC/DC,EAAiB,IAAIF,KAAKf,EAAYO,cAAcS,QAAQ,IAAK,MAEjEE,GADeC,KAAKC,MAAMD,KAAKE,KAAKP,GAAWG,GAAY,GAAK,GAAK,GAAK,KAC7CK,WAAWtB,EAAYW,QAAQY,QAAQ,GAM1E,OAJqC,IAAjCvB,EAAYS,UAAUxI,QACtB+H,EAAYS,UAAUjI,KAAK,QAI3B,cAACqE,EAAA,EAAD,CAA2CJ,KAAM,EAAjD,SACI,cAACK,EAAA,EAAD,CAAOC,UAAW,EAAgC7F,UAAWX,EAAQ/B,WAArE,SACI,eAACwI,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAG9J,WAAW,SAAvC,UACI,eAAC4J,EAAA,EAAD,CAAM9F,UAAWX,EAAQrB,UAAzB,UACI,eAAC+B,EAAA,EAAD,CACIC,UAAWX,EAAQ5B,WADvB,mBAC0CqL,EAAYpJ,MADtD,MACgEoJ,EAAYxB,aAD5E,OAC8FwB,EAAYO,iBAE1G,cAACtJ,EAAA,EAAD,UAAa+I,EAAYlC,mBACzB,eAAC7G,EAAA,EAAD,8BAA6B+I,EAAYzH,UACzC,eAACtB,EAAA,EAAD,yBAAwB+I,EAAYS,UAAUe,KAAK,SACnD,eAACvK,EAAA,EAAD,oBAAmB+I,EAAYU,QAC/B,eAACzJ,EAAA,EAAD,0BACiB+I,EAAYQ,cAAgB,MAAQ,WAGzD,cAACjD,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,EAACvG,UAAWX,EAAQxB,UAC5D,cAACiI,EAAA,EAAD,CAAMU,MAAI,EAACC,GAAI,EAAf,SACI,eAACX,EAAA,EAAD,CAAM9F,UAAWX,EAAQtB,SAAzB,UACI,eAACgC,EAAA,EAAD,wBAAuB+I,EAAYM,wBACnC,cAACrJ,EAAA,EAAD,CAAYC,UAAWX,EAAQ5B,WAA/B,0BACA,eAACsC,EAAA,EAAD,CAAYC,UAAWX,EAAQ5B,WAA/B,cAA6CuM,KAC7C,uBACA,cAACb,GAAD,CAAuBN,UAAWA,aArBxBC,EAAYnB,aADvBmB,EAAYnB,iBAkCnD,OACI,sBAAK3H,UAAWX,EAAQtC,KAAxB,UACI,cAAC6C,EAAD,IACA,eAACG,EAAA,EAAD,CAAYC,UAAWX,EAAQhD,YAA/B,+BAA+D6G,EAASkB,MAAM1C,gBAC9E,eAAC6I,EAAA,EAAD,CAAYvK,UAAWX,EAAQpB,WAAYsE,MAAOuF,EAAY1F,SAAU,SAAAK,GAAC,OAlGjF,SAAkCJ,GAC9B,IAAME,EAAQiI,SAASnI,EAAMoI,OAAOlI,OACpCwF,EAAcxF,GACd2G,GAAsB3G,GA+F2DmI,CAAyBjI,IAC1FkI,KAAG,EADf,UAEI,cAAC5K,EAAA,EAAD,qCACA,cAAC6K,EAAA,EAAD,CAAkBrI,MAAO,EAAGsI,QAAS,cAACC,EAAA,EAAD,IAAUjI,MAAM,qBACrD,cAAC+H,EAAA,EAAD,CAAkBrI,MAAO,EAAGsI,QAAS,cAACC,EAAA,EAAD,IAAUjI,MAAM,YACrD,cAAC+H,EAAA,EAAD,CAAkBrI,MAAO,EAAGsI,QAAS,cAACC,EAAA,EAAD,IAAUjI,MAAM,aACrD,cAAC+H,EAAA,EAAD,CAAkBrI,MAAO,EAAGsI,QAAS,cAACC,EAAA,EAAD,IAAUjI,MAAM,0BAEzD,cAAC6G,GAAD,CAAsBC,aAAcrB,IACpC,cAACyC,EAAA,EAAD,CAAUC,KAAMhD,EAAWiD,iBAAkB,IAAMC,QAASxC,GAA5D,SACI,cAACyC,EAAA,EAAD,CAAOD,QAASxC,GAAY0C,SAAUhD,EAAtC,SACKF,YEpQL,cAAC,IAAD,CAAOhI,OAAK,EAACC,KAAK,qBAAqBC,UDmHxC,WAaX,IAZA,IAAMf,EAAUxD,IACVqH,EAAWC,cAUX2B,EAA+B,GAC5BC,EAAI,EAAGA,EAAI7B,EAASkB,MAAMhD,SAASL,OAAQgE,IAChDD,EAAkBxD,MAAK,GAdC,MAiBuBf,mBAAS,IAAIsJ,MAjBpC,mBAiBrBwB,EAjBqB,KAiBRC,EAjBQ,KAkBtBC,EAAkC,IAAI1B,KAC5C0B,EAASC,QAAQD,EAASE,UAAY,GAnBV,MAoByBlL,mBAASgL,GApBlC,mBAoBrBG,EApBqB,KAoBPC,EApBO,OAqBqCpL,mBAAS,IArB9C,mBAqBrBqL,EArBqB,KAqBFC,EArBE,OAsBuCtL,mBAAS,IAtBhD,mBAsBrBuL,EAtBqB,KAsBDC,EAtBC,OAuBqBxL,mBAAS,GAvB9B,mBAuBrByL,EAvBqB,KAuBVC,EAvBU,OAwB4B1L,oBAAS,GAxBrC,mBAwBrB2L,EAxBqB,KAwBPC,EAxBO,OAyB0C5L,oBAAS,GAzBnD,mBAyBrB6L,GAzBqB,KAyBAC,GAzBA,QA0BmB9L,mBAAS2C,EAASkB,MAAMhD,UA1B3C,qBA0BrBkL,GA1BqB,MA0BXC,GA1BW,SA2BmBhM,mBAAS2C,EAASkB,MAAMhD,SAASL,QA3BpD,qBA2BrByL,GA3BqB,MA2BXC,GA3BW,SA4BQlM,oBAAS,GA5BjB,qBA4BrBmM,GA5BqB,MA4BTC,GA5BS,SA6BQpM,mBAAS2C,EAASkB,MAAMhD,SAAS,IA7BzC,qBA6BrBwL,GA7BqB,MA6BTC,GA7BS,MA+BtBpF,GAA6B,CAAC8D,EAAUA,GAAW,GA/B7B,8CA+C5B,oCAAAzH,EAAA,yDAEQ2D,GAAK,KAAO4D,GAAe5D,GAAK,KAAOiE,GAAgBjE,GAAK,KAAOuE,EAF3E,wBAGQK,IAAuB,GAH/B,SAKgBS,EAAc5L,gCAAgDgC,EAASkB,MAAMyC,QAAU,sBAC3FiG,GAAO,aAAeC,GAAa1B,GAAe,cAAgB0B,GAAarB,GAAgB,WAAaM,EANxH,SAQ2C/K,MAAM6L,GARjD,UASoC,OADpB1L,EARhB,QASyBC,OATzB,oEAY0DD,EAASI,OAZnE,QAYkBwL,EAZlB,OAakBC,EAAsB/I,KAAKgJ,MAAMhJ,KAAKC,UAAUmI,KAClDa,EAAkBF,EAAYlM,OAClCkM,EAAYrF,SAAQ,SAAAwF,GAChB,IAAMC,EAAWC,GAAQF,EAAKG,QAASP,GACvCI,EAAKI,SAAU,EACfJ,EAAKlO,QAAU,GACfkO,EAAKK,gBAAkBL,EAAKM,mBAAqBL,EAASM,WAEhC,IAAtBN,EAASE,UACTH,EAAKI,SAAU,EACfJ,EAAKlO,QAAU,6BACfiO,KAEAC,EAAKK,iBAAmB,IACxBL,EAAKI,SAAU,EACfJ,EAAKlO,QAAU,qCACfiO,QAGRF,EAAY9F,MAAK,SAACC,EAAUC,GACxB,OAAID,EAAGoG,UAAYnG,EAAGmG,SACV,GAEPpG,EAAGoG,SAAWnG,EAAGmG,QACX,EAEJpG,EAAGmG,QAAUlG,EAAGkG,SAAW,EAAI,KAE1ChB,GAAYU,GACZR,GAAYU,GACZtB,EAAqBkB,GAAa1B,IAClCU,EAAsBgB,GAAarB,IA5C/C,kDA8CY1J,QAAQD,MAAM,SAAd,MA9CZ,QAgDQsK,IAAuB,GAhD/B,QAkDSH,GACDC,GAAgB,GAnDxB,2DA/C4B,sBAsG5B,SAASmB,GAAQM,EAAgBtB,GAC7B,IAAK,IAAIvH,EAAI,EAAGA,EAAIuH,EAASvL,OAAQgE,IACjC,GAAIuH,EAASvH,GAAGwI,UAAYK,EACxB,OAAOtB,EAASvH,GAGxB,MAAO,CACHwI,SAAU,EACVI,WAAY,GAqCpB,SAASZ,GAAac,GAClB,IAAIC,EAAeD,EAAKE,cAAcC,WAClCC,EAAgB,IAAMJ,EAAKK,WAAa,GACxCC,EAAc,GAAKN,EAAKpC,UAQ5B,OANIwC,EAAMlN,OAAS,IACfkN,EAAQ,IAAMA,GAEdE,EAAIpN,OAAS,IACboN,EAAM,IAAMA,GAETL,EAAO,IAAMG,EAAQ,IAAME,EAOtC,SAASC,KACL,OAAO,eAACC,EAAA,EAAD,CAAQnD,QAAS,kBAAMyB,IAAc,IAAQ2B,kBAAgB,sBAAsBtD,KAAM0B,GAAzF,UACH,cAAC6B,EAAA,EAAD,CAAa3L,GAAG,eAAe5C,UAAWX,EAAQZ,YAAlD,kCACA,qBAAKuB,UAAWX,EAAQV,cAAxB,SACI,cAACoB,EAAA,EAAD,CAAYyO,MAAM,SAAlB,SAA4BtL,EAASkB,MAAMd,YAE/C,uBACA,cAAC+C,EAAA,EAAD,IACA,cAACtG,EAAA,EAAD,CAAYyO,MAAM,SAASxO,UAAWX,EAAQb,aAA9C,2BACA,cAAC6H,EAAA,EAAD,IACA,sBAAKrG,UAAWX,EAAQd,UAAxB,UACI,cAACwB,EAAA,EAAD,UAAamD,EAASkB,MAAM1C,eAC5B,cAAC3B,EAAA,EAAD,UAAamD,EAASkB,MAAMxC,qBAEhC,uBACA,cAACyE,EAAA,EAAD,IACA,cAACtG,EAAA,EAAD,CAAYyO,MAAM,SAASxO,UAAWX,EAAQb,aAA9C,0BACA,cAAC6H,EAAA,EAAD,IACA,sBAAKrG,UAAWX,EAAQd,UAAxB,UACI,eAACwB,EAAA,EAAD,yBAAwB6M,GAAWlN,SACnC,eAACK,EAAA,EAAD,WAAa6L,EAAb,OAAoCE,QAExC,uBACA,eAAC2C,EAAA,EAAD,WACI,cAAC1L,EAAA,EAAD,CAAQC,QAAS,kBAAe4J,GAAWW,aAjJnDZ,IAAc,IAiJ+C7J,QAAQ,YAAY/D,MAAM,UAA/E,uBAGA,cAACgE,EAAA,EAAD,CAAQC,QAAS,kBAAM2J,IAAc,IAAQ7J,QAAQ,YAAY/D,MAAM,YAAvE,0BAOZ,OAtKAmE,EAASkB,MAAMhD,SAASwG,SAAQ,SAACwF,GAC7BA,EAAKI,SAAU,EACfJ,EAAKlO,QAAU,MAqKf,sBAAKc,UAAWX,EAAQtC,KAAxB,UACI,cAAC6C,EAAD,IACA,cAACG,EAAA,EAAD,CAAYC,UAAWX,EAAQhD,YAA/B,SAA6C6G,EAASkB,MAAMiB,YAC5D,cAACtF,EAAA,EAAD,CAAYC,UAAWX,EAAQnB,mBAA/B,SAAoDgF,EAASkB,MAAMd,UACnE,eAACgC,EAAA,EAAD,CAAUtF,UAAWX,EAAQf,WAA7B,UACI,cAACwH,EAAA,EAAD,CAAMC,WAAS,EAACS,MAAI,EAACtK,WAAW,SAASuK,GAAI,EAAGzG,UAAWX,EAAQhB,SAAnE,SACI,cAAC0B,EAAA,EAAD,qDAEJ,cAAC+F,EAAA,EAAD,CAAMC,WAAS,EAACS,MAAI,EAACtK,WAAW,SAASuK,GAAI,EAAGzG,UAAWX,EAAQhB,SAAnE,SACI,cAAC,IAAD,CAAyBqQ,MAAOC,IAAhC,SACI,cAAC,IAAD,CACIC,OAAO,SACPhM,GAAG,kBACHC,MAAM,gBACNgM,OAAO,aACPC,QAAS,IAAIjF,KACbtH,MAAO8I,EACPjJ,SAAU,SAACyL,GAAD,OAnFlC,SAAoBA,GAChB,GAAa,OAATA,GAAkC,OAAjBnC,EAAuB,CACxC,GAAImC,EAAKkB,WAAarD,EAAaqD,UAAW,CAC1C,IAAMhF,EAAkC,IAAIF,KAC5CE,EAASiF,SAASnB,EAAKK,YACvBnE,EAASyB,QAAQqC,EAAKpC,UAAY,GAClCE,EAAgB5B,GAEpBoC,GAAgB,GAChBb,EAAeuC,IA0E4CoB,CAAWpB,IACtDqB,oBAAqB,CACjB,aAAc,qBAK9B,cAACpJ,EAAA,EAAD,CAAMC,WAAS,EAACS,MAAI,EAACtK,WAAW,SAASuK,GAAI,EAAGzG,UAAWX,EAAQhB,SAAnE,SACI,cAAC,IAAD,CAAyBqQ,MAAOC,IAAhC,SACI,cAAC,IAAD,CACIC,OAAO,SACPhM,GAAG,mBACHC,MAAM,iBACNgM,OAAO,aACPC,QAASvD,EACThJ,MAAOmJ,EACPtJ,SAAU,SAACyL,GAAD,OAhHlC,SAAqBA,GACjB,GAAa,OAATA,GAAiC,OAAhBxC,EAAsB,CACvC,GAAIwC,EAAKkB,WAAa1D,EAAY0D,UAAW,CACzC,IAAMnF,EAAiC,IAAIC,KAC3CD,EAAQoF,SAASnB,EAAKK,YACtBtE,EAAQ4B,QAAQqC,EAAKpC,UAAY,GACjCH,EAAe1B,GAEnBuC,GAAgB,GAChBR,EAAgBkC,IAuG2CsB,CAAYtB,IACvDqB,oBAAqB,CACjB,aAAc,qBAK9B,cAACpJ,EAAA,EAAD,CAAMC,WAAS,EAACS,MAAI,EAACtK,WAAW,SAASuK,GAAI,EAAGzG,UAAWX,EAAQhB,SAAnE,SACI,cAAC6D,EAAA,EAAD,CACIU,GAAG,kBACHC,MAAM,cACNuM,KAAK,SACLC,gBAAiB,CACbC,QAAQ,GAEZxM,QAAQ,WACRP,MAAOyJ,EACP5J,SAAU,SAAAK,GAxI9B,IAA2B8M,KAwI0B/E,SAAS/H,EAAEgI,OAAOlI,QAvIzD,IACN0J,EAAasD,GACbpD,GAAgB,SAwIZ,cAACrG,EAAA,EAAD,CAAMC,WAAS,EAACS,MAAI,EAACtK,WAAW,SAASuK,GAAI,EAAGzG,UAAWX,EAAQhB,SAAnE,SACI,cAAC0E,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QA9PhB,4CA8P4CC,SAAUmJ,GAAlE,qCAIR,eAACrM,EAAA,EAAD,CAAYC,UAAWX,EAAQlB,aAA/B,UAA8CqO,GAA9C,kBACA,qBAAKxM,UAAWX,EAAQjB,YAAxB,SACI,eAACkH,EAAA,EAAD,CAAUC,KAAM,EAAGC,WAAY,IAAKxF,UAAWX,EAAQ3B,KAAvD,UACI,qBAAK8R,MAAO,CAAC5R,OAAQ,SAEjB0O,GAAS7G,KAAI,SAAC2H,GACV,OACI,cAACzH,EAAA,EAAD,CAAiCJ,KAAM,EAAvC,SACI,cAACpG,EAAD,CAAkBO,MAAO0N,EAAKlO,QAASuQ,aAAW,MAAMC,UAAU,MAAlE,SACI,cAAC9J,EAAA,EAAD,CAAOC,UAAW,EAAsB7F,UAAWX,EAAQ/B,WACpDkS,MAAOpC,EAAKI,QAAU,GAAK,CACvBvQ,gBAAiB,QAF5B,SAII,qBAAKuS,MAAOpC,EAAKI,QAAU,CAACmC,QAAS,KAAO,CACxCA,QAAS,QADb,SAGI,eAAC7J,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAG9J,WAAW,SAAvC,UACI,eAAC4J,EAAA,EAAD,CAAM9F,UAAWX,EAAQrB,UAAzB,UACI,cAAC+B,EAAA,EAAD,CACIC,UAAWX,EAAQ5B,WADvB,SACoC2P,EAAK1N,QACzC,eAACK,EAAA,EAAD,yBAAkD,IAA1BqN,EAAK7D,UAAUxI,OAAe,OAASqM,EAAK7D,UAAUe,KAAK,SACnF,eAACvK,EAAA,EAAD,4BACeqN,EAAKwC,cADpB,aAEA,eAAC7P,EAAA,EAAD,oBAAmBqN,EAAK5D,QACxB,eAACzJ,EAAA,EAAD,0BAAyBqN,EAAK9D,cAAgB,MAAQ,WAE1D,cAACjD,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,EAC/BvG,UAAWX,EAAQxB,UAC5B,cAACiI,EAAA,EAAD,CAAMC,WAAS,EAACS,MAAI,EAACC,GAAI,EAAGvK,WAAW,SAAvC,SACI,eAAC4J,EAAA,EAAD,CAAMC,WAAS,EAAC/F,UAAWX,EAAQtB,SAAnC,UACI,eAACgC,EAAA,EAAD,CACIC,UAAWX,EAAQ5B,WADvB,cACqC2P,EAAK3D,MAD1C,YAEA,cAAC1J,EAAA,EAAD,WAjIpB8P,EAiI4DzC,EAAKK,gBAjI3CqC,EAiI4D1C,EAAKM,mBAhIhHmC,EAAe,IAAMC,EAAQ,sBAiIgB,uBACA,cAAC/M,EAAA,EAAD,CAAQD,QAAQ,YACRE,QAAS,kBA/PzE,SAAyBoK,GACrBP,GAAcO,GACdT,IAAc,GA6P6DoD,CAAgB3C,IAC/BnK,UAAWmK,EAAKI,UAAYtB,EAFpC,kCAzBMkB,EAAKG,YAFpBH,EAAKG,SAxGpD,IAAoCsC,EAAsBC,UAmJlD,cAAC1B,GAAD,iBCnaR4B,SAASC,eAAe,W","file":"static/js/main.4b649a68.chunk.js","sourcesContent":["import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBar} from \"../index\";\nimport {useHistory} from 'react-router-dom';\n\n\nconst useStyles = makeStyles(() => ({\n    sinCentre: {\n        paddingTop: '3em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    }\n}));\n\nexport default function Customer() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [SIN, setSIN] = useState(\"\");\n    const [disableSignIn, setDisableSignIn] = useState(false);\n    const sin_re: RegExp = /^[0-9]{3}-[0-9]{3}-[0-9]{3}$/;\n\n    function validateSIN(): boolean {\n        return !sin_re.test(SIN) && SIN.length !== 0;\n    }\n\n    function keyPressed(e: React.KeyboardEvent<HTMLDivElement>) {\n        if (e.key === 'Enter' && sin_re.test(SIN)) {\n            checkCustomer();\n        }\n    }\n\n    function checkCustomer() {\n        setDisableSignIn(true);\n        fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + SIN)\n            .then(response => {\n                if (response.status === 404) {\n                    history.push('/ui/customer/name', {customerSIN: SIN})\n                } else {\n                    response.json().then(response => {\n                        history.push('/ui/customer/welcome', {\n                            customerSIN: response.customer_sin,\n                            customerName: response.customer_name,\n                            customerAddress: response.customer_address\n                        })\n                    })\n                }\n            }).catch(error => {\n                console.log('Error:', error);\n                setDisableSignIn(false);\n            }\n        )\n    }\n\n    return (\n        <>\n            <TitleBar/>\n            <Typography className={classes.centreTitle}>Sign In</Typography>\n            <div className={classes.sinCentre}>\n                <Typography>To begin searching destinations, enter your social insurance number:</Typography>\n            </div>\n            <div className={classes.sinCentre}>\n                <TextField error={validateSIN()} helperText={validateSIN() ? \"SIN must have format XXX-XXX-XXX\" : \"\"}\n                           onChange={event => setSIN(event.currentTarget.value)}\n                           onKeyPress={e => keyPressed(e)}\n                           id=\"outlined-basic\" label=\"Social Insurance Number\" variant=\"outlined\" value={SIN}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => checkCustomer()}\n                        disabled={!sin_re.test(SIN) || disableSignIn}>Sign In</Button>\n            </div>\n        </>\n    )\n}","import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBar} from \"../index\";\nimport {useHistory, useLocation} from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '5em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}));\n\nexport default function Name() {\n    const classes = useStyles();\n    const location = useLocation<{ customerSIN: string }>();\n    const history = useHistory();\n    const [name, setName] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [nameError, setNameError] = useState(false)\n    const [addressError, setAddressError] = useState(false)\n    const [disableUseButton, setDisableUseButton] = useState(false)\n\n    async function submitInfo() {\n        if (name.length === 0 && address.length === 0) {\n            setNameError(true);\n            setAddressError(true)\n        } else if (name.length !== 0 && address.length === 0) {\n            setNameError(false);\n            setAddressError(true)\n        } else if (name.length === 0 && address.length !== 0) {\n            setNameError(true);\n            setAddressError(false)\n        } else {\n            setDisableUseButton(true);\n            try {\n                let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers\", {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        customer_sin: location.state.customerSIN,\n                        customer_name: name,\n                        customer_address: address\n                    })\n                })\n                if (response.status === 201) {\n                    history.push('/ui/customer/welcome', {\n                        customerSIN: location.state.customerSIN,\n                        customerName: name,\n                        customerAddress: address\n                    })\n                }\n            } catch(error) {\n                console.error('Error:', error);\n                setDisableUseButton(false);\n            }\n        }\n    }\n\n    return (\n        <>\n            <TitleBar/>\n            <div className={classes.centre}>\n                <Typography>Welcome to ExpressBook. Please provide some information about yourself:</Typography>\n            </div>\n            <div className={classes.centre}>\n                <TextField label=\"Full Name\" variant=\"outlined\" value={name} error={nameError}\n                           helperText={nameError ? \"Must provide name\" : \"\"}\n                           onChange={event => setName(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.centre}>\n                <TextField label=\"Address\" variant=\"outlined\" value={address} error={addressError}\n                           helperText={addressError ? \"Must provide address\" : \"\"}\n                           onChange={event => setAddress(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => submitInfo()} disabled={disableUseButton}>Sign In</Button>\n            </div>\n        </>\n    )\n}","import {Button, makeStyles, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBar} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: '2em'\n    },\n    buttonSpacing: {\n        marginLeft: '1.5em',\n        marginRight: '1.5em'\n    }\n}));\n\nexport default function Welcome() {\n    const classes = useStyles();\n    const location = useLocation<{ customerSIN: string, customerName: string, customerAddress: string }>();\n    const history = useHistory();\n    const [disableHotelButton, setDisableHotelButton] = useState(false);\n    const [disableReservationButton, setDisableReservationButton] = useState(false);\n\n    const welcomeMessage = \"Welcome, \" + location.state.customerName;\n    const addressMessage = \"Your address: \" + location.state.customerAddress;\n\n    async function goToBrandPage() {\n        setDisableHotelButton(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/brands\");\n            if (response.status !== 200) {\n                setDisableHotelButton(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/customer/brands', {\n                customerSIN: location.state.customerSIN,\n                customerAddress: location.state.customerAddress,\n                customerName: location.state.customerName,\n                response: response\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            setDisableHotelButton(false);\n        }\n    }\n\n    async function goToReservationsPage() {\n        setDisableReservationButton(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + location.state.customerSIN + \"/reservations\");\n            if (response.status !== 200) {\n                setDisableReservationButton(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/customer/reservations', {\n                customerName: location.state.customerName,\n                customerSIN: location.state.customerSIN,\n                customerAddress: location.state.customerAddress,\n                response: response\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            setDisableReservationButton(false);\n        }\n    }\n\n    return (\n        <>\n            <TitleBar/>\n            <Typography className={classes.centreTitle}>{welcomeMessage}</Typography>\n            <Typography className={classes.centre}>{addressMessage}</Typography>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" className={classes.buttonSpacing} onClick={() => goToBrandPage()}\n                        disabled={disableHotelButton}>Find A Hotel</Button>\n                <Button variant=\"contained\" onClick={() => goToReservationsPage()} disabled={disableReservationButton}>My\n                    Reservations</Button>\n            </div>\n        </>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBar} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em',\n        width: '100%'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    brandGrid: {\n        width: '80%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    }\n}));\n\nexport default function HotelBrand() {\n    const classes = useStyles();\n    const location = useLocation<{customerSIN: string, customerName: string, customerAddress: string, response: any }>();\n    const history = useHistory();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n\n    async function getHotels(index: number) {\n        let newStates = [...buttonStates]\n        newStates[index] = true;\n        setButtonStates(newStates);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/brands/\" + location.state.response[index].brand_id + \"/hotels\");\n            if (response.status !== 200) {\n                let newStates = [...buttonStates]\n                newStates[index] = false;\n                setButtonStates(newStates);\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/customer/hotels', {\n                customerSIN: location.state.customerSIN,\n                customerName: location.state.customerName,\n                customerAddress: location.state.customerAddress,\n                response: response,\n                brandName: location.state.response[index].name,\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[index] = false;\n            setButtonStates(newStates);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBar/>\n            <Typography className={classes.centreTitle}>Select a hotel brand to view hotels:</Typography>\n            <GridList cols={1} cellHeight={200} className={classes.grid}>\n                {\n                    location.state.response.map((brand: {\n                        brand_id: number;\n                        name: string;\n                        main_office_address: string;\n                        email_address: string;\n                        phone_number: string;\n                        number_of_hotels: number;\n                    }, index: number) => {\n                        return (\n                            <GridListTile key={brand.brand_id} cols={1}>\n                                <Paper elevation={3} key={brand.brand_id} className={classes.brandPaper}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid className={classes.brandGrid}>\n                                            <Typography className={classes.hotelTitle}>{brand.name}</Typography>\n                                            <Typography>Headquarters Address: {brand.main_office_address}</Typography>\n                                            <Typography>Email: {brand.email_address}</Typography>\n                                            <Typography>Phone: {brand.phone_number}</Typography>\n                                            <Typography>Number of hotels: {brand.number_of_hotels}</Typography>\n                                        </Grid>\n                                        <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                        <Grid item xs={2}>\n                                            <Grid className={classes.priceDiv}>\n                                                <Button variant='contained' onClick={() => getHotels(index)}\n                                                        disabled={buttonStates[index]}>Select</Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </GridListTile>\n                        );\n                    })\n                }\n            </GridList>\n        </div>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBar} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {Rating} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em',\n        width: '100%'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    hotelGrid: {\n        width: '80%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n\n    }\n}));\n\nexport default function Hotel() {\n    const classes = useStyles();\n    const location = useLocation<{\n        customerSIN: string,\n        customerName: string,\n        customerAddress: string,\n        response: any,\n        brandName: string\n    }>();\n    const history = useHistory();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n\n    async function getHotels(index: number) {\n        let newStates = [...buttonStates]\n        newStates[index] = true;\n        setButtonStates(newStates);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.response[index].hotel_id + \"/rooms\");\n            if (response.status !== 200) {\n                let newStates = [...buttonStates]\n                newStates[index] = false;\n                setButtonStates(newStates);\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/customer/rooms', {\n                customerSIN: location.state.customerSIN,\n                customerName: location.state.customerName,\n                customerAddress: location.state.customerAddress,\n                response: response,\n                brandName: location.state.brandName,\n                address: location.state.response[index].physical_address,\n                hotelID: location.state.response[index].hotel_id\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[index] = false;\n            setButtonStates(newStates);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBar/>\n            <Typography className={classes.centreTitle}>{location.state.brandName} Hotels</Typography>\n            <GridList cols={1} cellHeight={175} className={classes.grid}>\n                {\n                    location.state.response.map((hotel: {\n                        physical_address: string;\n                        email_address: string;\n                        phone_number: string;\n                        number_of_rooms: number;\n                        hotel_id: number;\n                        star_category: number;\n                    }, index: number) => {\n                        return (\n                            <GridListTile key={hotel.hotel_id} cols={1}>\n                                <Paper elevation={3} key={hotel.hotel_id} className={classes.brandPaper}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid className={classes.hotelGrid}>\n                                            <Typography\n                                                className={classes.hotelTitle}>{hotel.physical_address}</Typography>\n                                            <Typography>Email: {hotel.email_address}</Typography>\n                                            <Typography>Phone: {hotel.phone_number}</Typography>\n                                            <Typography>Number of rooms: {hotel.number_of_rooms}</Typography>\n                                        </Grid>\n                                        <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                        <Grid item xs={2}>\n                                            <Grid className={classes.priceDiv}>\n                                                <Rating value={hotel.star_category} readOnly/>\n                                                <br/><br/>\n                                                <Button variant='contained' onClick={() => getHotels(index)}\n                                                        disabled={buttonStates[index]}>View Details</Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </GridListTile>\n                        );\n                    })\n                }\n            </GridList>\n        </div>\n    )\n}","import {\n    Button,\n    Divider, FormControlLabel,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper, Radio, RadioGroup, Snackbar,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBar} from \"../index\";\nimport {useLocation} from \"react-router-dom\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    hotelGrid: {\n        width: '70%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    radioGroup: {\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em'\n    }\n}));\n\ninterface Reservation {\n    booking_id: number;\n    physical_address: string;\n    date_of_registration: string;\n    check_in_day: string;\n    check_out_day: string;\n    status: string;\n    title: string;\n    is_extendable: boolean;\n    amenities: string[];\n    view: string;\n    price: string;\n}\n\ntype Severity = \"error\" | \"success\" | \"info\" | \"warning\" | undefined;\n\nexport default function Reservations() {\n    const classes = useStyles();\n    const location = useLocation<{\n        customerName: string;\n        customerSIN: string,\n        response: Reservation[]\n    }>();\n\n    location.state.response.sort((r1: Reservation, r2: Reservation) => (r1.check_in_day > r2.check_in_day) ? 1 : -1);\n    const ongoing: number[] = [];\n    const upcoming: number[] = [];\n    const past: number[] = [];\n    const all: number[] = [];\n\n    for (let i = 0; i < location.state.response.length; i++) {\n        all.push(location.state.response[i].booking_id);\n    }\n    location.state.response.forEach((res: Reservation, index: number) => {\n        if (res.status === 'Renting') {\n            ongoing.push(location.state.response[index].booking_id);\n        } else if (res.status === 'Booked') {\n            upcoming.push(location.state.response[index].booking_id);\n        } else {\n            past.push(location.state.response[index].booking_id);\n        }\n    });\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n    const [radioState, setRadioState] = useState(0);\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertStatus, setAlertStatus]: [Severity, any] = useState(\"success\");\n    const [bookingIDs, setBookingIDs]: [number[], any] = useState(all);\n\n    function openAlert(message: string, status: string) {\n        setAlertMessage(message);\n        setAlertStatus(status);\n        setAlertOpen(true);\n    }\n\n    function closeAlert() {\n        setAlertOpen(false);\n    }\n\n    async function patchReservation(action: string, bookingID: number) {\n        let newStates = [...buttonStates]\n        const reservation = bookingIDToReservation(bookingID);\n        newStates[reservation.index] = true;\n        setButtonStates(newStates);\n\n        try {\n            let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + location.state.customerSIN + \"/reservations/\" + reservation.reservation.booking_id, {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    status: action\n                })\n            })\n            if (response.status === 204) {\n                if (action === 'Archived') {\n                    ongoing.splice(ongoing.indexOf(bookingID), 1);\n                    reservation.reservation.status = 'Archived';\n                    past.push(bookingID)\n                    setReservationIndices(radioState);\n                    openAlert('Successfully checked out of hotel', 'success');\n\n                } else {\n                    upcoming.splice(upcoming.indexOf(bookingID), 1);\n                    reservation.reservation.status = 'Cancelled';\n                    past.push(bookingID)\n                    setReservationIndices(radioState);\n                    openAlert('Successfully cancelled room booking', 'success')\n                }\n            } else {\n                let newStates = [...buttonStates]\n                newStates[reservation.index] = false;\n                setButtonStates(newStates);\n                openAlert('Error: Unable to modify reservation', 'error')\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[reservation.index] = false;\n            setButtonStates(newStates);\n            openAlert('Error: Unable to modify reservation', 'error')\n        }\n    }\n\n    function ReservationEditButton(props: { bookingID: number; }) {\n        const res = bookingIDToReservation(props.bookingID);\n        if (res.reservation.status === 'Renting') {\n            return <Button variant='contained' onClick={() => patchReservation('Archived', props.bookingID)}\n                           disabled={buttonStates[res.index]}>Check Out</Button>\n        }\n        if (res.reservation.status === 'Booked') {\n            return <Button variant='contained' onClick={() => patchReservation('Cancelled', props.bookingID)}\n                           disabled={buttonStates[res.index]}>Cancel</Button>\n        }\n        return <></>\n    }\n\n    function setReservationRadioState(event: React.ChangeEvent<HTMLInputElement>) {\n        const value = parseInt(event.target.value);\n        setRadioState(value);\n        setReservationIndices(value);\n    }\n\n    function setReservationIndices(value: number) {\n        if (value === 0) {\n            setBookingIDs([...all]);\n        } else if (value === 1) {\n            setBookingIDs([...ongoing]);\n        } else if (value === 2) {\n            setBookingIDs([...upcoming]);\n        } else {\n            setBookingIDs([...past]);\n        }\n    }\n\n    function bookingIDToReservation(bookingID: number): { reservation: Reservation, index: number } {\n        for (let i = 0; i < location.state.response.length; i++) {\n            const reservation = location.state.response[i];\n            if (reservation.booking_id === bookingID) {\n                return {reservation: reservation, index: i};\n            }\n        }\n        return {\n            reservation: {\n                booking_id: -1,\n                physical_address: '',\n                date_of_registration: '',\n                check_in_day: '',\n                check_out_day: '',\n                status: '',\n                title: '',\n                is_extendable: false,\n                amenities: [],\n                view: '',\n                price: ''\n            },\n            index: -1\n        }\n    }\n\n\n    function GenerateReservations(props: { reservations: number[] }) {\n        return <GridList cols={1} cellHeight={220} className={classes.grid}>\n            {\n                props.reservations.map((bookingID: number) => {\n                    const res = bookingIDToReservation(bookingID);\n                    const reservation = res.reservation;\n                    const checkIn: Date = new Date(reservation.check_in_day.replace('-', '/'))\n                    const checkOut: Date = new Date(reservation.check_out_day.replace('-', '/'))\n                    const days: number = Math.round(Math.abs(+checkIn - +checkOut) / 24 / 60 / 60 / 1000)\n                    const totalPrice: string = (days * parseFloat(reservation.price)).toFixed(2)\n\n                    if (reservation.amenities.length === 0) {\n                        reservation.amenities.push(\"None\")\n                    }\n\n                    return (\n                        <GridListTile key={reservation.booking_id} cols={1}>\n                            <Paper elevation={3} key={reservation.booking_id} className={classes.brandPaper}>\n                                <Grid container spacing={2} alignItems=\"center\">\n                                    <Grid className={classes.hotelGrid}>\n                                        <Typography\n                                            className={classes.hotelTitle}>Room: {reservation.title} | {reservation.check_in_day} to {reservation.check_out_day}\n                                        </Typography>\n                                        <Typography>{reservation.physical_address}</Typography>\n                                        <Typography>Booking status: {reservation.status}</Typography>\n                                        <Typography>Amenities: {reservation.amenities.join(', ')}</Typography>\n                                        <Typography>View: {reservation.view}</Typography>\n                                        <Typography>\n                                            Extendable: {reservation.is_extendable ? \"Yes\" : \"No\"}\n                                        </Typography>\n                                    </Grid>\n                                    <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                    <Grid item xs={3}>\n                                        <Grid className={classes.priceDiv}>\n                                            <Typography>Booked on {reservation.date_of_registration}</Typography>\n                                            <Typography className={classes.hotelTitle}>Total price:</Typography>\n                                            <Typography className={classes.hotelTitle}>${totalPrice}</Typography>\n                                            <br/>\n                                            <ReservationEditButton bookingID={bookingID}/>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </GridListTile>\n                    );\n                })\n            }\n        </GridList>\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBar/>\n            <Typography className={classes.centreTitle}>My Reservations - {location.state.customerName}</Typography>\n            <RadioGroup className={classes.radioGroup} value={radioState} onChange={e => setReservationRadioState(e)}\n                        row>\n                <Typography>Filter by:&nbsp;&nbsp;&nbsp;</Typography>\n                <FormControlLabel value={0} control={<Radio/>} label=\"All Reservations\"/>\n                <FormControlLabel value={1} control={<Radio/>} label=\"Ongoing\"/>\n                <FormControlLabel value={2} control={<Radio/>} label=\"Upcoming\"/>\n                <FormControlLabel value={3} control={<Radio/>} label=\"Cancelled/Archived\"/>\n            </RadioGroup>\n            <GenerateReservations reservations={bookingIDs}/>\n            <Snackbar open={alertOpen} autoHideDuration={6000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity={alertStatus}>\n                    {alertMessage}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}","import {\n    Button, Dialog, DialogActions, DialogTitle,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper, TextField, Tooltip,\n    TooltipProps,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBar} from \"../index\";\nimport {useLocation} from \"react-router-dom\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {MaterialUiPickersDate} from \"@material-ui/pickers/typings/date\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '1em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    centreTitleNoSpace: {\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    smallerTitle: {\n        fontSize: '1.7em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        marginBottom: '0.5em'\n    },\n    brandPaper: {\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        marginTop: '1em'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '50em',\n        width: '85%',\n        marginTop: '10em'\n    },\n    outsideGrid: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        marginBottom: '2em'\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em',\n    },\n    hotelGrid: {\n        width: '70%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n\n    },\n    dateGrid: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    gridParent: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    dialogDiv: {\n        marginLeft: \"0.5em\",\n        marginRight: \"0.5em\"\n    },\n    dialogHeader: {\n        fontWeight: 'bold'\n    },\n    dialogTitle: {\n        textDecoration: \"underline\",\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    dialogAddress: {\n        marginLeft: \"0.5em\",\n        marginRight: \"0.5em\",\n        fontStyle: \"italic\"\n    }\n}));\n\nconst useStylesBootstrap = makeStyles((theme) => ({\n    arrow: {\n        color: theme.palette.common.black,\n    },\n    tooltip: {\n        backgroundColor: theme.palette.common.black,\n    },\n}));\n\nfunction BootstrapTooltip(props: JSX.IntrinsicAttributes & TooltipProps) {\n    const classes = useStylesBootstrap();\n\n    return <Tooltip arrow classes={classes} {...props} />;\n}\n\ninterface Room {\n    type_id: number;\n    title: string;\n    price: string;\n    amenities: string[];\n    room_capacity: number;\n    view: string;\n    is_extendable: boolean;\n    total_number_rooms: number;\n    rooms_available: number;\n    enabled: undefined | boolean;\n    tooltip: string;\n}\n\ninterface AvailableRoom {\n    type_id: number;\n    occupancy: number;\n}\n\nexport default function Rooms() {\n    const classes = useStyles();\n    const location = useLocation<{\n        address: string;\n        customerSIN: string,\n        customerName: string,\n        customerAddress: string,\n        response: Room[],\n        brandName: string,\n        hotelID: string\n    }>();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(true)\n    }\n\n    const [checkInDate, setCheckInDate]: [Date, any] = useState(new Date());\n    const tomorrow: MaterialUiPickersDate = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1)\n    const [checkOutDate, setCheckOutDate]: [Date, any] = useState(tomorrow);\n    const [checkInDateToBook, setCheckInDateToBook]: [string, any] = useState(\"\");\n    const [checkOutDateToBook, setCheckOutDateToBook]: [string, any] = useState(\"\");\n    const [numPeople, setNumPeople]: [number, any] = useState(1);\n    const [availability, setAvailability]: [boolean, any] = useState(false);\n    const [disableAvailability, setDisableAvailability]: [boolean, any] = useState(false);\n    const [roomData, setRoomData]: [Room[], any] = useState(location.state.response);\n    const [numRooms, setNumRooms]: [number, any] = useState(location.state.response.length);\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const [roomToBook, setRoomToBook] = useState(location.state.response[0]);\n\n    const past: [Date, Date, number] = [tomorrow, tomorrow, -1]\n\n    location.state.response.forEach((room: Room) => {\n        room.enabled = true;\n        room.tooltip = \"\";\n    })\n\n    function confirmBookRoom(room: Room) {\n        setRoomToBook(room);\n        setDialogOpen(true);\n    }\n\n    function bookRoom(typeID: number) {\n        setDialogOpen(false);\n    }\n\n    async function checkAvailability() {\n        //Only check availability if filters have been changed\n        if (past[0] !== checkInDate || past[1] !== checkOutDate || past[2] !== numPeople) {\n            setDisableAvailability(true);\n            try {\n                let url: string = process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.hotelID + \"/rooms/availability\"\n                url += \"?check-in=\" + dateToString(checkInDate) + \"&check-out=\" + dateToString(checkOutDate) + \"&people=\" + numPeople;\n\n                let response: Response = await fetch(url);\n                if (response.status !== 200) {\n                    return;\n                }\n                const availableRooms: AvailableRoom[] = await response.json();\n                const newRoomData: Room[] = JSON.parse(JSON.stringify(roomData));\n                let roomNum: number = newRoomData.length;\n                newRoomData.forEach(room => {\n                    const roomInfo = getRoom(room.type_id, availableRooms);\n                    room.enabled = true;\n                    room.tooltip = \"\";\n                    room.rooms_available = room.total_number_rooms - roomInfo.occupancy;\n                    //Room capacity is too small; disable\n                    if (roomInfo.type_id === -1) {\n                        room.enabled = false;\n                        room.tooltip = \"Room capacity is too small\";\n                        roomNum--;\n                    }\n                    if (room.rooms_available <= 0) {\n                        room.enabled = false;\n                        room.tooltip = \"Room is booked up over these dates\"\n                        roomNum--;\n                    }\n                });\n                newRoomData.sort((r1: Room, r2: Room) => {\n                    if (r1.enabled && !r2.enabled) {\n                        return -1;\n                    }\n                    if (!r1.enabled && r2.enabled) {\n                        return 1;\n                    }\n                    return r1.type_id > r2.type_id ? -1 : 1;\n                })\n                setRoomData(newRoomData);\n                setNumRooms(roomNum);\n                setCheckInDateToBook(dateToString(checkInDate));\n                setCheckOutDateToBook(dateToString(checkOutDate));\n            } catch (error) {\n                console.error('Error:', error);\n            }\n            setDisableAvailability(false);\n        }\n        if (!availability) {\n            setAvailability(true);\n        }\n    }\n\n    function getRoom(typeID: number, roomData: AvailableRoom[]): AvailableRoom {\n        for (let i = 0; i < roomData.length; i++) {\n            if (roomData[i].type_id === typeID) {\n                return roomData[i];\n            }\n        }\n        return {\n            type_id: -1,\n            occupancy: -1\n        }\n    }\n\n    function setNumberOfPeople(num: number) {\n        if (num > 0) {\n            setNumPeople(num);\n            setAvailability(false);\n        }\n    }\n\n    function setCheckOut(date: MaterialUiPickersDate) {\n        if (date !== null && checkInDate !== null) {\n            if (date.getTime() <= checkInDate.getTime()) {\n                const checkIn: MaterialUiPickersDate = new Date();\n                checkIn.setMonth(date.getMonth())\n                checkIn.setDate(date.getDate() - 1)\n                setCheckInDate(checkIn);\n            }\n            setAvailability(false);\n            setCheckOutDate(date);\n        }\n    }\n\n    function setCheckIn(date: MaterialUiPickersDate) {\n        if (date !== null && checkOutDate !== null) {\n            if (date.getTime() >= checkOutDate.getTime()) {\n                const checkOut: MaterialUiPickersDate = new Date();\n                checkOut.setMonth(date.getMonth())\n                checkOut.setDate(date.getDate() + 1)\n                setCheckOutDate(checkOut);\n            }\n            setAvailability(false);\n            setCheckInDate(date);\n        }\n    }\n\n    function dateToString(date: Date): string {\n        let year: string = date.getFullYear().toString();\n        let month: string = '' + (date.getMonth() + 1);\n        let day: string = '' + date.getDate();\n\n        if (month.length < 2) {\n            month = '0' + month;\n        }\n        if (day.length < 2) {\n            day = '0' + day;\n        }\n        return year + '-' + month + '-' + day;\n    }\n\n    function getRoomAvailabilityMessage(numAvailable: number, total: number): string {\n        return numAvailable + '/' + total + ' rooms available';\n    }\n\n    function ConfirmationDialog() {\n        return <Dialog onClose={() => setDialogOpen(false)} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n            <DialogTitle id=\"dialog-title\" className={classes.dialogTitle}>Confirm Room Booking</DialogTitle>\n            <div className={classes.dialogAddress}>\n                <Typography align=\"center\">{location.state.address}</Typography>\n            </div>\n            <br/>\n            <Divider/>\n            <Typography align=\"center\" className={classes.dialogHeader}>Customer Info</Typography>\n            <Divider/>\n            <div className={classes.dialogDiv}>\n                <Typography>{location.state.customerName}</Typography>\n                <Typography>{location.state.customerAddress}</Typography>\n            </div>\n            <br/>\n            <Divider/>\n            <Typography align=\"center\" className={classes.dialogHeader}>Room Details</Typography>\n            <Divider/>\n            <div className={classes.dialogDiv}>\n                <Typography>Room type: {roomToBook.title}</Typography>\n                <Typography>{checkInDateToBook} to {checkOutDateToBook}</Typography>\n            </div>\n            <br/>\n            <DialogActions>\n                <Button onClick={() => bookRoom(roomToBook.type_id)} variant=\"contained\" color=\"primary\">\n                    Book Room\n                </Button>\n                <Button onClick={() => setDialogOpen(false)} variant=\"contained\" color=\"secondary\">\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBar/>\n            <Typography className={classes.centreTitle}>{location.state.brandName}</Typography>\n            <Typography className={classes.centreTitleNoSpace}>{location.state.address}</Typography>\n            <GridList className={classes.gridParent}>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <Typography>Enter booking info to select a room:</Typography>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"check-in-dialog\"\n                            label=\"Check in date\"\n                            format=\"yyyy-MM-dd\"\n                            minDate={new Date()}\n                            value={checkInDate}\n                            onChange={(date: MaterialUiPickersDate) => setCheckIn(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"check-out-dialog\"\n                            label=\"Check out date\"\n                            format=\"yyyy-MM-dd\"\n                            minDate={tomorrow}\n                            value={checkOutDate}\n                            onChange={(date: MaterialUiPickersDate) => setCheckOut(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <TextField\n                        id=\"capacity-number\"\n                        label=\"# of people\"\n                        type=\"number\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        variant=\"outlined\"\n                        value={numPeople}\n                        onChange={e => setNumberOfPeople(parseInt(e.target.value))}\n                    />\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <Button variant=\"contained\" onClick={checkAvailability} disabled={disableAvailability}>Check\n                        Availability</Button>\n                </Grid>\n            </GridList>\n            <Typography className={classes.smallerTitle}>{numRooms} Rooms Found</Typography>\n            <div className={classes.outsideGrid}>\n                <GridList cols={1} cellHeight={190} className={classes.grid}>\n                    <div style={{height: '1em'}}/>\n                    {\n                        roomData.map((room: Room) => {\n                            return (\n                                <GridListTile key={room.type_id} cols={1}>\n                                    <BootstrapTooltip title={room.tooltip} aria-label=\"add\" placement=\"top\">\n                                        <Paper elevation={3} key={room.type_id} className={classes.brandPaper}\n                                               style={room.enabled ? {} : {\n                                                   backgroundColor: 'grey'\n                                               }}>\n                                            <div style={room.enabled ? {opacity: '1'} : {\n                                                opacity: '0.40'\n                                            }}>\n                                                <Grid container spacing={2} alignItems=\"center\">\n                                                    <Grid className={classes.hotelGrid}>\n                                                        <Typography\n                                                            className={classes.hotelTitle}>{room.title}</Typography>\n                                                        <Typography>Amenities: {room.amenities.length === 0 ? \"None\" : room.amenities.join(', ')}</Typography>\n                                                        <Typography>Max\n                                                            capacity: {room.room_capacity} adults</Typography>\n                                                        <Typography>View: {room.view}</Typography>\n                                                        <Typography>Extendable: {room.is_extendable ? \"Yes\" : \"No\"}</Typography>\n                                                    </Grid>\n                                                    <Divider orientation=\"vertical\" flexItem\n                                                             className={classes.divider}/>\n                                                    <Grid container item xs={3} alignItems=\"center\">\n                                                        <Grid container className={classes.priceDiv}>\n                                                            <Typography\n                                                                className={classes.hotelTitle}>${room.price}/night</Typography>\n                                                            <Typography>{getRoomAvailabilityMessage(room.rooms_available, room.total_number_rooms)}</Typography>\n                                                            <br/>\n                                                            <Button variant='contained'\n                                                                    onClick={() => confirmBookRoom(room)}\n                                                                    disabled={!room.enabled || !availability}>Book\n                                                                Room</Button>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </div>\n                                        </Paper>\n                                    </BootstrapTooltip>\n                                </GridListTile>\n                            );\n                        })\n                    }\n                </GridList>\n            </div>\n            <ConfirmationDialog/>\n        </div>\n    )\n}","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Employee from \"./Employee\";\nimport Customer from \"./customer/Customer\";\nimport {AppBar, makeStyles, Typography} from \"@material-ui/core\";\nimport Name from \"./customer/Name\";\nimport Welcome from \"./customer/Welcome\";\nimport HotelBrand from \"./customer/HotelBrand\";\nimport Hotel from \"./customer/Hotel\";\nimport Reservations from \"./customer/Reservations\";\nimport Rooms from \"./customer/Rooms\";\n\nrequire('dotenv').config()\n\nconst useTitleStyles = makeStyles(() => ({\n    title: {\n        fontSize: \"2.5em\",\n        fontWeight: \"bold\",\n        paddingLeft: \"1em\"\n    }\n}));\n\nexport function TitleBar() {\n    const classes = useTitleStyles();\n    return <AppBar position=\"static\">\n        <Typography className={classes.title}>ExpressBook Customer Portal</Typography>\n    </AppBar>\n}\n\nReactDOM.render(\n    <>\n        <Router>\n            <Switch>\n                <Route exact path=\"/ui/employee\" component={Employee}/>\n                <Route exact path=\"/ui/customer\" component={Customer}/>\n                <Route exact path=\"/ui/customer/name\" component={Name}/>\n                <Route exact path=\"/ui/customer/welcome\" component={Welcome}/>\n                <Route exact path=\"/ui/customer/brands\" component={HotelBrand}/>\n                <Route exact path=\"/ui/customer/hotels\" component={Hotel}/>\n                <Route exact path=\"/ui/customer/reservations\" component={Reservations}/>\n                <Route exact path=\"/ui/customer/rooms\" component={Rooms}/>\n            </Switch>\n        </Router>\n    </>,\n    document.getElementById('root')\n);\n","export default function Employee() {\n    return (\n        <>\n            Employee page\n        </>\n    )\n}"],"sourceRoot":""}