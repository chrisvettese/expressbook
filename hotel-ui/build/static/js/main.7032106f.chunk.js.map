{"version":3,"sources":["employee/Employee.tsx","customer/Customer.tsx","customer/Name.tsx","customer/Welcome.tsx","customer/HotelBrand.tsx","customer/Hotel.tsx","customer/Reservations.tsx","customer/Rooms.tsx","index.tsx"],"names":["useStyles","makeStyles","sinCentre","paddingTop","display","alignItems","justifyContent","buttonCentre","centreTitle","fontWeight","fontSize","width","centre","marginTop","buttonSpacing","marginLeft","marginRight","theme","root","flexWrap","backgroundColor","palette","background","paper","marginBottom","brandPaper","padding","flexDirection","hotelTitle","grid","boxShadow","height","divider","brandGrid","priceDiv","hotelGrid","radioGroup","centreTitleNoSpace","smallerTitle","outsideGrid","dateGrid","gridParent","dialogDiv","dialogHeader","dialogTitle","dialogAddress","fontStyle","useStylesBootstrap","arrow","color","common","black","tooltip","BootstrapTooltip","props","classes","Tooltip","require","config","useTitleStyles","title","paddingLeft","TitleBarCustomer","AppBar","position","Typography","className","TitleBarEmployee","ReactDOM","exact","path","component","history","useHistory","useState","SIN","setSIN","disableSignIn","setDisableSignIn","error","setError","sin_re","validateSIN","test","length","checkEmployee","fetch","process","then","response","status","json","push","customerSIN","customer_sin","customerName","customer_name","customerAddress","customer_address","catch","console","log","TextField","helperText","onChange","event","currentTarget","value","onKeyPress","e","key","keyPressed","id","label","variant","Button","onClick","disabled","style","checkCustomer","location","useLocation","name","setName","address","setAddress","nameError","setNameError","addressError","setAddressError","disableUseButton","setDisableUseButton","a","method","headers","body","JSON","stringify","state","submitInfo","disableHotelButton","setDisableHotelButton","disableReservationButton","setDisableReservationButton","welcomeMessage","addressMessage","goToBrandPage","goToReservationsPage","buttonStateValues","i","buttonStates","setButtonStates","index","newStates","brand_id","brandName","GridList","cols","cellHeight","map","brand","GridListTile","Paper","elevation","Grid","container","spacing","main_office_address","email_address","phone_number","number_of_hotels","Divider","orientation","flexItem","item","xs","getHotels","hotel_id","physical_address","hotelID","hotel","number_of_rooms","Rating","star_category","readOnly","sort","r1","r2","check_in_day","ongoing","upcoming","past","all","booking_id","forEach","res","radioState","setRadioState","alertOpen","setAlertOpen","alertMessage","setAlertMessage","alertStatus","setAlertStatus","bookingIDs","setBookingIDs","openAlert","message","closeAlert","patchReservation","action","bookingID","reservation","bookingIDToReservation","splice","indexOf","setReservationIndices","ReservationEditButton","date_of_registration","check_out_day","is_extendable","amenities","view","price","GenerateReservations","reservations","checkIn","Date","replace","checkOut","totalPrice","Math","round","abs","parseFloat","toFixed","join","RadioGroup","parseInt","target","setReservationRadioState","row","FormControlLabel","control","Radio","Snackbar","open","autoHideDuration","onClose","Alert","severity","checkInDate","setCheckInDate","tomorrow","setDate","getDate","checkOutDate","setCheckOutDate","checkInDateToBook","setCheckInDateToBook","checkOutDateToBook","setCheckOutDateToBook","numPeople","setNumPeople","availability","setAvailability","disableAvailability","setDisableAvailability","roomData","setRoomData","numRooms","setNumRooms","dialogOpen","setDialogOpen","roomToBook","setRoomToBook","url","dateToString","availableRooms","newRoomData","parse","roomNum","room","roomInfo","getRoom","type_id","enabled","rooms_available","total_number_rooms","occupancy","typeID","date","year","getFullYear","toString","month","getMonth","day","ConfirmationDialog","Dialog","aria-labelledby","DialogTitle","align","DialogActions","utils","DateFnsUtils","margin","format","minDate","getTime","setMonth","setCheckIn","KeyboardButtonProps","setCheckOut","type","InputLabelProps","shrink","num","aria-label","placement","opacity","room_capacity","numAvailable","total","confirmBookRoom","document","getElementById"],"mappings":"0SAMMA,EAAYC,aAAW,iBAAO,CAChCC,UAAW,CACPC,WAAY,MACZC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEpBC,aAAc,CACVJ,WAAY,MACZC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEpBE,YAAa,CACTL,WAAY,MACZM,WAAY,OACZC,SAAU,MACVN,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBK,MAAO,YCpBf,IAAMX,EAAYC,aAAW,iBAAO,CAChCC,UAAW,CACPC,WAAY,MACZC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEpBC,aAAc,CACVJ,WAAY,MACZC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEpBE,YAAa,CACTL,WAAY,MACZM,WAAY,OACZC,SAAU,MACVN,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBK,MAAO,Y,sCCrBTX,EAAYC,aAAW,iBAAO,CAChCW,OAAQ,CACJT,WAAY,MACZC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEpBC,aAAc,CACVJ,WAAY,MACZC,QAAS,OACTC,WAAY,SACZC,eAAgB,cCXxB,IAAMN,EAAYC,aAAW,iBAAO,CAChCW,OAAQ,CACJT,WAAY,MACZC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEpBE,YAAa,CACTL,WAAY,MACZM,WAAY,OACZC,SAAU,MACVN,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEpBC,aAAc,CACVH,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBO,UAAW,OAEfC,cAAe,CACXC,WAAY,QACZC,YAAa,a,yDCdfhB,EAAYC,aAAW,SAAAgB,GAAK,MAAK,CACnCC,KAAM,CACFd,QAAS,OACTe,SAAU,OACVb,eAAgB,eAChBc,gBAAiBH,EAAMI,QAAQC,WAAWC,OAG9Cf,YAAa,CACTL,WAAY,MACZM,WAAY,OACZC,SAAU,MACVN,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBkB,aAAc,OAElBC,WAAY,CACRZ,UAAW,MACXE,WAAY,MACZC,YAAa,MACbU,QAAS,MACTtB,QAAS,OACTuB,cAAe,SACfrB,eAAgB,UAEpBsB,WAAY,CACRnB,WAAY,OACZC,SAAU,QACVC,MAAO,QAEXkB,KAAM,CACFC,UAAW,mBACXC,OAAQ,OACRpB,MAAO,MACPE,UAAW,OACXE,WAAY,QAEhBiB,QAAS,CACLjB,WAAY,MACZC,YAAa,OAEjBiB,UAAW,CACPtB,MAAO,OAEXuB,SAAU,CACN9B,QAAS,OACTC,WAAY,SACZsB,cAAe,SACfrB,eAAgB,c,aChDlBN,EAAYC,aAAW,SAAAgB,GAAK,MAAK,CACnCC,KAAM,CACFd,QAAS,OACTe,SAAU,OACVb,eAAgB,eAChBc,gBAAiBH,EAAMI,QAAQC,WAAWC,OAG9Cf,YAAa,CACTL,WAAY,MACZM,WAAY,OACZC,SAAU,MACVN,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBkB,aAAc,MACdb,MAAO,QAEXc,WAAY,CACRZ,UAAW,MACXE,WAAY,MACZC,YAAa,MACbU,QAAS,MACTtB,QAAS,OACTuB,cAAe,SACfrB,eAAgB,UAEpBsB,WAAY,CACRnB,WAAY,OACZC,SAAU,SAEdmB,KAAM,CACFC,UAAW,mBACXC,OAAQ,OACRpB,MAAO,MACPE,UAAW,OACXE,WAAY,QAEhBiB,QAAS,CACLjB,WAAY,MACZC,YAAa,OAEjBmB,UAAW,CACPxB,MAAO,OAEXuB,SAAU,CACN9B,QAAS,OACTC,WAAY,SACZsB,cAAe,SACfrB,eAAgB,c,iDCjDlBN,EAAYC,aAAW,SAAAgB,GAAK,MAAK,CACnCC,KAAM,CACFd,QAAS,OACTe,SAAU,OACVb,eAAgB,eAChBc,gBAAiBH,EAAMI,QAAQC,WAAWC,OAG9Cf,YAAa,CACTL,WAAY,MACZM,WAAY,OACZC,SAAU,MACVN,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBK,MAAO,QAEXc,WAAY,CACRZ,UAAW,MACXE,WAAY,MACZC,YAAa,MACbU,QAAS,MACTtB,QAAS,OACTuB,cAAe,SACfrB,eAAgB,UAEpBsB,WAAY,CACRnB,WAAY,OACZC,SAAU,SAEdmB,KAAM,CACFC,UAAW,mBACXC,OAAQ,OACRpB,MAAO,MACPE,UAAW,OACXE,WAAY,QAEhBiB,QAAS,CACLjB,WAAY,MACZC,YAAa,OAEjBmB,UAAW,CACPxB,MAAO,OAEXuB,SAAU,CACN9B,QAAS,OACTC,WAAY,SACZsB,cAAe,SACfrB,eAAgB,UAEpB8B,WAAY,CACRzB,MAAO,OACPN,WAAY,SACZC,eAAgB,SAChBkB,aAAc,W,0EChDhBxB,EAAYC,aAAW,SAAAgB,GAAK,MAAK,CACnCC,KAAM,CACFd,QAAS,OACTe,SAAU,OACVb,eAAgB,eAChBc,gBAAiBH,EAAMI,QAAQC,WAAWC,OAG9Cf,YAAa,CACTL,WAAY,MACZM,WAAY,OACZC,SAAU,MACVN,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBK,MAAO,QAEX0B,mBAAoB,CAChB5B,WAAY,OACZC,SAAU,MACVN,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBK,MAAO,QAEX2B,aAAc,CACV5B,SAAU,QACVN,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBK,MAAO,OACPa,aAAc,SAElBC,WAAY,CACRV,WAAY,MACZC,YAAa,MACbU,QAAS,MACTtB,QAAS,OACTuB,cAAe,SACfrB,eAAgB,SAChBO,UAAW,OAEfe,WAAY,CACRnB,WAAY,OACZC,SAAU,SAEdmB,KAAM,CACFC,UAAW,mBACXC,OAAQ,OACRpB,MAAO,MACPE,UAAW,QAEf0B,YAAa,CACTnC,QAAS,OACTC,WAAY,SACZsB,cAAe,SACfrB,eAAgB,SAChBkB,aAAc,OAElBQ,QAAS,CACLjB,WAAY,MACZC,YAAa,OAEjBmB,UAAW,CACPxB,MAAO,OAEXuB,SAAU,CACN9B,QAAS,OACTC,WAAY,SACZsB,cAAe,SACfrB,eAAgB,UAGpBkC,SAAU,CACNpC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBK,MAAO,QAEX8B,WAAY,CACRrC,QAAS,OACTE,eAAgB,SAChBK,MAAO,QAEX+B,UAAW,CACP3B,WAAY,QACZC,YAAa,SAEjB2B,aAAc,CACVlC,WAAY,QAEhBmC,YAAa,CACTlC,SAAU,QACVN,QAAS,OACTC,WAAY,SACZsB,cAAe,SACfrB,eAAgB,UAEpBuC,cAAe,CACX9B,WAAY,QACZC,YAAa,QACb8B,UAAW,cAIbC,EAAqB9C,aAAW,SAACgB,GAAD,MAAY,CAC9C+B,MAAO,CACHC,MAAOhC,EAAMI,QAAQ6B,OAAOC,OAEhCC,QAAS,CACLhC,gBAAiBH,EAAMI,QAAQ6B,OAAOC,WAI9C,SAASE,EAAiBC,GACtB,IAAMC,EAAUR,IAEhB,OAAO,cAACS,EAAA,EAAD,aAASR,OAAK,EAACO,QAASA,GAAaD,ICzHhDG,EAAQ,KAAUC,SAElB,IAAMC,EAAiB1D,aAAW,iBAAO,CACrC2D,MAAO,CACHlD,SAAU,QACVD,WAAY,OACZoD,YAAa,WAId,SAASC,IACZ,IAAMP,EAAUI,IAChB,OAAO,cAACI,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACH,cAACC,EAAA,EAAD,CAAYC,UAAWX,EAAQK,MAA/B,2CAID,SAASO,IACZ,IAAMZ,EAAUI,IAChB,OAAO,cAACI,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACH,cAACC,EAAA,EAAD,CAAYC,UAAWX,EAAQK,MAA/B,2CAIRQ,SACI,mCACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,URflC,WACX,IAAMhB,EAAUvD,IACVwE,EAAUC,cAFe,EAITC,mBAAS,IAJA,mBAIxBC,EAJwB,KAInBC,EAJmB,OAKWF,oBAAS,GALpB,mBAKxBG,EALwB,KAKTC,EALS,OAMLJ,mBAAS,IANJ,mBAMxBK,EANwB,KAMjBC,EANiB,KAOzBC,EAAiB,+BAEvB,SAASC,IACL,OAAQD,EAAOE,KAAKR,IAAuB,IAAfA,EAAIS,OASpC,SAASC,IACLP,GAAiB,GACjBQ,MAAMC,mCAAmDZ,GACpDa,MAAK,SAAAC,GACsB,MAApBA,EAASC,OACTD,EAASE,OAAOH,MAAK,SAAAC,GACjBjB,EAAQoB,KAAK,uBAAwB,CACjCC,YAAaJ,EAASK,aACtBC,aAAcN,EAASO,cACvBC,gBAAiBR,EAASS,uBAIlClB,EAAS,yGACTF,GAAiB,OAEtBqB,OAAM,SAAApB,GACLqB,QAAQC,IAAI,SAAUtB,GACtBD,GAAiB,MAK7B,OACI,qCACI,cAAChB,EAAD,IACA,cAACG,EAAA,EAAD,CAAYC,UAAWX,EAAQ/C,YAA/B,qBACA,qBAAK0D,UAAWX,EAAQrD,UAAxB,SACI,cAAC+D,EAAA,EAAD,sEAEJ,qBAAKC,UAAWX,EAAQrD,UAAxB,SACI,cAACoG,EAAA,EAAD,CAAWvB,MAAOG,IAAeqB,WAAYrB,IAAgB,mCAAqC,GACvFsB,SAAU,SAAAC,GAAK,OAAI7B,EAAO6B,EAAMC,cAAcC,QAC9CC,WAAY,SAAAC,GAAC,OAvCpC,SAAoBA,GACF,UAAVA,EAAEC,KAAmB7B,EAAOE,KAAKR,IACjCU,IAqCgC0B,CAAWF,IAC5BG,GAAG,iBAAiBC,MAAM,0BAA0BC,QAAQ,WAAWP,MAAOhC,MAE7F,qBAAKT,UAAWX,EAAQhD,aAAxB,SACI,cAAC4G,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QAAS,kBAAM/B,KACnCgC,UAAWpC,EAAOE,KAAKR,IAAQE,EADvC,uBAGJ,cAACZ,EAAA,EAAD,CAAYqD,MAAO,CAACrE,MAAO,OAA3B,SAAoC8B,UQ3ChC,cAAC,IAAD,CAAOV,OAAK,EAACC,KAAK,eAAeC,UPhBlC,WACX,IAAMhB,EAAUvD,IACVwE,EAAUC,cAFe,EAITC,mBAAS,IAJA,mBAIxBC,EAJwB,KAInBC,EAJmB,OAKWF,oBAAS,GALpB,mBAKxBG,EALwB,KAKTC,EALS,KAMzBG,EAAiB,+BAEvB,SAASC,IACL,OAAQD,EAAOE,KAAKR,IAAuB,IAAfA,EAAIS,OASpC,SAASmC,IACLzC,GAAiB,GACjBQ,MAAMC,mCAAmDZ,GACpDa,MAAK,SAAAC,GACsB,MAApBA,EAASC,OACTlB,EAAQoB,KAAK,oBAAqB,CAACC,YAAalB,IAEhDc,EAASE,OAAOH,MAAK,SAAAC,GACjBjB,EAAQoB,KAAK,uBAAwB,CACjCC,YAAaJ,EAASK,aACtBC,aAAcN,EAASO,cACvBC,gBAAiBR,EAASS,yBAIvCC,OAAM,SAAApB,GACLqB,QAAQC,IAAI,SAAUtB,GACtBD,GAAiB,MAK7B,OACI,qCACI,cAAChB,EAAD,IACA,cAACG,EAAA,EAAD,CAAYC,UAAWX,EAAQ/C,YAA/B,qBACA,qBAAK0D,UAAWX,EAAQrD,UAAxB,SACI,cAAC+D,EAAA,EAAD,qFAEJ,qBAAKC,UAAWX,EAAQrD,UAAxB,SACI,cAACoG,EAAA,EAAD,CAAWvB,MAAOG,IAAeqB,WAAYrB,IAAgB,mCAAqC,GACvFsB,SAAU,SAAAC,GAAK,OAAI7B,EAAO6B,EAAMC,cAAcC,QAC9CC,WAAY,SAAAC,GAAC,OAtCpC,SAAoBA,GACF,UAAVA,EAAEC,KAAmB7B,EAAOE,KAAKR,IACjC4C,IAoCgCR,CAAWF,IAC5BG,GAAG,iBAAiBC,MAAM,0BAA0BC,QAAQ,WAAWP,MAAOhC,MAE7F,qBAAKT,UAAWX,EAAQhD,aAAxB,SACI,cAAC4G,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QAAS,kBAAMG,KACnCF,UAAWpC,EAAOE,KAAKR,IAAQE,EADvC,6BOrCA,cAAC,IAAD,CAAOR,OAAK,EAACC,KAAK,oBAAoBC,UN3BvC,WACX,IAAMhB,EAAUvD,IACVwH,EAAWC,cACXjD,EAAUC,cAHW,EAIHC,mBAAS,IAJN,mBAIpBgD,EAJoB,KAIdC,EAJc,OAKGjD,mBAAS,IALZ,mBAKpBkD,EALoB,KAKXC,EALW,OAMOnD,oBAAS,GANhB,mBAMpBoD,EANoB,KAMTC,EANS,OAOarD,oBAAS,GAPtB,mBAOpBsD,EAPoB,KAONC,EAPM,OAQqBvD,oBAAS,GAR9B,mBAQpBwD,EARoB,KAQFC,EARE,iDAU3B,sBAAAC,EAAA,yDACwB,IAAhBV,EAAKtC,QAAmC,IAAnBwC,EAAQxC,OADrC,gBAEQ2C,GAAa,GACbE,GAAgB,GAHxB,0BAI+B,IAAhBP,EAAKtC,QAAmC,IAAnBwC,EAAQxC,OAJ5C,iBAKQ2C,GAAa,GACbE,GAAgB,GANxB,2BAO+B,IAAhBP,EAAKtC,QAAmC,IAAnBwC,EAAQxC,OAP5C,iBAQQ2C,GAAa,GACbE,GAAgB,GATxB,+BAWQE,GAAoB,GAX5B,oBAaiC7C,MAAMC,kCAAiD,CACxE8C,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB3C,aAAc0B,EAASkB,MAAM7C,YAC7BG,cAAe0B,EACfxB,iBAAkB0B,MArBtC,QAwBoC,MAxBpC,OAwByBlC,QACTlB,EAAQoB,KAAK,uBAAwB,CACjCC,YAAa2B,EAASkB,MAAM7C,YAC5BE,aAAc2B,EACdzB,gBAAiB2B,IA5BrC,mDAgCYxB,QAAQrB,MAAM,SAAd,MACAoD,GAAoB,GAjChC,4DAV2B,sBAgD3B,OACI,qCACI,cAACrE,EAAD,IACA,qBAAKI,UAAWX,EAAQ3C,OAAxB,SACI,cAACqD,EAAA,EAAD,wFAEJ,qBAAKC,UAAWX,EAAQ3C,OAAxB,SACI,cAAC0F,EAAA,EAAD,CAAWW,MAAM,YAAYC,QAAQ,WAAWP,MAAOe,EAAM3C,MAAO+C,EACzDvB,WAAYuB,EAAY,oBAAsB,GAC9CtB,SAAU,SAAAC,GAAK,OAAIkB,EAAQlB,EAAMC,cAAcC,YAE9D,qBAAKzC,UAAWX,EAAQ3C,OAAxB,SACI,cAAC0F,EAAA,EAAD,CAAWW,MAAM,UAAUC,QAAQ,WAAWP,MAAOiB,EAAS7C,MAAOiD,EAC1DzB,WAAYyB,EAAe,uBAAyB,GACpDxB,SAAU,SAAAC,GAAK,OAAIoB,EAAWpB,EAAMC,cAAcC,YAEjE,qBAAKzC,UAAWX,EAAQhD,aAAxB,SACI,cAAC4G,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QAAS,kBAjEtB,0CAiE4BuB,IAActB,SAAUa,EAAnE,6BMrCA,cAAC,IAAD,CAAO7D,OAAK,EAACC,KAAK,uBAAuBC,ULhB1C,WACX,IAAMhB,EAAUvD,IACVwH,EAAWC,cACXjD,EAAUC,cAHc,EAIsBC,oBAAS,GAJ/B,mBAIvBkE,EAJuB,KAIHC,EAJG,OAKkCnE,oBAAS,GAL3C,mBAKvBoE,EALuB,KAKGC,EALH,KAOxBC,EAAiB,YAAcxB,EAASkB,MAAM3C,aAC9CkD,EAAiB,iBAAmBzB,EAASkB,MAAMzC,gBAR3B,4CAU9B,4BAAAmC,EAAA,6DACIS,GAAsB,GAD1B,kBAGuCvD,MAAMC,gCAH7C,UAIgC,OADpBE,EAHZ,QAIqBC,OAJrB,uBAKYmD,GAAsB,GALlC,2CAQyBpD,EAASE,OARlC,QAQQF,EARR,OASQjB,EAAQoB,KAAK,sBAAuB,CAChCC,YAAa2B,EAASkB,MAAM7C,YAC5BI,gBAAiBuB,EAASkB,MAAMzC,gBAChCF,aAAcyB,EAASkB,MAAM3C,aAC7BN,SAAUA,IAbtB,kDAgBQW,QAAQrB,MAAM,SAAd,MACA8D,GAAsB,GAjB9B,2DAV8B,kEA+B9B,4BAAAT,EAAA,6DACIW,GAA4B,GADhC,kBAGuCzD,MAAMC,mCAAmDiC,EAASkB,MAAM7C,YAAc,iBAH7H,UAIgC,OADpBJ,EAHZ,QAIqBC,OAJrB,uBAKYqD,GAA4B,GALxC,2CAQyBtD,EAASE,OARlC,QAQQF,EARR,OASQjB,EAAQoB,KAAK,4BAA6B,CACtCG,aAAcyB,EAASkB,MAAM3C,aAC7BF,YAAa2B,EAASkB,MAAM7C,YAC5BI,gBAAiBuB,EAASkB,MAAMzC,gBAChCR,SAAUA,IAbtB,kDAgBQW,QAAQrB,MAAM,SAAd,MACAgE,GAA4B,GAjBpC,2DA/B8B,sBAoD9B,OACI,qCACI,cAACjF,EAAD,IACA,cAACG,EAAA,EAAD,CAAYC,UAAWX,EAAQ/C,YAA/B,SAA6CwI,IAC7C,cAAC/E,EAAA,EAAD,CAAYC,UAAWX,EAAQ3C,OAA/B,SAAwCqI,IACxC,sBAAK/E,UAAWX,EAAQhD,aAAxB,UACI,cAAC4G,EAAA,EAAD,CAAQD,QAAQ,YAAYhD,UAAWX,EAAQzC,cAAesG,QAAS,kBA1DrD,0CA0D2D8B,IACrE7B,SAAUuB,EADlB,0BAEA,cAACzB,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QAAS,kBA5DnB,0CA4DyB+B,IAAwB9B,SAAUyB,EAA7E,sCK3CA,cAAC,IAAD,CAAOzE,OAAK,EAACC,KAAK,sBAAsBC,UJkBzC,WAMX,IALA,IAAMhB,EAAUvD,IACVwH,EAAWC,cACXjD,EAAUC,cAEV2E,EAA+B,GAC5BC,EAAI,EAAGA,EAAI7B,EAASkB,MAAMjD,SAASL,OAAQiE,IAChDD,EAAkBxD,MAAK,GAPM,MASOlB,mBAAS0E,GAThB,mBAS1BE,EAT0B,KASZC,EATY,iDAWjC,WAAyBC,GAAzB,qBAAApB,EAAA,6DACQqB,EADR,YACwBH,IACVE,IAAS,EACnBD,EAAgBE,GAHpB,kBAKuCnE,MAAMC,gCAAgDiC,EAASkB,MAAMjD,SAAS+D,GAAOE,SAAW,WALvI,UAMgC,OADpBjE,EALZ,QAMqBC,OANrB,wBAOgB+D,EAPhB,YAOgCH,IACVE,IAAS,EACnBD,EAAgBE,GAT5B,4CAYyBhE,EAASE,OAZlC,QAYQF,EAZR,OAaQjB,EAAQoB,KAAK,sBAAuB,CAChCC,YAAa2B,EAASkB,MAAM7C,YAC5BE,aAAcyB,EAASkB,MAAM3C,aAC7BE,gBAAiBuB,EAASkB,MAAMzC,gBAChCR,SAAUA,EACVkE,UAAWnC,EAASkB,MAAMjD,SAAS+D,GAAO9B,OAlBtD,kDAqBQtB,QAAQrB,MAAM,SAAd,OACI0E,EAtBZ,YAsB4BH,IACVE,IAAS,EACnBD,EAAgBE,GAxBxB,2DAXiC,sBAuCjC,OACI,sBAAKvF,UAAWX,EAAQrC,KAAxB,UACI,cAAC4C,EAAD,IACA,cAACG,EAAA,EAAD,CAAYC,UAAWX,EAAQ/C,YAA/B,kDACA,cAACoJ,EAAA,EAAD,CAAUC,KAAM,EAAGC,WAAY,IAAK5F,UAAWX,EAAQ1B,KAAvD,SAEQ2F,EAASkB,MAAMjD,SAASsE,KAAI,SAACC,EAO1BR,GACC,OACI,cAACS,EAAA,EAAD,CAAmCJ,KAAM,EAAzC,SACI,cAACK,EAAA,EAAD,CAAOC,UAAW,EAAwBjG,UAAWX,EAAQ9B,WAA7D,SACI,eAAC2I,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGjK,WAAW,SAAvC,UACI,eAAC+J,EAAA,EAAD,CAAMlG,UAAWX,EAAQtB,UAAzB,UACI,cAACgC,EAAA,EAAD,CAAYC,UAAWX,EAAQ3B,WAA/B,SAA4CoI,EAAMtC,OAClD,eAACzD,EAAA,EAAD,oCAAmC+F,EAAMO,uBACzC,eAACtG,EAAA,EAAD,qBAAoB+F,EAAMQ,iBAC1B,eAACvG,EAAA,EAAD,qBAAoB+F,EAAMS,gBAC1B,eAACxG,EAAA,EAAD,gCAA+B+F,EAAMU,uBAEzC,cAACC,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,EAAC3G,UAAWX,EAAQvB,UAC5D,cAACoI,EAAA,EAAD,CAAMU,MAAI,EAACC,GAAI,EAAf,SACI,cAACX,EAAA,EAAD,CAAMlG,UAAWX,EAAQrB,SAAzB,SACI,cAACiF,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QAAS,kBAnEhD,2CAmEsD4D,CAAUxB,IAC7CnC,SAAUiC,EAAaE,GAD/B,4BAZUQ,EAAMN,WADjBM,EAAMN,qBIvErC,cAAC,IAAD,CAAOrF,OAAK,EAACC,KAAK,sBAAsBC,UHmBzC,WAYX,IAXA,IAAMhB,EAAUvD,IACVwH,EAAWC,cAOXjD,EAAUC,cAEV2E,EAA+B,GAC5BC,EAAI,EAAGA,EAAI7B,EAASkB,MAAMjD,SAASL,OAAQiE,IAChDD,EAAkBxD,MAAK,GAbC,MAeYlB,mBAAS0E,GAfrB,mBAerBE,EAfqB,KAePC,EAfO,iDAiB5B,WAAyBC,GAAzB,qBAAApB,EAAA,6DACQqB,EADR,YACwBH,IACVE,IAAS,EACnBD,EAAgBE,GAHpB,kBAKuCnE,MAAMC,gCAAgDiC,EAASkB,MAAMjD,SAAS+D,GAAOyB,SAAW,UALvI,UAMgC,OADpBxF,EALZ,QAMqBC,OANrB,wBAOgB+D,EAPhB,YAOgCH,IACVE,IAAS,EACnBD,EAAgBE,GAT5B,4CAYyBhE,EAASE,OAZlC,QAYQF,EAZR,OAaQjB,EAAQoB,KAAK,qBAAsB,CAC/BC,YAAa2B,EAASkB,MAAM7C,YAC5BE,aAAcyB,EAASkB,MAAM3C,aAC7BE,gBAAiBuB,EAASkB,MAAMzC,gBAChCR,SAAUA,EACVkE,UAAWnC,EAASkB,MAAMiB,UAC1B/B,QAASJ,EAASkB,MAAMjD,SAAS+D,GAAO0B,iBACxCC,QAAS3D,EAASkB,MAAMjD,SAAS+D,GAAOyB,WApBpD,kDAuBQ7E,QAAQrB,MAAM,SAAd,OACI0E,EAxBZ,YAwB4BH,IACVE,IAAS,EACnBD,EAAgBE,GA1BxB,2DAjB4B,sBA+C5B,OACI,sBAAKvF,UAAWX,EAAQrC,KAAxB,UACI,cAAC4C,EAAD,IACA,eAACG,EAAA,EAAD,CAAYC,UAAWX,EAAQ/C,YAA/B,UAA6CgH,EAASkB,MAAMiB,UAA5D,aACA,cAACC,EAAA,EAAD,CAAUC,KAAM,EAAGC,WAAY,IAAK5F,UAAWX,EAAQ1B,KAAvD,SAEQ2F,EAASkB,MAAMjD,SAASsE,KAAI,SAACqB,EAO1B5B,GACC,OACI,cAACS,EAAA,EAAD,CAAmCJ,KAAM,EAAzC,SACI,cAACK,EAAA,EAAD,CAAOC,UAAW,EAAwBjG,UAAWX,EAAQ9B,WAA7D,SACI,eAAC2I,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGjK,WAAW,SAAvC,UACI,eAAC+J,EAAA,EAAD,CAAMlG,UAAWX,EAAQpB,UAAzB,UACI,cAAC8B,EAAA,EAAD,CACIC,UAAWX,EAAQ3B,WADvB,SACoCwJ,EAAMF,mBAC1C,eAACjH,EAAA,EAAD,qBAAoBmH,EAAMZ,iBAC1B,eAACvG,EAAA,EAAD,qBAAoBmH,EAAMX,gBAC1B,eAACxG,EAAA,EAAD,+BAA8BmH,EAAMC,sBAExC,cAACV,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,EAAC3G,UAAWX,EAAQvB,UAC5D,cAACoI,EAAA,EAAD,CAAMU,MAAI,EAACC,GAAI,EAAf,SACI,eAACX,EAAA,EAAD,CAAMlG,UAAWX,EAAQrB,SAAzB,UACI,cAACoJ,EAAA,EAAD,CAAQ3E,MAAOyE,EAAMG,cAAeC,UAAQ,IAC5C,uBAAK,uBACL,cAACrE,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QAAS,kBA7ErD,2CA6E2D4D,CAAUxB,IAC7CnC,SAAUiC,EAAaE,GAD/B,mCAdU4B,EAAMH,WADjBG,EAAMH,qBGhFrC,cAAC,IAAD,CAAO5G,OAAK,EAACC,KAAK,4BAA4BC,UFsC/C,WACX,IAAMhB,EAAUvD,IACVwH,EAAWC,cAMjBD,EAASkB,MAAMjD,SAASgG,MAAK,SAACC,EAAiBC,GAAlB,OAAuCD,EAAGE,aAAeD,EAAGC,aAAgB,GAAK,KAM9G,IALA,IAAMC,EAAoB,GACpBC,EAAqB,GACrBC,EAAiB,GACjBC,EAAgB,GAEb3C,EAAI,EAAGA,EAAI7B,EAASkB,MAAMjD,SAASL,OAAQiE,IAChD2C,EAAIpG,KAAK4B,EAASkB,MAAMjD,SAAS4D,GAAG4C,YAExCzE,EAASkB,MAAMjD,SAASyG,SAAQ,SAACC,EAAkB3C,GAC5B,YAAf2C,EAAIzG,OACJmG,EAAQjG,KAAK4B,EAASkB,MAAMjD,SAAS+D,GAAOyC,YACtB,WAAfE,EAAIzG,OACXoG,EAASlG,KAAK4B,EAASkB,MAAMjD,SAAS+D,GAAOyC,YAE7CF,EAAKnG,KAAK4B,EAASkB,MAAMjD,SAAS+D,GAAOyC,eAKjD,IADA,IAAM7C,EAA+B,GAC5BC,EAAI,EAAGA,EAAI7B,EAASkB,MAAMjD,SAASL,OAAQiE,IAChDD,EAAkBxD,MAAK,GA7BQ,MA+BKlB,mBAAS0E,GA/Bd,mBA+B5BE,EA/B4B,KA+BdC,EA/Bc,OAgCC7E,mBAAS,GAhCV,mBAgC5B0H,EAhC4B,KAgChBC,EAhCgB,OAiCD3H,oBAAS,GAjCR,mBAiC5B4H,EAjC4B,KAiCjBC,EAjCiB,OAkCK7H,mBAAS,IAlCd,mBAkC5B8H,EAlC4B,KAkCdC,EAlCc,OAmCoB/H,mBAAS,WAnC7B,mBAmC5BgI,EAnC4B,KAmCfC,EAnCe,OAoCkBjI,mBAASsH,GApC3B,mBAoC5BY,EApC4B,KAoChBC,EApCgB,KAsCnC,SAASC,GAAUC,EAAiBrH,GAChC+G,EAAgBM,GAChBJ,EAAejH,GACf6G,GAAa,GAGjB,SAASS,KACLT,GAAa,GA7CkB,SAgDpBU,GAhDoB,mFAgDnC,WAAgCC,EAAgBC,GAAhD,qBAAA/E,EAAA,6DACQqB,EADR,YACwBH,GACd8D,EAAcC,GAAuBF,GAC3C1D,EAAU2D,EAAY5D,QAAS,EAC/BD,EAAgBE,GAJpB,kBAO6BnE,MAAMC,mCAAmDiC,EAASkB,MAAM7C,YAAc,iBAAmBuH,EAAYA,YAAYnB,WAAY,CAC9J5D,OAAQ,QACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB/C,OAAQwH,MAbxB,OAgBgC,MAhBhC,OAgBqBxH,OACM,aAAXwH,GACArB,EAAQyB,OAAOzB,EAAQ0B,QAAQJ,GAAY,GAC3CC,EAAYA,YAAY1H,OAAS,WACjCqG,EAAKnG,KAAKuH,GACVK,GAAsBpB,GACtBU,GAAU,oCAAqC,aAG/ChB,EAASwB,OAAOxB,EAASyB,QAAQJ,GAAY,GAC7CC,EAAYA,YAAY1H,OAAS,YACjCqG,EAAKnG,KAAKuH,GACVK,GAAsBpB,GACtBU,GAAU,sCAAuC,cAGjDrD,EADD,YACiBH,IACV8D,EAAY5D,QAAS,EAC/BD,EAAgBE,GAChBqD,GAAU,sCAAuC,UAnC7D,kDAsCQ1G,QAAQrB,MAAM,SAAd,OACI0E,EAvCZ,YAuC4BH,IACV8D,EAAY5D,QAAS,EAC/BD,EAAgBE,GAChBqD,GAAU,sCAAuC,SA1CzD,2DAhDmC,sBA8FnC,SAASW,GAAsBnK,GAC3B,IAAM6I,EAAMkB,GAAuB/J,EAAM6J,WACzC,MAA+B,YAA3BhB,EAAIiB,YAAY1H,OACT,cAACyB,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QAAS,kBAAM6F,GAAiB,WAAY3J,EAAM6J,YACtE9F,SAAUiC,EAAa6C,EAAI3C,OADnC,uBAGoB,WAA3B2C,EAAIiB,YAAY1H,OACT,cAACyB,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QAAS,kBAAM6F,GAAiB,YAAa3J,EAAM6J,YACvE9F,SAAUiC,EAAa6C,EAAI3C,OADnC,oBAGJ,6BASX,SAASgE,GAAsB7G,GAEvBkG,EAAc,GAAD,OADH,IAAVlG,EACkBqF,EACD,IAAVrF,EACWkF,EACD,IAAVlF,EACWmF,EAEAC,IAI1B,SAASsB,GAAuBF,GAC5B,IAAK,IAAI9D,EAAI,EAAGA,EAAI7B,EAASkB,MAAMjD,SAASL,OAAQiE,IAAK,CACrD,IAAM+D,EAAc5F,EAASkB,MAAMjD,SAAS4D,GAC5C,GAAI+D,EAAYnB,aAAekB,EAC3B,MAAO,CAACC,YAAaA,EAAa5D,MAAOH,GAGjD,MAAO,CACH+D,YAAa,CACTnB,YAAa,EACbf,iBAAkB,GAClBwC,qBAAsB,GACtB9B,aAAc,GACd+B,cAAe,GACfjI,OAAQ,GACR9B,MAAO,GACPgK,eAAe,EACfC,UAAW,GACXC,KAAM,GACNC,MAAO,IAEXvE,OAAQ,GAKhB,SAASwE,GAAqB1K,GAC1B,OAAO,cAACsG,EAAA,EAAD,CAAUC,KAAM,EAAGC,WAAY,IAAK5F,UAAWX,EAAQ1B,KAAvD,SAECyB,EAAM2K,aAAalE,KAAI,SAACoD,GACpB,IACMC,EADMC,GAAuBF,GACXC,YAClBc,EAAgB,IAAIC,KAAKf,EAAYxB,aAAawC,QAAQ,IAAK,MAC/DC,EAAiB,IAAIF,KAAKf,EAAYO,cAAcS,QAAQ,IAAK,MAEjEE,GADeC,KAAKC,MAAMD,KAAKE,KAAKP,GAAWG,GAAY,GAAK,GAAK,GAAK,KAC7CK,WAAWtB,EAAYW,QAAQY,QAAQ,GAM1E,OAJqC,IAAjCvB,EAAYS,UAAUzI,QACtBgI,EAAYS,UAAUjI,KAAK,QAI3B,cAACqE,EAAA,EAAD,CAA2CJ,KAAM,EAAjD,SACI,cAACK,EAAA,EAAD,CAAOC,UAAW,EAAgCjG,UAAWX,EAAQ9B,WAArE,SACI,eAAC2I,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGjK,WAAW,SAAvC,UACI,eAAC+J,EAAA,EAAD,CAAMlG,UAAWX,EAAQpB,UAAzB,UACI,eAAC8B,EAAA,EAAD,CACIC,UAAWX,EAAQ3B,WADvB,mBAC0CwL,EAAYxJ,MADtD,MACgEwJ,EAAYxB,aAD5E,OAC8FwB,EAAYO,iBAE1G,cAAC1J,EAAA,EAAD,UAAamJ,EAAYlC,mBACzB,eAACjH,EAAA,EAAD,8BAA6BmJ,EAAY1H,UACzC,eAACzB,EAAA,EAAD,yBAAwBmJ,EAAYS,UAAUe,KAAK,SACnD,eAAC3K,EAAA,EAAD,oBAAmBmJ,EAAYU,QAC/B,eAAC7J,EAAA,EAAD,0BACiBmJ,EAAYQ,cAAgB,MAAQ,WAGzD,cAACjD,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,EAAC3G,UAAWX,EAAQvB,UAC5D,cAACoI,EAAA,EAAD,CAAMU,MAAI,EAACC,GAAI,EAAf,SACI,eAACX,EAAA,EAAD,CAAMlG,UAAWX,EAAQrB,SAAzB,UACI,eAAC+B,EAAA,EAAD,wBAAuBmJ,EAAYM,wBACnC,cAACzJ,EAAA,EAAD,CAAYC,UAAWX,EAAQ3B,WAA/B,0BACA,eAACqC,EAAA,EAAD,CAAYC,UAAWX,EAAQ3B,WAA/B,cAA6C0M,KAC7C,uBACA,cAACb,GAAD,CAAuBN,UAAWA,aArBxBC,EAAYnB,aADvBmB,EAAYnB,iBAkCnD,OACI,sBAAK/H,UAAWX,EAAQrC,KAAxB,UACI,cAAC4C,EAAD,IACA,eAACG,EAAA,EAAD,CAAYC,UAAWX,EAAQ/C,YAA/B,+BAA+DgH,EAASkB,MAAM3C,gBAC9E,eAAC8I,EAAA,EAAD,CAAY3K,UAAWX,EAAQnB,WAAYuE,MAAOyF,EAAY5F,SAAU,SAAAK,GAAC,OAlGjF,SAAkCJ,GAC9B,IAAME,EAAQmI,SAASrI,EAAMsI,OAAOpI,OACpC0F,EAAc1F,GACd6G,GAAsB7G,GA+F2DqI,CAAyBnI,IAC1FoI,KAAG,EADf,UAEI,cAAChL,EAAA,EAAD,qCACA,cAACiL,EAAA,EAAD,CAAkBvI,MAAO,EAAGwI,QAAS,cAACC,EAAA,EAAD,IAAUnI,MAAM,qBACrD,cAACiI,EAAA,EAAD,CAAkBvI,MAAO,EAAGwI,QAAS,cAACC,EAAA,EAAD,IAAUnI,MAAM,YACrD,cAACiI,EAAA,EAAD,CAAkBvI,MAAO,EAAGwI,QAAS,cAACC,EAAA,EAAD,IAAUnI,MAAM,aACrD,cAACiI,EAAA,EAAD,CAAkBvI,MAAO,EAAGwI,QAAS,cAACC,EAAA,EAAD,IAAUnI,MAAM,0BAEzD,cAAC+G,GAAD,CAAsBC,aAAcrB,IACpC,cAACyC,EAAA,EAAD,CAAUC,KAAMhD,EAAWiD,iBAAkB,IAAMC,QAASxC,GAA5D,SACI,cAACyC,EAAA,EAAD,CAAOD,QAASxC,GAAY0C,SAAUhD,EAAtC,SACKF,YE7PL,cAAC,IAAD,CAAOnI,OAAK,EAACC,KAAK,qBAAqBC,UD4GxC,WAaX,IAZA,IAAMhB,EAAUvD,IACVwH,EAAWC,cAUX2B,EAA+B,GAC5BC,EAAI,EAAGA,EAAI7B,EAASkB,MAAMjD,SAASL,OAAQiE,IAChDD,EAAkBxD,MAAK,GAdC,MAiBuBlB,mBAAS,IAAIyJ,MAjBpC,mBAiBrBwB,EAjBqB,KAiBRC,EAjBQ,KAkBtBC,EAAkC,IAAI1B,KAC5C0B,EAASC,QAAQD,EAASE,UAAY,GAnBV,MAoByBrL,mBAASmL,GApBlC,mBAoBrBG,EApBqB,KAoBPC,EApBO,OAqBqCvL,mBAAS,IArB9C,mBAqBrBwL,EArBqB,KAqBFC,EArBE,OAsBuCzL,mBAAS,IAtBhD,mBAsBrB0L,EAtBqB,KAsBDC,EAtBC,OAuBqB3L,mBAAS,GAvB9B,mBAuBrB4L,EAvBqB,KAuBVC,EAvBU,OAwB4B7L,oBAAS,GAxBrC,mBAwBrB8L,EAxBqB,KAwBPC,EAxBO,OAyB0C/L,oBAAS,GAzBnD,mBAyBrBgM,GAzBqB,KAyBAC,GAzBA,QA0BmBjM,mBAAS8C,EAASkB,MAAMjD,UA1B3C,qBA0BrBmL,GA1BqB,MA0BXC,GA1BW,SA2BmBnM,mBAAS8C,EAASkB,MAAMjD,SAASL,QA3BpD,qBA2BrB0L,GA3BqB,MA2BXC,GA3BW,SA4BQrM,oBAAS,GA5BjB,qBA4BrBsM,GA5BqB,MA4BTC,GA5BS,SA6BQvM,mBAAS8C,EAASkB,MAAMjD,SAAS,IA7BzC,qBA6BrByL,GA7BqB,MA6BTC,GA7BS,MA+BtBpF,GAA6B,CAAC8D,EAAUA,GAAW,GA/B7B,8CA+C5B,oCAAAzH,EAAA,yDAEQ2D,GAAK,KAAO4D,GAAe5D,GAAK,KAAOiE,GAAgBjE,GAAK,KAAOuE,EAF3E,wBAGQK,IAAuB,GAH/B,SAKgBS,EAAc7L,gCAAgDiC,EAASkB,MAAMyC,QAAU,sBAC3FiG,GAAO,aAAeC,GAAa1B,GAAe,cAAgB0B,GAAarB,GAAgB,WAAaM,EANxH,SAQ2ChL,MAAM8L,GARjD,UASoC,OADpB3L,EARhB,QASyBC,OATzB,oEAY0DD,EAASE,OAZnE,QAYkB2L,EAZlB,OAakBC,EAAsB/I,KAAKgJ,MAAMhJ,KAAKC,UAAUmI,KAClDa,EAAkBF,EAAYnM,OAClCmM,EAAYrF,SAAQ,SAAAwF,GAChB,IAAMC,EAAWC,GAAQF,EAAKG,QAASP,GACvCI,EAAKI,SAAU,EACfJ,EAAKtO,QAAU,GACfsO,EAAKK,gBAAkBL,EAAKM,mBAAqBL,EAASM,WAEhC,IAAtBN,EAASE,UACTH,EAAKI,SAAU,EACfJ,EAAKtO,QAAU,6BACfqO,KAEAC,EAAKK,iBAAmB,IACxBL,EAAKI,SAAU,EACfJ,EAAKtO,QAAU,qCACfqO,QAGRF,EAAY9F,MAAK,SAACC,EAAUC,GACxB,OAAID,EAAGoG,UAAYnG,EAAGmG,SACV,GAEPpG,EAAGoG,SAAWnG,EAAGmG,QACX,EAEJpG,EAAGmG,QAAUlG,EAAGkG,SAAW,EAAI,KAE1ChB,GAAYU,GACZR,GAAYU,GACZtB,EAAqBkB,GAAa1B,IAClCU,EAAsBgB,GAAarB,IA5C/C,kDA8CY5J,QAAQrB,MAAM,SAAd,MA9CZ,QAgDQ4L,IAAuB,GAhD/B,QAkDSH,GACDC,GAAgB,GAnDxB,2DA/C4B,sBAsG5B,SAASmB,GAAQM,EAAgBtB,GAC7B,IAAK,IAAIvH,EAAI,EAAGA,EAAIuH,EAASxL,OAAQiE,IACjC,GAAIuH,EAASvH,GAAGwI,UAAYK,EACxB,OAAOtB,EAASvH,GAGxB,MAAO,CACHwI,SAAU,EACVI,WAAY,GAqCpB,SAASZ,GAAac,GAClB,IAAIC,EAAeD,EAAKE,cAAcC,WAClCC,EAAgB,IAAMJ,EAAKK,WAAa,GACxCC,EAAc,GAAKN,EAAKpC,UAQ5B,OANIwC,EAAMnN,OAAS,IACfmN,EAAQ,IAAMA,GAEdE,EAAIrN,OAAS,IACbqN,EAAM,IAAMA,GAETL,EAAO,IAAMG,EAAQ,IAAME,EAOtC,SAASC,KACL,OAAO,eAACC,EAAA,EAAD,CAAQnD,QAAS,kBAAMyB,IAAc,IAAQ2B,kBAAgB,sBAAsBtD,KAAM0B,GAAzF,UACH,cAAC6B,EAAA,EAAD,CAAa7L,GAAG,eAAe9C,UAAWX,EAAQX,YAAlD,SACI,cAACqB,EAAA,EAAD,CAAYC,UAAWX,EAAQX,YAA/B,oCAEJ,qBAAKsB,UAAWX,EAAQV,cAAxB,SACI,cAACoB,EAAA,EAAD,CAAY6O,MAAM,SAAlB,SAA4BtL,EAASkB,MAAMd,YAE/C,uBACA,cAAC+C,EAAA,EAAD,IACA,cAAC1G,EAAA,EAAD,CAAY6O,MAAM,SAAS5O,UAAWX,EAAQZ,aAA9C,2BACA,cAACgI,EAAA,EAAD,IACA,sBAAKzG,UAAWX,EAAQb,UAAxB,UACI,cAACuB,EAAA,EAAD,UAAauD,EAASkB,MAAM3C,eAC5B,cAAC9B,EAAA,EAAD,UAAauD,EAASkB,MAAMzC,qBAEhC,uBACA,cAAC0E,EAAA,EAAD,IACA,cAAC1G,EAAA,EAAD,CAAY6O,MAAM,SAAS5O,UAAWX,EAAQZ,aAA9C,0BACA,cAACgI,EAAA,EAAD,IACA,sBAAKzG,UAAWX,EAAQb,UAAxB,UACI,eAACuB,EAAA,EAAD,yBAAwBiN,GAAWtN,SACnC,eAACK,EAAA,EAAD,WAAaiM,EAAb,OAAoCE,QAExC,uBACA,eAAC2C,EAAA,EAAD,WACI,cAAC5L,EAAA,EAAD,CAAQC,QAAS,kBAAe8J,GAAWW,aAnJnDZ,IAAc,IAmJ+C/J,QAAQ,YAAYjE,MAAM,UAA/E,uBAGA,cAACkE,EAAA,EAAD,CAAQC,QAAS,kBAAM6J,IAAc,IAAQ/J,QAAQ,YAAYjE,MAAM,YAAvE,0BAOZ,OAxKAuE,EAASkB,MAAMjD,SAASyG,SAAQ,SAACwF,GAC7BA,EAAKI,SAAU,EACfJ,EAAKtO,QAAU,MAuKf,sBAAKc,UAAWX,EAAQrC,KAAxB,UACI,cAAC4C,EAAD,IACA,cAACG,EAAA,EAAD,CAAYC,UAAWX,EAAQ/C,YAA/B,SAA6CgH,EAASkB,MAAMiB,YAC5D,cAAC1F,EAAA,EAAD,CAAYC,UAAWX,EAAQlB,mBAA/B,SAAoDmF,EAASkB,MAAMd,UACnE,eAACgC,EAAA,EAAD,CAAU1F,UAAWX,EAAQd,WAA7B,UACI,cAAC2H,EAAA,EAAD,CAAMC,WAAS,EAACS,MAAI,EAACzK,WAAW,SAAS0K,GAAI,EAAG7G,UAAWX,EAAQf,SAAnE,SACI,cAACyB,EAAA,EAAD,qDAEJ,cAACmG,EAAA,EAAD,CAAMC,WAAS,EAACS,MAAI,EAACzK,WAAW,SAAS0K,GAAI,EAAG7G,UAAWX,EAAQf,SAAnE,SACI,cAAC,IAAD,CAAyBwQ,MAAOC,IAAhC,SACI,cAAC,IAAD,CACIC,OAAO,SACPlM,GAAG,kBACHC,MAAM,gBACNkM,OAAO,aACPC,QAAS,IAAIjF,KACbxH,MAAOgJ,EACPnJ,SAAU,SAAC2L,GAAD,OArFlC,SAAoBA,GAChB,GAAa,OAATA,GAAkC,OAAjBnC,EAAuB,CACxC,GAAImC,EAAKkB,WAAarD,EAAaqD,UAAW,CAC1C,IAAMhF,EAAkC,IAAIF,KAC5CE,EAASiF,SAASnB,EAAKK,YACvBnE,EAASyB,QAAQqC,EAAKpC,UAAY,GAClCE,EAAgB5B,GAEpBoC,GAAgB,GAChBb,EAAeuC,IA4E4CoB,CAAWpB,IACtDqB,oBAAqB,CACjB,aAAc,qBAK9B,cAACpJ,EAAA,EAAD,CAAMC,WAAS,EAACS,MAAI,EAACzK,WAAW,SAAS0K,GAAI,EAAG7G,UAAWX,EAAQf,SAAnE,SACI,cAAC,IAAD,CAAyBwQ,MAAOC,IAAhC,SACI,cAAC,IAAD,CACIC,OAAO,SACPlM,GAAG,mBACHC,MAAM,iBACNkM,OAAO,aACPC,QAASvD,EACTlJ,MAAOqJ,EACPxJ,SAAU,SAAC2L,GAAD,OAlHlC,SAAqBA,GACjB,GAAa,OAATA,GAAiC,OAAhBxC,EAAsB,CACvC,GAAIwC,EAAKkB,WAAa1D,EAAY0D,UAAW,CACzC,IAAMnF,EAAiC,IAAIC,KAC3CD,EAAQoF,SAASnB,EAAKK,YACtBtE,EAAQ4B,QAAQqC,EAAKpC,UAAY,GACjCH,EAAe1B,GAEnBuC,GAAgB,GAChBR,EAAgBkC,IAyG2CsB,CAAYtB,IACvDqB,oBAAqB,CACjB,aAAc,qBAK9B,cAACpJ,EAAA,EAAD,CAAMC,WAAS,EAACS,MAAI,EAACzK,WAAW,SAAS0K,GAAI,EAAG7G,UAAWX,EAAQf,SAAnE,SACI,cAAC8D,EAAA,EAAD,CACIU,GAAG,kBACHC,MAAM,cACNyM,KAAK,SACLC,gBAAiB,CACbC,QAAQ,GAEZ1M,QAAQ,WACRP,MAAO2J,EACP9J,SAAU,SAAAK,GA1I9B,IAA2BgN,KA0I0B/E,SAASjI,EAAEkI,OAAOpI,QAzIzD,IACN4J,EAAasD,GACbpD,GAAgB,SA0IZ,cAACrG,EAAA,EAAD,CAAMC,WAAS,EAACS,MAAI,EAACzK,WAAW,SAAS0K,GAAI,EAAG7G,UAAWX,EAAQf,SAAnE,SACI,cAAC2E,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QAhQhB,4CAgQ4CC,SAAUqJ,GAAlE,qCAIR,eAACzM,EAAA,EAAD,CAAYC,UAAWX,EAAQjB,aAA/B,UAA8CwO,GAA9C,kBACA,qBAAK5M,UAAWX,EAAQhB,YAAxB,SACI,eAACqH,EAAA,EAAD,CAAUC,KAAM,EAAGC,WAAY,IAAK5F,UAAWX,EAAQ1B,KAAvD,UACI,qBAAKyF,MAAO,CAACvF,OAAQ,SAEjB6O,GAAS7G,KAAI,SAAC2H,GACV,OACI,cAACzH,EAAA,EAAD,CAAiCJ,KAAM,EAAvC,SACI,cAACxG,EAAD,CAAkBO,MAAO8N,EAAKtO,QAAS0Q,aAAW,MAAMC,UAAU,MAAlE,SACI,cAAC7J,EAAA,EAAD,CAAOC,UAAW,EAAsBjG,UAAWX,EAAQ9B,WACpD6F,MAAOoK,EAAKI,QAAU,GAAK,CACvB1Q,gBAAiB,QAF5B,SAII,qBAAKkG,MAAOoK,EAAKI,QAAU,CAACkC,QAAS,KAAO,CACxCA,QAAS,QADb,SAGI,eAAC5J,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGjK,WAAW,SAAvC,UACI,eAAC+J,EAAA,EAAD,CAAMlG,UAAWX,EAAQpB,UAAzB,UACI,cAAC8B,EAAA,EAAD,CACIC,UAAWX,EAAQ3B,WADvB,SACoC8P,EAAK9N,QACzC,eAACK,EAAA,EAAD,yBAAkD,IAA1ByN,EAAK7D,UAAUzI,OAAe,OAASsM,EAAK7D,UAAUe,KAAK,SACnF,eAAC3K,EAAA,EAAD,4BACeyN,EAAKuC,cADpB,aAEA,eAAChQ,EAAA,EAAD,oBAAmByN,EAAK5D,QACxB,eAAC7J,EAAA,EAAD,0BAAyByN,EAAK9D,cAAgB,MAAQ,WAE1D,cAACjD,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,EAC/B3G,UAAWX,EAAQvB,UAC5B,cAACoI,EAAA,EAAD,CAAMC,WAAS,EAACS,MAAI,EAACC,GAAI,EAAG1K,WAAW,SAAvC,SACI,eAAC+J,EAAA,EAAD,CAAMC,WAAS,EAACnG,UAAWX,EAAQrB,SAAnC,UACI,eAAC+B,EAAA,EAAD,CACIC,UAAWX,EAAQ3B,WADvB,cACqC8P,EAAK3D,MAD1C,YAEA,cAAC9J,EAAA,EAAD,WAnIpBiQ,EAmI4DxC,EAAKK,gBAnI3CoC,EAmI4DzC,EAAKM,mBAlIhHkC,EAAe,IAAMC,EAAQ,sBAmIgB,uBACA,cAAChN,EAAA,EAAD,CAAQD,QAAQ,YACRE,QAAS,kBAjQzE,SAAyBsK,GACrBP,GAAcO,GACdT,IAAc,GA+P6DmD,CAAgB1C,IAC/BrK,UAAWqK,EAAKI,UAAYtB,EAFpC,kCAzBMkB,EAAKG,YAFpBH,EAAKG,SA1GpD,IAAoCqC,EAAsBC,UAqJlD,cAACzB,GAAD,iBC9ZR2B,SAASC,eAAe,W","file":"static/js/main.7032106f.chunk.js","sourcesContent":["import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory} from 'react-router-dom';\n\n\nconst useStyles = makeStyles(() => ({\n    sinCentre: {\n        paddingTop: '3em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    }\n}));\n\nexport default function Employee() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [SIN, setSIN] = useState(\"\");\n    const [disableSignIn, setDisableSignIn] = useState(false);\n    const [error, setError] = useState(\"\");\n    const sin_re: RegExp = /^[0-9]{3}-[0-9]{3}-[0-9]{3}$/;\n\n    function validateSIN(): boolean {\n        return !sin_re.test(SIN) && SIN.length !== 0;\n    }\n\n    function keyPressed(e: React.KeyboardEvent<HTMLDivElement>) {\n        if (e.key === 'Enter' && sin_re.test(SIN)) {\n            checkEmployee();\n        }\n    }\n\n    function checkEmployee() {\n        setDisableSignIn(true);\n        fetch(process.env.REACT_APP_SERVER_URL + \"/employees/\" + SIN)\n            .then(response => {\n                if (response.status === 200) {\n                    response.json().then(response => {\n                        history.push('/ui/customer/welcome', {\n                            customerSIN: response.customer_sin,\n                            customerName: response.customer_name,\n                            customerAddress: response.customer_address\n                        })\n                    })\n                } else {\n                    setError(\"Unable to sign in. Please contact the hotel manager or database admin if you think this is a problem.\")\n                    setDisableSignIn(false);\n                }\n            }).catch(error => {\n                console.log('Error:', error);\n                setDisableSignIn(false);\n            }\n        )\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>Sign In</Typography>\n            <div className={classes.sinCentre}>\n                <Typography>Please sign in to access the hotel management system:</Typography>\n            </div>\n            <div className={classes.sinCentre}>\n                <TextField error={validateSIN()} helperText={validateSIN() ? \"SIN must have format XXX-XXX-XXX\" : \"\"}\n                           onChange={event => setSIN(event.currentTarget.value)}\n                           onKeyPress={e => keyPressed(e)}\n                           id=\"outlined-basic\" label=\"Social Insurance Number\" variant=\"outlined\" value={SIN}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => checkEmployee()}\n                        disabled={!sin_re.test(SIN) || disableSignIn}>Sign In</Button>\n            </div>\n            <Typography style={{color: \"red\"}}>{error}</Typography>\n        </>\n    )\n}","import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory} from 'react-router-dom';\n\n\nconst useStyles = makeStyles(() => ({\n    sinCentre: {\n        paddingTop: '3em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    }\n}));\n\nexport default function Customer() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [SIN, setSIN] = useState(\"\");\n    const [disableSignIn, setDisableSignIn] = useState(false);\n    const sin_re: RegExp = /^[0-9]{3}-[0-9]{3}-[0-9]{3}$/;\n\n    function validateSIN(): boolean {\n        return !sin_re.test(SIN) && SIN.length !== 0;\n    }\n\n    function keyPressed(e: React.KeyboardEvent<HTMLDivElement>) {\n        if (e.key === 'Enter' && sin_re.test(SIN)) {\n            checkCustomer();\n        }\n    }\n\n    function checkCustomer() {\n        setDisableSignIn(true);\n        fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + SIN)\n            .then(response => {\n                if (response.status === 404) {\n                    history.push('/ui/customer/name', {customerSIN: SIN})\n                } else {\n                    response.json().then(response => {\n                        history.push('/ui/customer/welcome', {\n                            customerSIN: response.customer_sin,\n                            customerName: response.customer_name,\n                            customerAddress: response.customer_address\n                        })\n                    })\n                }\n            }).catch(error => {\n                console.log('Error:', error);\n                setDisableSignIn(false);\n            }\n        )\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>Sign In</Typography>\n            <div className={classes.sinCentre}>\n                <Typography>To begin searching destinations, enter your social insurance number:</Typography>\n            </div>\n            <div className={classes.sinCentre}>\n                <TextField error={validateSIN()} helperText={validateSIN() ? \"SIN must have format XXX-XXX-XXX\" : \"\"}\n                           onChange={event => setSIN(event.currentTarget.value)}\n                           onKeyPress={e => keyPressed(e)}\n                           id=\"outlined-basic\" label=\"Social Insurance Number\" variant=\"outlined\" value={SIN}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => checkCustomer()}\n                        disabled={!sin_re.test(SIN) || disableSignIn}>Sign In</Button>\n            </div>\n        </>\n    )\n}","import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '5em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}));\n\nexport default function Name() {\n    const classes = useStyles();\n    const location = useLocation<{ customerSIN: string }>();\n    const history = useHistory();\n    const [name, setName] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [nameError, setNameError] = useState(false)\n    const [addressError, setAddressError] = useState(false)\n    const [disableUseButton, setDisableUseButton] = useState(false)\n\n    async function submitInfo() {\n        if (name.length === 0 && address.length === 0) {\n            setNameError(true);\n            setAddressError(true)\n        } else if (name.length !== 0 && address.length === 0) {\n            setNameError(false);\n            setAddressError(true)\n        } else if (name.length === 0 && address.length !== 0) {\n            setNameError(true);\n            setAddressError(false)\n        } else {\n            setDisableUseButton(true);\n            try {\n                let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers\", {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        customer_sin: location.state.customerSIN,\n                        customer_name: name,\n                        customer_address: address\n                    })\n                })\n                if (response.status === 201) {\n                    history.push('/ui/customer/welcome', {\n                        customerSIN: location.state.customerSIN,\n                        customerName: name,\n                        customerAddress: address\n                    })\n                }\n            } catch(error) {\n                console.error('Error:', error);\n                setDisableUseButton(false);\n            }\n        }\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <div className={classes.centre}>\n                <Typography>Welcome to ExpressBook. Please provide some information about yourself:</Typography>\n            </div>\n            <div className={classes.centre}>\n                <TextField label=\"Full Name\" variant=\"outlined\" value={name} error={nameError}\n                           helperText={nameError ? \"Must provide name\" : \"\"}\n                           onChange={event => setName(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.centre}>\n                <TextField label=\"Address\" variant=\"outlined\" value={address} error={addressError}\n                           helperText={addressError ? \"Must provide address\" : \"\"}\n                           onChange={event => setAddress(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => submitInfo()} disabled={disableUseButton}>Sign In</Button>\n            </div>\n        </>\n    )\n}","import {Button, makeStyles, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: '2em'\n    },\n    buttonSpacing: {\n        marginLeft: '1.5em',\n        marginRight: '1.5em'\n    }\n}));\n\nexport default function Welcome() {\n    const classes = useStyles();\n    const location = useLocation<{ customerSIN: string, customerName: string, customerAddress: string }>();\n    const history = useHistory();\n    const [disableHotelButton, setDisableHotelButton] = useState(false);\n    const [disableReservationButton, setDisableReservationButton] = useState(false);\n\n    const welcomeMessage = \"Welcome, \" + location.state.customerName;\n    const addressMessage = \"Your address: \" + location.state.customerAddress;\n\n    async function goToBrandPage() {\n        setDisableHotelButton(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/brands\");\n            if (response.status !== 200) {\n                setDisableHotelButton(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/customer/brands', {\n                customerSIN: location.state.customerSIN,\n                customerAddress: location.state.customerAddress,\n                customerName: location.state.customerName,\n                response: response\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            setDisableHotelButton(false);\n        }\n    }\n\n    async function goToReservationsPage() {\n        setDisableReservationButton(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + location.state.customerSIN + \"/reservations\");\n            if (response.status !== 200) {\n                setDisableReservationButton(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/customer/reservations', {\n                customerName: location.state.customerName,\n                customerSIN: location.state.customerSIN,\n                customerAddress: location.state.customerAddress,\n                response: response\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            setDisableReservationButton(false);\n        }\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>{welcomeMessage}</Typography>\n            <Typography className={classes.centre}>{addressMessage}</Typography>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" className={classes.buttonSpacing} onClick={() => goToBrandPage()}\n                        disabled={disableHotelButton}>Find A Hotel</Button>\n                <Button variant=\"contained\" onClick={() => goToReservationsPage()} disabled={disableReservationButton}>My\n                    Reservations</Button>\n            </div>\n        </>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em',\n        width: '100%'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    brandGrid: {\n        width: '80%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    }\n}));\n\nexport default function HotelBrand() {\n    const classes = useStyles();\n    const location = useLocation<{customerSIN: string, customerName: string, customerAddress: string, response: any }>();\n    const history = useHistory();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n\n    async function getHotels(index: number) {\n        let newStates = [...buttonStates]\n        newStates[index] = true;\n        setButtonStates(newStates);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/brands/\" + location.state.response[index].brand_id + \"/hotels\");\n            if (response.status !== 200) {\n                let newStates = [...buttonStates]\n                newStates[index] = false;\n                setButtonStates(newStates);\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/customer/hotels', {\n                customerSIN: location.state.customerSIN,\n                customerName: location.state.customerName,\n                customerAddress: location.state.customerAddress,\n                response: response,\n                brandName: location.state.response[index].name,\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[index] = false;\n            setButtonStates(newStates);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>Select a hotel brand to view hotels:</Typography>\n            <GridList cols={1} cellHeight={200} className={classes.grid}>\n                {\n                    location.state.response.map((brand: {\n                        brand_id: number;\n                        name: string;\n                        main_office_address: string;\n                        email_address: string;\n                        phone_number: string;\n                        number_of_hotels: number;\n                    }, index: number) => {\n                        return (\n                            <GridListTile key={brand.brand_id} cols={1}>\n                                <Paper elevation={3} key={brand.brand_id} className={classes.brandPaper}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid className={classes.brandGrid}>\n                                            <Typography className={classes.hotelTitle}>{brand.name}</Typography>\n                                            <Typography>Headquarters Address: {brand.main_office_address}</Typography>\n                                            <Typography>Email: {brand.email_address}</Typography>\n                                            <Typography>Phone: {brand.phone_number}</Typography>\n                                            <Typography>Number of hotels: {brand.number_of_hotels}</Typography>\n                                        </Grid>\n                                        <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                        <Grid item xs={2}>\n                                            <Grid className={classes.priceDiv}>\n                                                <Button variant='contained' onClick={() => getHotels(index)}\n                                                        disabled={buttonStates[index]}>Select</Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </GridListTile>\n                        );\n                    })\n                }\n            </GridList>\n        </div>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {Rating} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em',\n        width: '100%'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    hotelGrid: {\n        width: '80%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n\n    }\n}));\n\nexport default function Hotel() {\n    const classes = useStyles();\n    const location = useLocation<{\n        customerSIN: string,\n        customerName: string,\n        customerAddress: string,\n        response: any,\n        brandName: string\n    }>();\n    const history = useHistory();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n\n    async function getHotels(index: number) {\n        let newStates = [...buttonStates]\n        newStates[index] = true;\n        setButtonStates(newStates);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.response[index].hotel_id + \"/rooms\");\n            if (response.status !== 200) {\n                let newStates = [...buttonStates]\n                newStates[index] = false;\n                setButtonStates(newStates);\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/customer/rooms', {\n                customerSIN: location.state.customerSIN,\n                customerName: location.state.customerName,\n                customerAddress: location.state.customerAddress,\n                response: response,\n                brandName: location.state.brandName,\n                address: location.state.response[index].physical_address,\n                hotelID: location.state.response[index].hotel_id\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[index] = false;\n            setButtonStates(newStates);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>{location.state.brandName} Hotels</Typography>\n            <GridList cols={1} cellHeight={175} className={classes.grid}>\n                {\n                    location.state.response.map((hotel: {\n                        physical_address: string;\n                        email_address: string;\n                        phone_number: string;\n                        number_of_rooms: number;\n                        hotel_id: number;\n                        star_category: number;\n                    }, index: number) => {\n                        return (\n                            <GridListTile key={hotel.hotel_id} cols={1}>\n                                <Paper elevation={3} key={hotel.hotel_id} className={classes.brandPaper}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid className={classes.hotelGrid}>\n                                            <Typography\n                                                className={classes.hotelTitle}>{hotel.physical_address}</Typography>\n                                            <Typography>Email: {hotel.email_address}</Typography>\n                                            <Typography>Phone: {hotel.phone_number}</Typography>\n                                            <Typography>Number of rooms: {hotel.number_of_rooms}</Typography>\n                                        </Grid>\n                                        <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                        <Grid item xs={2}>\n                                            <Grid className={classes.priceDiv}>\n                                                <Rating value={hotel.star_category} readOnly/>\n                                                <br/><br/>\n                                                <Button variant='contained' onClick={() => getHotels(index)}\n                                                        disabled={buttonStates[index]}>View Details</Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </GridListTile>\n                        );\n                    })\n                }\n            </GridList>\n        </div>\n    )\n}","import {\n    Button,\n    Divider, FormControlLabel,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper, Radio, RadioGroup, Snackbar,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useLocation} from \"react-router-dom\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    hotelGrid: {\n        width: '70%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    radioGroup: {\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em'\n    }\n}));\n\ninterface Reservation {\n    booking_id: number;\n    physical_address: string;\n    date_of_registration: string;\n    check_in_day: string;\n    check_out_day: string;\n    status: string;\n    title: string;\n    is_extendable: boolean;\n    amenities: string[];\n    view: string;\n    price: string;\n}\n\ntype Severity = \"error\" | \"success\" | \"info\" | \"warning\" | undefined;\n\nexport default function Reservations() {\n    const classes = useStyles();\n    const location = useLocation<{\n        customerName: string;\n        customerSIN: string,\n        response: Reservation[]\n    }>();\n\n    location.state.response.sort((r1: Reservation, r2: Reservation) => (r1.check_in_day > r2.check_in_day) ? 1 : -1);\n    const ongoing: number[] = [];\n    const upcoming: number[] = [];\n    const past: number[] = [];\n    const all: number[] = [];\n\n    for (let i = 0; i < location.state.response.length; i++) {\n        all.push(location.state.response[i].booking_id);\n    }\n    location.state.response.forEach((res: Reservation, index: number) => {\n        if (res.status === 'Renting') {\n            ongoing.push(location.state.response[index].booking_id);\n        } else if (res.status === 'Booked') {\n            upcoming.push(location.state.response[index].booking_id);\n        } else {\n            past.push(location.state.response[index].booking_id);\n        }\n    });\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n    const [radioState, setRadioState] = useState(0);\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertStatus, setAlertStatus]: [Severity, any] = useState(\"success\");\n    const [bookingIDs, setBookingIDs]: [number[], any] = useState(all);\n\n    function openAlert(message: string, status: string) {\n        setAlertMessage(message);\n        setAlertStatus(status);\n        setAlertOpen(true);\n    }\n\n    function closeAlert() {\n        setAlertOpen(false);\n    }\n\n    async function patchReservation(action: string, bookingID: number) {\n        let newStates = [...buttonStates]\n        const reservation = bookingIDToReservation(bookingID);\n        newStates[reservation.index] = true;\n        setButtonStates(newStates);\n\n        try {\n            let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + location.state.customerSIN + \"/reservations/\" + reservation.reservation.booking_id, {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    status: action\n                })\n            })\n            if (response.status === 204) {\n                if (action === 'Archived') {\n                    ongoing.splice(ongoing.indexOf(bookingID), 1);\n                    reservation.reservation.status = 'Archived';\n                    past.push(bookingID)\n                    setReservationIndices(radioState);\n                    openAlert('Successfully checked out of hotel', 'success');\n\n                } else {\n                    upcoming.splice(upcoming.indexOf(bookingID), 1);\n                    reservation.reservation.status = 'Cancelled';\n                    past.push(bookingID)\n                    setReservationIndices(radioState);\n                    openAlert('Successfully cancelled room booking', 'success')\n                }\n            } else {\n                let newStates = [...buttonStates]\n                newStates[reservation.index] = false;\n                setButtonStates(newStates);\n                openAlert('Error: Unable to modify reservation', 'error')\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[reservation.index] = false;\n            setButtonStates(newStates);\n            openAlert('Error: Unable to modify reservation', 'error')\n        }\n    }\n\n    function ReservationEditButton(props: { bookingID: number; }) {\n        const res = bookingIDToReservation(props.bookingID);\n        if (res.reservation.status === 'Renting') {\n            return <Button variant='contained' onClick={() => patchReservation('Archived', props.bookingID)}\n                           disabled={buttonStates[res.index]}>Check Out</Button>\n        }\n        if (res.reservation.status === 'Booked') {\n            return <Button variant='contained' onClick={() => patchReservation('Cancelled', props.bookingID)}\n                           disabled={buttonStates[res.index]}>Cancel</Button>\n        }\n        return <></>\n    }\n\n    function setReservationRadioState(event: React.ChangeEvent<HTMLInputElement>) {\n        const value = parseInt(event.target.value);\n        setRadioState(value);\n        setReservationIndices(value);\n    }\n\n    function setReservationIndices(value: number) {\n        if (value === 0) {\n            setBookingIDs([...all]);\n        } else if (value === 1) {\n            setBookingIDs([...ongoing]);\n        } else if (value === 2) {\n            setBookingIDs([...upcoming]);\n        } else {\n            setBookingIDs([...past]);\n        }\n    }\n\n    function bookingIDToReservation(bookingID: number): { reservation: Reservation, index: number } {\n        for (let i = 0; i < location.state.response.length; i++) {\n            const reservation = location.state.response[i];\n            if (reservation.booking_id === bookingID) {\n                return {reservation: reservation, index: i};\n            }\n        }\n        return {\n            reservation: {\n                booking_id: -1,\n                physical_address: '',\n                date_of_registration: '',\n                check_in_day: '',\n                check_out_day: '',\n                status: '',\n                title: '',\n                is_extendable: false,\n                amenities: [],\n                view: '',\n                price: ''\n            },\n            index: -1\n        }\n    }\n\n\n    function GenerateReservations(props: { reservations: number[] }) {\n        return <GridList cols={1} cellHeight={220} className={classes.grid}>\n            {\n                props.reservations.map((bookingID: number) => {\n                    const res = bookingIDToReservation(bookingID);\n                    const reservation = res.reservation;\n                    const checkIn: Date = new Date(reservation.check_in_day.replace('-', '/'))\n                    const checkOut: Date = new Date(reservation.check_out_day.replace('-', '/'))\n                    const days: number = Math.round(Math.abs(+checkIn - +checkOut) / 24 / 60 / 60 / 1000)\n                    const totalPrice: string = (days * parseFloat(reservation.price)).toFixed(2)\n\n                    if (reservation.amenities.length === 0) {\n                        reservation.amenities.push(\"None\")\n                    }\n\n                    return (\n                        <GridListTile key={reservation.booking_id} cols={1}>\n                            <Paper elevation={3} key={reservation.booking_id} className={classes.brandPaper}>\n                                <Grid container spacing={2} alignItems=\"center\">\n                                    <Grid className={classes.hotelGrid}>\n                                        <Typography\n                                            className={classes.hotelTitle}>Room: {reservation.title} | {reservation.check_in_day} to {reservation.check_out_day}\n                                        </Typography>\n                                        <Typography>{reservation.physical_address}</Typography>\n                                        <Typography>Booking status: {reservation.status}</Typography>\n                                        <Typography>Amenities: {reservation.amenities.join(', ')}</Typography>\n                                        <Typography>View: {reservation.view}</Typography>\n                                        <Typography>\n                                            Extendable: {reservation.is_extendable ? \"Yes\" : \"No\"}\n                                        </Typography>\n                                    </Grid>\n                                    <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                    <Grid item xs={3}>\n                                        <Grid className={classes.priceDiv}>\n                                            <Typography>Booked on {reservation.date_of_registration}</Typography>\n                                            <Typography className={classes.hotelTitle}>Total price:</Typography>\n                                            <Typography className={classes.hotelTitle}>${totalPrice}</Typography>\n                                            <br/>\n                                            <ReservationEditButton bookingID={bookingID}/>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </GridListTile>\n                    );\n                })\n            }\n        </GridList>\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>My Reservations - {location.state.customerName}</Typography>\n            <RadioGroup className={classes.radioGroup} value={radioState} onChange={e => setReservationRadioState(e)}\n                        row>\n                <Typography>Filter by:&nbsp;&nbsp;&nbsp;</Typography>\n                <FormControlLabel value={0} control={<Radio/>} label=\"All Reservations\"/>\n                <FormControlLabel value={1} control={<Radio/>} label=\"Ongoing\"/>\n                <FormControlLabel value={2} control={<Radio/>} label=\"Upcoming\"/>\n                <FormControlLabel value={3} control={<Radio/>} label=\"Cancelled/Archived\"/>\n            </RadioGroup>\n            <GenerateReservations reservations={bookingIDs}/>\n            <Snackbar open={alertOpen} autoHideDuration={6000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity={alertStatus}>\n                    {alertMessage}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}","import {\n    Button, Dialog, DialogActions, DialogTitle,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper, TextField, Tooltip,\n    TooltipProps,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useLocation} from \"react-router-dom\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {MaterialUiPickersDate} from \"@material-ui/pickers/typings/date\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '1em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    centreTitleNoSpace: {\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    smallerTitle: {\n        fontSize: '1.7em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        marginBottom: '0.5em'\n    },\n    brandPaper: {\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        marginTop: '1em'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '50em',\n        width: '85%',\n        marginTop: '10em'\n    },\n    outsideGrid: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        marginBottom: '2em'\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em',\n    },\n    hotelGrid: {\n        width: '70%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n\n    },\n    dateGrid: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    gridParent: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    dialogDiv: {\n        marginLeft: \"0.5em\",\n        marginRight: \"0.5em\"\n    },\n    dialogHeader: {\n        fontWeight: 'bold'\n    },\n    dialogTitle: {\n        fontSize: \"1.8em\",\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    dialogAddress: {\n        marginLeft: \"0.5em\",\n        marginRight: \"0.5em\",\n        fontStyle: \"italic\"\n    }\n}));\n\nconst useStylesBootstrap = makeStyles((theme) => ({\n    arrow: {\n        color: theme.palette.common.black,\n    },\n    tooltip: {\n        backgroundColor: theme.palette.common.black,\n    },\n}));\n\nfunction BootstrapTooltip(props: JSX.IntrinsicAttributes & TooltipProps) {\n    const classes = useStylesBootstrap();\n\n    return <Tooltip arrow classes={classes} {...props} />;\n}\n\ninterface Room {\n    type_id: number;\n    title: string;\n    price: string;\n    amenities: string[];\n    room_capacity: number;\n    view: string;\n    is_extendable: boolean;\n    total_number_rooms: number;\n    rooms_available: number;\n    enabled: undefined | boolean;\n    tooltip: string;\n}\n\ninterface AvailableRoom {\n    type_id: number;\n    occupancy: number;\n}\n\nexport default function Rooms() {\n    const classes = useStyles();\n    const location = useLocation<{\n        address: string;\n        customerSIN: string,\n        customerName: string,\n        customerAddress: string,\n        response: Room[],\n        brandName: string,\n        hotelID: string\n    }>();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(true)\n    }\n\n    const [checkInDate, setCheckInDate]: [Date, any] = useState(new Date());\n    const tomorrow: MaterialUiPickersDate = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1)\n    const [checkOutDate, setCheckOutDate]: [Date, any] = useState(tomorrow);\n    const [checkInDateToBook, setCheckInDateToBook]: [string, any] = useState(\"\");\n    const [checkOutDateToBook, setCheckOutDateToBook]: [string, any] = useState(\"\");\n    const [numPeople, setNumPeople]: [number, any] = useState(1);\n    const [availability, setAvailability]: [boolean, any] = useState(false);\n    const [disableAvailability, setDisableAvailability]: [boolean, any] = useState(false);\n    const [roomData, setRoomData]: [Room[], any] = useState(location.state.response);\n    const [numRooms, setNumRooms]: [number, any] = useState(location.state.response.length);\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const [roomToBook, setRoomToBook] = useState(location.state.response[0]);\n\n    const past: [Date, Date, number] = [tomorrow, tomorrow, -1]\n\n    location.state.response.forEach((room: Room) => {\n        room.enabled = true;\n        room.tooltip = \"\";\n    })\n\n    function confirmBookRoom(room: Room) {\n        setRoomToBook(room);\n        setDialogOpen(true);\n    }\n\n    function bookRoom(typeID: number) {\n        setDialogOpen(false);\n    }\n\n    async function checkAvailability() {\n        //Only check availability if filters have been changed\n        if (past[0] !== checkInDate || past[1] !== checkOutDate || past[2] !== numPeople) {\n            setDisableAvailability(true);\n            try {\n                let url: string = process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.hotelID + \"/rooms/availability\"\n                url += \"?check-in=\" + dateToString(checkInDate) + \"&check-out=\" + dateToString(checkOutDate) + \"&people=\" + numPeople;\n\n                let response: Response = await fetch(url);\n                if (response.status !== 200) {\n                    return;\n                }\n                const availableRooms: AvailableRoom[] = await response.json();\n                const newRoomData: Room[] = JSON.parse(JSON.stringify(roomData));\n                let roomNum: number = newRoomData.length;\n                newRoomData.forEach(room => {\n                    const roomInfo = getRoom(room.type_id, availableRooms);\n                    room.enabled = true;\n                    room.tooltip = \"\";\n                    room.rooms_available = room.total_number_rooms - roomInfo.occupancy;\n                    //Room capacity is too small; disable\n                    if (roomInfo.type_id === -1) {\n                        room.enabled = false;\n                        room.tooltip = \"Room capacity is too small\";\n                        roomNum--;\n                    }\n                    if (room.rooms_available <= 0) {\n                        room.enabled = false;\n                        room.tooltip = \"Room is booked up over these dates\"\n                        roomNum--;\n                    }\n                });\n                newRoomData.sort((r1: Room, r2: Room) => {\n                    if (r1.enabled && !r2.enabled) {\n                        return -1;\n                    }\n                    if (!r1.enabled && r2.enabled) {\n                        return 1;\n                    }\n                    return r1.type_id > r2.type_id ? -1 : 1;\n                })\n                setRoomData(newRoomData);\n                setNumRooms(roomNum);\n                setCheckInDateToBook(dateToString(checkInDate));\n                setCheckOutDateToBook(dateToString(checkOutDate));\n            } catch (error) {\n                console.error('Error:', error);\n            }\n            setDisableAvailability(false);\n        }\n        if (!availability) {\n            setAvailability(true);\n        }\n    }\n\n    function getRoom(typeID: number, roomData: AvailableRoom[]): AvailableRoom {\n        for (let i = 0; i < roomData.length; i++) {\n            if (roomData[i].type_id === typeID) {\n                return roomData[i];\n            }\n        }\n        return {\n            type_id: -1,\n            occupancy: -1\n        }\n    }\n\n    function setNumberOfPeople(num: number) {\n        if (num > 0) {\n            setNumPeople(num);\n            setAvailability(false);\n        }\n    }\n\n    function setCheckOut(date: MaterialUiPickersDate) {\n        if (date !== null && checkInDate !== null) {\n            if (date.getTime() <= checkInDate.getTime()) {\n                const checkIn: MaterialUiPickersDate = new Date();\n                checkIn.setMonth(date.getMonth())\n                checkIn.setDate(date.getDate() - 1)\n                setCheckInDate(checkIn);\n            }\n            setAvailability(false);\n            setCheckOutDate(date);\n        }\n    }\n\n    function setCheckIn(date: MaterialUiPickersDate) {\n        if (date !== null && checkOutDate !== null) {\n            if (date.getTime() >= checkOutDate.getTime()) {\n                const checkOut: MaterialUiPickersDate = new Date();\n                checkOut.setMonth(date.getMonth())\n                checkOut.setDate(date.getDate() + 1)\n                setCheckOutDate(checkOut);\n            }\n            setAvailability(false);\n            setCheckInDate(date);\n        }\n    }\n\n    function dateToString(date: Date): string {\n        let year: string = date.getFullYear().toString();\n        let month: string = '' + (date.getMonth() + 1);\n        let day: string = '' + date.getDate();\n\n        if (month.length < 2) {\n            month = '0' + month;\n        }\n        if (day.length < 2) {\n            day = '0' + day;\n        }\n        return year + '-' + month + '-' + day;\n    }\n\n    function getRoomAvailabilityMessage(numAvailable: number, total: number): string {\n        return numAvailable + '/' + total + ' rooms available';\n    }\n\n    function ConfirmationDialog() {\n        return <Dialog onClose={() => setDialogOpen(false)} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n            <DialogTitle id=\"dialog-title\" className={classes.dialogTitle}>\n                <Typography className={classes.dialogTitle}>Confirm Room Booking</Typography>\n            </DialogTitle>\n            <div className={classes.dialogAddress}>\n                <Typography align=\"center\">{location.state.address}</Typography>\n            </div>\n            <br/>\n            <Divider/>\n            <Typography align=\"center\" className={classes.dialogHeader}>Customer Info</Typography>\n            <Divider/>\n            <div className={classes.dialogDiv}>\n                <Typography>{location.state.customerName}</Typography>\n                <Typography>{location.state.customerAddress}</Typography>\n            </div>\n            <br/>\n            <Divider/>\n            <Typography align=\"center\" className={classes.dialogHeader}>Room Details</Typography>\n            <Divider/>\n            <div className={classes.dialogDiv}>\n                <Typography>Room type: {roomToBook.title}</Typography>\n                <Typography>{checkInDateToBook} to {checkOutDateToBook}</Typography>\n            </div>\n            <br/>\n            <DialogActions>\n                <Button onClick={() => bookRoom(roomToBook.type_id)} variant=\"contained\" color=\"primary\">\n                    Book Room\n                </Button>\n                <Button onClick={() => setDialogOpen(false)} variant=\"contained\" color=\"secondary\">\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>{location.state.brandName}</Typography>\n            <Typography className={classes.centreTitleNoSpace}>{location.state.address}</Typography>\n            <GridList className={classes.gridParent}>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <Typography>Enter booking info to select a room:</Typography>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"check-in-dialog\"\n                            label=\"Check in date\"\n                            format=\"yyyy-MM-dd\"\n                            minDate={new Date()}\n                            value={checkInDate}\n                            onChange={(date: MaterialUiPickersDate) => setCheckIn(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"check-out-dialog\"\n                            label=\"Check out date\"\n                            format=\"yyyy-MM-dd\"\n                            minDate={tomorrow}\n                            value={checkOutDate}\n                            onChange={(date: MaterialUiPickersDate) => setCheckOut(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <TextField\n                        id=\"capacity-number\"\n                        label=\"# of people\"\n                        type=\"number\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        variant=\"outlined\"\n                        value={numPeople}\n                        onChange={e => setNumberOfPeople(parseInt(e.target.value))}\n                    />\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <Button variant=\"contained\" onClick={checkAvailability} disabled={disableAvailability}>Check\n                        Availability</Button>\n                </Grid>\n            </GridList>\n            <Typography className={classes.smallerTitle}>{numRooms} Rooms Found</Typography>\n            <div className={classes.outsideGrid}>\n                <GridList cols={1} cellHeight={190} className={classes.grid}>\n                    <div style={{height: '1em'}}/>\n                    {\n                        roomData.map((room: Room) => {\n                            return (\n                                <GridListTile key={room.type_id} cols={1}>\n                                    <BootstrapTooltip title={room.tooltip} aria-label=\"add\" placement=\"top\">\n                                        <Paper elevation={3} key={room.type_id} className={classes.brandPaper}\n                                               style={room.enabled ? {} : {\n                                                   backgroundColor: 'grey'\n                                               }}>\n                                            <div style={room.enabled ? {opacity: '1'} : {\n                                                opacity: '0.40'\n                                            }}>\n                                                <Grid container spacing={2} alignItems=\"center\">\n                                                    <Grid className={classes.hotelGrid}>\n                                                        <Typography\n                                                            className={classes.hotelTitle}>{room.title}</Typography>\n                                                        <Typography>Amenities: {room.amenities.length === 0 ? \"None\" : room.amenities.join(', ')}</Typography>\n                                                        <Typography>Max\n                                                            capacity: {room.room_capacity} adults</Typography>\n                                                        <Typography>View: {room.view}</Typography>\n                                                        <Typography>Extendable: {room.is_extendable ? \"Yes\" : \"No\"}</Typography>\n                                                    </Grid>\n                                                    <Divider orientation=\"vertical\" flexItem\n                                                             className={classes.divider}/>\n                                                    <Grid container item xs={3} alignItems=\"center\">\n                                                        <Grid container className={classes.priceDiv}>\n                                                            <Typography\n                                                                className={classes.hotelTitle}>${room.price}/night</Typography>\n                                                            <Typography>{getRoomAvailabilityMessage(room.rooms_available, room.total_number_rooms)}</Typography>\n                                                            <br/>\n                                                            <Button variant='contained'\n                                                                    onClick={() => confirmBookRoom(room)}\n                                                                    disabled={!room.enabled || !availability}>Book\n                                                                Room</Button>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </div>\n                                        </Paper>\n                                    </BootstrapTooltip>\n                                </GridListTile>\n                            );\n                        })\n                    }\n                </GridList>\n            </div>\n            <ConfirmationDialog/>\n        </div>\n    )\n}","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Employee from \"./employee/Employee\";\nimport Customer from \"./customer/Customer\";\nimport {AppBar, makeStyles, Typography} from \"@material-ui/core\";\nimport Name from \"./customer/Name\";\nimport Welcome from \"./customer/Welcome\";\nimport HotelBrand from \"./customer/HotelBrand\";\nimport Hotel from \"./customer/Hotel\";\nimport Reservations from \"./customer/Reservations\";\nimport Rooms from \"./customer/Rooms\";\n\nrequire('dotenv').config()\n\nconst useTitleStyles = makeStyles(() => ({\n    title: {\n        fontSize: \"2.5em\",\n        fontWeight: \"bold\",\n        paddingLeft: \"1em\"\n    }\n}));\n\nexport function TitleBarCustomer() {\n    const classes = useTitleStyles();\n    return <AppBar position=\"static\">\n        <Typography className={classes.title}>ExpressBook Customer Portal</Typography>\n    </AppBar>\n}\n\nexport function TitleBarEmployee() {\n    const classes = useTitleStyles();\n    return <AppBar position=\"static\">\n        <Typography className={classes.title}>ExpressBook Employee Portal</Typography>\n    </AppBar>\n}\n\nReactDOM.render(\n    <>\n        <Router>\n            <Switch>\n                <Route exact path=\"/ui/employee\" component={Employee}/>\n                <Route exact path=\"/ui/customer\" component={Customer}/>\n                <Route exact path=\"/ui/customer/name\" component={Name}/>\n                <Route exact path=\"/ui/customer/welcome\" component={Welcome}/>\n                <Route exact path=\"/ui/customer/brands\" component={HotelBrand}/>\n                <Route exact path=\"/ui/customer/hotels\" component={Hotel}/>\n                <Route exact path=\"/ui/customer/reservations\" component={Reservations}/>\n                <Route exact path=\"/ui/customer/rooms\" component={Rooms}/>\n            </Switch>\n        </Router>\n    </>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}