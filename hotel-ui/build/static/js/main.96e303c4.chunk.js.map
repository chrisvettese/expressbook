{"version":3,"sources":["employee/Employee.tsx","customer/Customer.tsx","customer/Name.tsx","customer/Welcome.tsx","customer/HotelBrand.tsx","customer/Hotel.tsx","customer/Reservations.tsx","customer/Rooms.tsx","index.tsx"],"names":["useStyles","makeStyles","sinCentre","paddingTop","display","alignItems","justifyContent","buttonCentre","centreTitle","fontWeight","fontSize","width","centre","marginTop","buttonSpacing","marginLeft","marginRight","theme","root","flexWrap","backgroundColor","palette","background","paper","marginBottom","brandPaper","padding","flexDirection","hotelTitle","grid","boxShadow","height","divider","brandGrid","priceDiv","hotelGrid","radioGroup","centreTitleNoSpace","smallerTitle","outsideGrid","dateGrid","gridParent","dialogDiv","dialogHeader","dialogTitle","dialogAddress","fontStyle","useStylesBootstrap","arrow","color","common","black","tooltip","BootstrapTooltip","props","classes","Tooltip","ConfirmationDialog","dialogOpen","setDialogOpen","roomToBook","location","checkInDateToBook","checkOutDateToBook","disableBookRoomButton","bookRoom","Dialog","onClose","aria-labelledby","open","DialogTitle","id","className","Typography","align","state","address","Divider","customerName","customerAddress","title","amenities","join","view","is_extendable","DialogActions","Button","disabled","onClick","type_id","variant","require","config","useTitleStyles","paddingLeft","TitleBarCustomer","AppBar","position","TitleBarEmployee","ReactDOM","exact","path","component","history","useHistory","useState","SIN","setSIN","disableSignIn","setDisableSignIn","error","setError","sin_re","validateSIN","test","length","checkEmployee","fetch","process","then","response","status","json","push","customerSIN","customer_sin","customer_name","customer_address","catch","console","log","TextField","helperText","onChange","event","currentTarget","value","onKeyPress","e","key","keyPressed","label","style","checkCustomer","useLocation","name","setName","setAddress","nameError","setNameError","addressError","setAddressError","disableUseButton","setDisableUseButton","a","method","headers","body","JSON","stringify","submitInfo","disableHotelButton","setDisableHotelButton","disableReservationButton","setDisableReservationButton","welcomeMessage","addressMessage","goToBrandPage","goToReservationsPage","buttonStateValues","i","buttonStates","setButtonStates","index","newStates","brand_id","brandName","GridList","cols","cellHeight","map","brand","GridListTile","Paper","elevation","Grid","container","spacing","main_office_address","email_address","phone_number","number_of_hotels","orientation","flexItem","item","xs","getHotels","hotel_id","physical_address","hotelID","hotel","number_of_rooms","Rating","star_category","readOnly","sort","r1","r2","check_in_day","ongoing","upcoming","past","all","booking_id","forEach","res","radioState","setRadioState","alertOpen","setAlertOpen","alertMessage","setAlertMessage","alertStatus","setAlertStatus","bookingIDs","setBookingIDs","openAlert","message","closeAlert","patchReservation","action","bookingID","reservation","bookingIDToReservation","splice","indexOf","setReservationIndices","ReservationEditButton","date_of_registration","check_out_day","price","GenerateReservations","reservations","checkIn","Date","replace","checkOut","totalPrice","Math","round","abs","parseFloat","toFixed","RadioGroup","parseInt","target","setReservationRadioState","row","FormControlLabel","control","Radio","Snackbar","autoHideDuration","Alert","severity","checkInDate","setCheckInDate","tomorrow","setDate","getDate","checkOutDate","setCheckOutDate","setCheckInDateToBook","setCheckOutDateToBook","numPeople","setNumPeople","availability","setAvailability","disableAvailability","setDisableAvailability","roomData","setRoomData","numRooms","setNumRooms","setRoomToBook","setDisableBookRoomButton","typeID","check_in","check_out","checkAvailability","url","dateToString","availableRooms","newRoomData","parse","roomNum","room","roomInfo","getRoom","enabled","rooms_available","total_number_rooms","occupancy","date","year","getFullYear","toString","month","getMonth","day","utils","DateFnsUtils","margin","format","minDate","getTime","setMonth","setCheckIn","KeyboardButtonProps","setCheckOut","type","InputLabelProps","shrink","num","aria-label","placement","opacity","room_capacity","numAvailable","total","confirmBookRoom","document","getElementById"],"mappings":"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","file":"static/js/main.96e303c4.chunk.js","sourcesContent":["import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory} from 'react-router-dom';\n\n\nconst useStyles = makeStyles(() => ({\n    sinCentre: {\n        paddingTop: '3em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    }\n}));\n\nexport default function Employee() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [SIN, setSIN] = useState(\"\");\n    const [disableSignIn, setDisableSignIn] = useState(false);\n    const [error, setError] = useState(\"\");\n    const sin_re: RegExp = /^[0-9]{3}-[0-9]{3}-[0-9]{3}$/;\n\n    function validateSIN(): boolean {\n        return !sin_re.test(SIN) && SIN.length !== 0;\n    }\n\n    function keyPressed(e: React.KeyboardEvent<HTMLDivElement>) {\n        if (e.key === 'Enter' && sin_re.test(SIN)) {\n            checkEmployee();\n        }\n    }\n\n    function checkEmployee() {\n        setDisableSignIn(true);\n        fetch(process.env.REACT_APP_SERVER_URL + \"/employees/\" + SIN)\n            .then(response => {\n                if (response.status === 200) {\n                    response.json().then(response => {\n                        history.push('/ui/customer/welcome', {\n                            customerSIN: response.customer_sin,\n                            customerName: response.customer_name,\n                            customerAddress: response.customer_address\n                        })\n                    })\n                } else {\n                    setError(\"Unable to sign in. Please contact the hotel manager or database admin if you think this is a problem.\")\n                    setDisableSignIn(false);\n                }\n            }).catch(error => {\n                console.log('Error:', error);\n                setDisableSignIn(false);\n            }\n        )\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>Sign In</Typography>\n            <div className={classes.sinCentre}>\n                <Typography>Please sign in to access the hotel management system:</Typography>\n            </div>\n            <div className={classes.sinCentre}>\n                <TextField error={validateSIN()} helperText={validateSIN() ? \"SIN must have format XXX-XXX-XXX\" : \"\"}\n                           onChange={event => setSIN(event.currentTarget.value)}\n                           onKeyPress={e => keyPressed(e)}\n                           id=\"outlined-basic\" label=\"Social Insurance Number\" variant=\"outlined\" value={SIN}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => checkEmployee()}\n                        disabled={!sin_re.test(SIN) || disableSignIn}>Sign In</Button>\n            </div>\n            <Typography style={{color: \"red\"}}>{error}</Typography>\n        </>\n    )\n}","import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory} from 'react-router-dom';\n\n\nconst useStyles = makeStyles(() => ({\n    sinCentre: {\n        paddingTop: '3em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    }\n}));\n\nexport default function Customer() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [SIN, setSIN] = useState(\"\");\n    const [disableSignIn, setDisableSignIn] = useState(false);\n    const sin_re: RegExp = /^[0-9]{3}-[0-9]{3}-[0-9]{3}$/;\n\n    function validateSIN(): boolean {\n        return !sin_re.test(SIN) && SIN.length !== 0;\n    }\n\n    function keyPressed(e: React.KeyboardEvent<HTMLDivElement>) {\n        if (e.key === 'Enter' && sin_re.test(SIN)) {\n            checkCustomer();\n        }\n    }\n\n    function checkCustomer() {\n        setDisableSignIn(true);\n        fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + SIN)\n            .then(response => {\n                if (response.status === 404) {\n                    history.push('/ui/customer/name', {customerSIN: SIN})\n                } else {\n                    response.json().then(response => {\n                        history.push('/ui/customer/welcome', {\n                            customerSIN: response.customer_sin,\n                            customerName: response.customer_name,\n                            customerAddress: response.customer_address\n                        })\n                    })\n                }\n            }).catch(error => {\n                console.log('Error:', error);\n                setDisableSignIn(false);\n            }\n        )\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>Sign In</Typography>\n            <div className={classes.sinCentre}>\n                <Typography>To begin searching destinations, enter your social insurance number:</Typography>\n            </div>\n            <div className={classes.sinCentre}>\n                <TextField error={validateSIN()} helperText={validateSIN() ? \"SIN must have format XXX-XXX-XXX\" : \"\"}\n                           onChange={event => setSIN(event.currentTarget.value)}\n                           onKeyPress={e => keyPressed(e)}\n                           id=\"outlined-basic\" label=\"Social Insurance Number\" variant=\"outlined\" value={SIN}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => checkCustomer()}\n                        disabled={!sin_re.test(SIN) || disableSignIn}>Sign In</Button>\n            </div>\n        </>\n    )\n}","import {Button, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '5em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}));\n\nexport default function Name() {\n    const classes = useStyles();\n    const location = useLocation<{ customerSIN: string }>();\n    const history = useHistory();\n    const [name, setName] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [nameError, setNameError] = useState(false)\n    const [addressError, setAddressError] = useState(false)\n    const [disableUseButton, setDisableUseButton] = useState(false)\n\n    async function submitInfo() {\n        if (name.length === 0 && address.length === 0) {\n            setNameError(true);\n            setAddressError(true)\n        } else if (name.length !== 0 && address.length === 0) {\n            setNameError(false);\n            setAddressError(true)\n        } else if (name.length === 0 && address.length !== 0) {\n            setNameError(true);\n            setAddressError(false)\n        } else {\n            setDisableUseButton(true);\n            try {\n                let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers\", {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        customer_sin: location.state.customerSIN,\n                        customer_name: name,\n                        customer_address: address\n                    })\n                })\n                if (response.status === 201) {\n                    history.push('/ui/customer/welcome', {\n                        customerSIN: location.state.customerSIN,\n                        customerName: name,\n                        customerAddress: address\n                    })\n                }\n            } catch(error) {\n                console.error('Error:', error);\n                setDisableUseButton(false);\n            }\n        }\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <div className={classes.centre}>\n                <Typography>Welcome to ExpressBook. Please provide some information about yourself:</Typography>\n            </div>\n            <div className={classes.centre}>\n                <TextField label=\"Full Name\" variant=\"outlined\" value={name} error={nameError}\n                           helperText={nameError ? \"Must provide name\" : \"\"}\n                           onChange={event => setName(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.centre}>\n                <TextField label=\"Address\" variant=\"outlined\" value={address} error={addressError}\n                           helperText={addressError ? \"Must provide address\" : \"\"}\n                           onChange={event => setAddress(event.currentTarget.value)}/>\n            </div>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" onClick={() => submitInfo()} disabled={disableUseButton}>Sign In</Button>\n            </div>\n        </>\n    )\n}","import {Button, makeStyles, Typography} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n    centre: {\n        paddingTop: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    buttonCentre: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: '2em'\n    },\n    buttonSpacing: {\n        marginLeft: '1.5em',\n        marginRight: '1.5em'\n    }\n}));\n\nexport default function Welcome() {\n    const classes = useStyles();\n    const location = useLocation<{ customerSIN: string, customerName: string, customerAddress: string }>();\n    const history = useHistory();\n    const [disableHotelButton, setDisableHotelButton] = useState(false);\n    const [disableReservationButton, setDisableReservationButton] = useState(false);\n\n    const welcomeMessage = \"Welcome, \" + location.state.customerName;\n    const addressMessage = \"Your address: \" + location.state.customerAddress;\n\n    async function goToBrandPage() {\n        setDisableHotelButton(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/brands\");\n            if (response.status !== 200) {\n                setDisableHotelButton(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/customer/brands', {\n                customerSIN: location.state.customerSIN,\n                customerAddress: location.state.customerAddress,\n                customerName: location.state.customerName,\n                response: response\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            setDisableHotelButton(false);\n        }\n    }\n\n    async function goToReservationsPage() {\n        setDisableReservationButton(true);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + location.state.customerSIN + \"/reservations\");\n            if (response.status !== 200) {\n                setDisableReservationButton(false);\n                return;\n            }\n            response = await response.json();\n            history.push('/ui/customer/reservations', {\n                customerName: location.state.customerName,\n                customerSIN: location.state.customerSIN,\n                customerAddress: location.state.customerAddress,\n                response: response\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            setDisableReservationButton(false);\n        }\n    }\n\n    return (\n        <>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>{welcomeMessage}</Typography>\n            <Typography className={classes.centre}>{addressMessage}</Typography>\n            <div className={classes.buttonCentre}>\n                <Button variant=\"contained\" className={classes.buttonSpacing} onClick={() => goToBrandPage()}\n                        disabled={disableHotelButton}>Find A Hotel</Button>\n                <Button variant=\"contained\" onClick={() => goToReservationsPage()} disabled={disableReservationButton}>My\n                    Reservations</Button>\n            </div>\n        </>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em',\n        width: '100%'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    brandGrid: {\n        width: '80%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    }\n}));\n\nexport default function HotelBrand() {\n    const classes = useStyles();\n    const location = useLocation<{customerSIN: string, customerName: string, customerAddress: string, response: any }>();\n    const history = useHistory();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n\n    async function getHotels(index: number) {\n        let newStates = [...buttonStates]\n        newStates[index] = true;\n        setButtonStates(newStates);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/brands/\" + location.state.response[index].brand_id + \"/hotels\");\n            if (response.status !== 200) {\n                let newStates = [...buttonStates]\n                newStates[index] = false;\n                setButtonStates(newStates);\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/customer/hotels', {\n                customerSIN: location.state.customerSIN,\n                customerName: location.state.customerName,\n                customerAddress: location.state.customerAddress,\n                response: response,\n                brandName: location.state.response[index].name,\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[index] = false;\n            setButtonStates(newStates);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>Select a hotel brand to view hotels:</Typography>\n            <GridList cols={1} cellHeight={200} className={classes.grid}>\n                {\n                    location.state.response.map((brand: {\n                        brand_id: number;\n                        name: string;\n                        main_office_address: string;\n                        email_address: string;\n                        phone_number: string;\n                        number_of_hotels: number;\n                    }, index: number) => {\n                        return (\n                            <GridListTile key={brand.brand_id} cols={1}>\n                                <Paper elevation={3} key={brand.brand_id} className={classes.brandPaper}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid className={classes.brandGrid}>\n                                            <Typography className={classes.hotelTitle}>{brand.name}</Typography>\n                                            <Typography>Headquarters Address: {brand.main_office_address}</Typography>\n                                            <Typography>Email: {brand.email_address}</Typography>\n                                            <Typography>Phone: {brand.phone_number}</Typography>\n                                            <Typography>Number of hotels: {brand.number_of_hotels}</Typography>\n                                        </Grid>\n                                        <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                        <Grid item xs={2}>\n                                            <Grid className={classes.priceDiv}>\n                                                <Button variant='contained' onClick={() => getHotels(index)}\n                                                        disabled={buttonStates[index]}>Select</Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </GridListTile>\n                        );\n                    })\n                }\n            </GridList>\n        </div>\n    )\n}","import {\n    Button,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {Rating} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em',\n        width: '100%'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    hotelGrid: {\n        width: '80%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n\n    }\n}));\n\nexport default function Hotel() {\n    const classes = useStyles();\n    const location = useLocation<{\n        customerSIN: string,\n        customerName: string,\n        customerAddress: string,\n        response: any,\n        brandName: string\n    }>();\n    const history = useHistory();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n\n    async function getHotels(index: number) {\n        let newStates = [...buttonStates]\n        newStates[index] = true;\n        setButtonStates(newStates);\n        try {\n            let response: Response = await fetch(process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.response[index].hotel_id + \"/rooms\");\n            if (response.status !== 200) {\n                let newStates = [...buttonStates]\n                newStates[index] = false;\n                setButtonStates(newStates);\n                return;\n            }\n            response = await response.json()\n            history.push('/ui/customer/rooms', {\n                customerSIN: location.state.customerSIN,\n                customerName: location.state.customerName,\n                customerAddress: location.state.customerAddress,\n                response: response,\n                brandName: location.state.brandName,\n                address: location.state.response[index].physical_address,\n                hotelID: location.state.response[index].hotel_id\n            });\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[index] = false;\n            setButtonStates(newStates);\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>{location.state.brandName} Hotels</Typography>\n            <GridList cols={1} cellHeight={175} className={classes.grid}>\n                {\n                    location.state.response.map((hotel: {\n                        physical_address: string;\n                        email_address: string;\n                        phone_number: string;\n                        number_of_rooms: number;\n                        hotel_id: number;\n                        star_category: number;\n                    }, index: number) => {\n                        return (\n                            <GridListTile key={hotel.hotel_id} cols={1}>\n                                <Paper elevation={3} key={hotel.hotel_id} className={classes.brandPaper}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid className={classes.hotelGrid}>\n                                            <Typography\n                                                className={classes.hotelTitle}>{hotel.physical_address}</Typography>\n                                            <Typography>Email: {hotel.email_address}</Typography>\n                                            <Typography>Phone: {hotel.phone_number}</Typography>\n                                            <Typography>Number of rooms: {hotel.number_of_rooms}</Typography>\n                                        </Grid>\n                                        <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                        <Grid item xs={2}>\n                                            <Grid className={classes.priceDiv}>\n                                                <Rating value={hotel.star_category} readOnly/>\n                                                <br/><br/>\n                                                <Button variant='contained' onClick={() => getHotels(index)}\n                                                        disabled={buttonStates[index]}>View Details</Button>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </GridListTile>\n                        );\n                    })\n                }\n            </GridList>\n        </div>\n    )\n}","import {\n    Button,\n    Divider, FormControlLabel,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper, Radio, RadioGroup, Snackbar,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useLocation} from \"react-router-dom\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '2em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    brandPaper: {\n        marginTop: '2em',\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '38em',\n        width: '85%',\n        marginTop: '10em',\n        marginLeft: '10em',\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em'\n    },\n    hotelGrid: {\n        width: '70%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    radioGroup: {\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '1em'\n    }\n}));\n\ninterface Reservation {\n    booking_id: number;\n    physical_address: string;\n    date_of_registration: string;\n    check_in_day: string;\n    check_out_day: string;\n    status: string;\n    title: string;\n    is_extendable: boolean;\n    amenities: string[];\n    view: string;\n    price: string;\n}\n\ntype Severity = \"error\" | \"success\" | \"info\" | \"warning\" | undefined;\n\nexport default function Reservations() {\n    const classes = useStyles();\n    const location = useLocation<{\n        customerName: string;\n        customerSIN: string,\n        response: Reservation[]\n    }>();\n\n    location.state.response.sort((r1: Reservation, r2: Reservation) => (r1.check_in_day > r2.check_in_day) ? 1 : -1);\n    const ongoing: number[] = [];\n    const upcoming: number[] = [];\n    const past: number[] = [];\n    const all: number[] = [];\n\n    for (let i = 0; i < location.state.response.length; i++) {\n        all.push(location.state.response[i].booking_id);\n    }\n    location.state.response.forEach((res: Reservation, index: number) => {\n        if (res.status === 'Renting') {\n            ongoing.push(location.state.response[index].booking_id);\n        } else if (res.status === 'Booked') {\n            upcoming.push(location.state.response[index].booking_id);\n        } else {\n            past.push(location.state.response[index].booking_id);\n        }\n    });\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(false)\n    }\n    const [buttonStates, setButtonStates] = useState(buttonStateValues);\n    const [radioState, setRadioState] = useState(0);\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertStatus, setAlertStatus]: [Severity, any] = useState(\"success\");\n    const [bookingIDs, setBookingIDs]: [number[], any] = useState(all);\n\n    function openAlert(message: string, status: string) {\n        setAlertMessage(message);\n        setAlertStatus(status);\n        setAlertOpen(true);\n    }\n\n    function closeAlert() {\n        setAlertOpen(false);\n    }\n\n    async function patchReservation(action: string, bookingID: number) {\n        let newStates = [...buttonStates]\n        const reservation = bookingIDToReservation(bookingID);\n        newStates[reservation.index] = true;\n        setButtonStates(newStates);\n\n        try {\n            let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + location.state.customerSIN + \"/reservations/\" + reservation.reservation.booking_id, {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    status: action\n                })\n            })\n            if (response.status === 204) {\n                if (action === 'Archived') {\n                    ongoing.splice(ongoing.indexOf(bookingID), 1);\n                    reservation.reservation.status = 'Archived';\n                    past.push(bookingID)\n                    setReservationIndices(radioState);\n                    openAlert('Successfully checked out of hotel', 'success');\n\n                } else {\n                    upcoming.splice(upcoming.indexOf(bookingID), 1);\n                    reservation.reservation.status = 'Cancelled';\n                    past.push(bookingID)\n                    setReservationIndices(radioState);\n                    openAlert('Successfully cancelled room booking', 'success')\n                }\n            } else {\n                let newStates = [...buttonStates]\n                newStates[reservation.index] = false;\n                setButtonStates(newStates);\n                openAlert('Error: Unable to modify reservation', 'error')\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            let newStates = [...buttonStates]\n            newStates[reservation.index] = false;\n            setButtonStates(newStates);\n            openAlert('Error: Unable to modify reservation', 'error')\n        }\n    }\n\n    function ReservationEditButton(props: { bookingID: number; }) {\n        const res = bookingIDToReservation(props.bookingID);\n        if (res.reservation.status === 'Renting') {\n            return <Button variant='contained' onClick={() => patchReservation('Archived', props.bookingID)}\n                           disabled={buttonStates[res.index]}>Check Out</Button>\n        }\n        if (res.reservation.status === 'Booked') {\n            return <Button variant='contained' onClick={() => patchReservation('Cancelled', props.bookingID)}\n                           disabled={buttonStates[res.index]}>Cancel</Button>\n        }\n        return <></>\n    }\n\n    function setReservationRadioState(event: React.ChangeEvent<HTMLInputElement>) {\n        const value = parseInt(event.target.value);\n        setRadioState(value);\n        setReservationIndices(value);\n    }\n\n    function setReservationIndices(value: number) {\n        if (value === 0) {\n            setBookingIDs([...all]);\n        } else if (value === 1) {\n            setBookingIDs([...ongoing]);\n        } else if (value === 2) {\n            setBookingIDs([...upcoming]);\n        } else {\n            setBookingIDs([...past]);\n        }\n    }\n\n    function bookingIDToReservation(bookingID: number): { reservation: Reservation, index: number } {\n        for (let i = 0; i < location.state.response.length; i++) {\n            const reservation = location.state.response[i];\n            if (reservation.booking_id === bookingID) {\n                return {reservation: reservation, index: i};\n            }\n        }\n        return {\n            reservation: {\n                booking_id: -1,\n                physical_address: '',\n                date_of_registration: '',\n                check_in_day: '',\n                check_out_day: '',\n                status: '',\n                title: '',\n                is_extendable: false,\n                amenities: [],\n                view: '',\n                price: ''\n            },\n            index: -1\n        }\n    }\n\n\n    function GenerateReservations(props: { reservations: number[] }) {\n        return <GridList cols={1} cellHeight={220} className={classes.grid}>\n            {\n                props.reservations.map((bookingID: number) => {\n                    const res = bookingIDToReservation(bookingID);\n                    const reservation = res.reservation;\n                    const checkIn: Date = new Date(reservation.check_in_day.replace('-', '/'))\n                    const checkOut: Date = new Date(reservation.check_out_day.replace('-', '/'))\n                    const days: number = Math.round(Math.abs(+checkIn - +checkOut) / 24 / 60 / 60 / 1000)\n                    const totalPrice: string = (days * parseFloat(reservation.price)).toFixed(2)\n\n                    if (reservation.amenities.length === 0) {\n                        reservation.amenities.push(\"None\")\n                    }\n\n                    return (\n                        <GridListTile key={reservation.booking_id} cols={1}>\n                            <Paper elevation={3} key={reservation.booking_id} className={classes.brandPaper}>\n                                <Grid container spacing={2} alignItems=\"center\">\n                                    <Grid className={classes.hotelGrid}>\n                                        <Typography\n                                            className={classes.hotelTitle}>Room: {reservation.title} | {reservation.check_in_day} to {reservation.check_out_day}\n                                        </Typography>\n                                        <Typography>{reservation.physical_address}</Typography>\n                                        <Typography>Booking status: {reservation.status}</Typography>\n                                        <Typography>Amenities: {reservation.amenities.join(', ')}</Typography>\n                                        <Typography>View: {reservation.view}</Typography>\n                                        <Typography>\n                                            Extendable: {reservation.is_extendable ? \"Yes\" : \"No\"}\n                                        </Typography>\n                                    </Grid>\n                                    <Divider orientation=\"vertical\" flexItem className={classes.divider}/>\n                                    <Grid item xs={3}>\n                                        <Grid className={classes.priceDiv}>\n                                            <Typography>Booked on {reservation.date_of_registration}</Typography>\n                                            <Typography className={classes.hotelTitle}>Total price:</Typography>\n                                            <Typography className={classes.hotelTitle}>${totalPrice}</Typography>\n                                            <br/>\n                                            <ReservationEditButton bookingID={bookingID}/>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </GridListTile>\n                    );\n                })\n            }\n        </GridList>\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>My Reservations - {location.state.customerName}</Typography>\n            <RadioGroup className={classes.radioGroup} value={radioState} onChange={e => setReservationRadioState(e)}\n                        row>\n                <Typography>Filter by:&nbsp;&nbsp;&nbsp;</Typography>\n                <FormControlLabel value={0} control={<Radio/>} label=\"All Reservations\"/>\n                <FormControlLabel value={1} control={<Radio/>} label=\"Ongoing\"/>\n                <FormControlLabel value={2} control={<Radio/>} label=\"Upcoming\"/>\n                <FormControlLabel value={3} control={<Radio/>} label=\"Cancelled/Archived\"/>\n            </RadioGroup>\n            <GenerateReservations reservations={bookingIDs}/>\n            <Snackbar open={alertOpen} autoHideDuration={6000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity={alertStatus}>\n                    {alertMessage}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}","import {\n    Button, Dialog, DialogActions, DialogTitle,\n    Divider,\n    Grid,\n    GridList,\n    GridListTile,\n    makeStyles,\n    Paper, Snackbar, TextField, Tooltip,\n    TooltipProps,\n    Typography\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {TitleBarCustomer} from \"../index\";\nimport {useLocation} from \"react-router-dom\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {MaterialUiPickersDate} from \"@material-ui/pickers/typings/date\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        backgroundColor: theme.palette.background.paper,\n\n    },\n    centreTitle: {\n        paddingTop: '1em',\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    centreTitleNoSpace: {\n        fontWeight: 'bold',\n        fontSize: '2em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    smallerTitle: {\n        fontSize: '1.7em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        marginBottom: '0.5em'\n    },\n    brandPaper: {\n        marginLeft: '6em',\n        marginRight: '6em',\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        marginTop: '1em'\n    },\n    hotelTitle: {\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    grid: {\n        boxShadow: '0 0 3pt 1pt gray',\n        height: '50em',\n        width: '85%',\n        marginTop: '10em'\n    },\n    outsideGrid: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        marginBottom: '2em'\n    },\n    divider: {\n        marginLeft: '1em',\n        marginRight: '1em',\n    },\n    hotelGrid: {\n        width: '70%'\n    },\n    priceDiv: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n\n    },\n    dateGrid: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    gridParent: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    dialogDiv: {\n        marginLeft: \"0.5em\",\n        marginRight: \"0.5em\"\n    },\n    dialogHeader: {\n        fontWeight: 'bold'\n    },\n    dialogTitle: {\n        fontSize: \"1.8em\",\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n    dialogAddress: {\n        marginLeft: \"0.5em\",\n        marginRight: \"0.5em\",\n        fontStyle: \"italic\"\n    }\n}));\n\nconst useStylesBootstrap = makeStyles((theme) => ({\n    arrow: {\n        color: theme.palette.common.black,\n    },\n    tooltip: {\n        backgroundColor: theme.palette.common.black,\n    },\n}));\n\nfunction BootstrapTooltip(props: JSX.IntrinsicAttributes & TooltipProps) {\n    const classes = useStylesBootstrap();\n\n    return <Tooltip arrow classes={classes} {...props} />;\n}\n\ninterface Room {\n    type_id: number;\n    title: string;\n    price: string;\n    amenities: string[];\n    room_capacity: number;\n    view: string;\n    is_extendable: boolean;\n    total_number_rooms: number;\n    rooms_available: number;\n    enabled: undefined | boolean;\n    tooltip: string;\n}\n\ntype Severity = \"error\" | \"success\" | \"info\" | \"warning\" | undefined;\n\ninterface AvailableRoom {\n    type_id: number;\n    occupancy: number;\n}\n\nconst ConfirmationDialog = ({\n                                dialogOpen,\n                                setDialogOpen,\n                                roomToBook,\n                                classes,\n                                location,\n                                checkInDateToBook,\n                                checkOutDateToBook,\n                                disableBookRoomButton,\n                                bookRoom\n                            }: any) => {\n\n    return <Dialog onClose={() => setDialogOpen(false)} aria-labelledby=\"simple-dialog-title\" open={dialogOpen}>\n        <DialogTitle id=\"dialog-title\" className={classes.dialogTitle}>\n            <Typography className={classes.dialogTitle}>Confirm Room Booking</Typography>\n        </DialogTitle>\n        <div className={classes.dialogAddress}>\n            <Typography align=\"center\">{location.state.address}</Typography>\n        </div>\n        <br/>\n        <Divider/>\n        <Typography align=\"center\" className={classes.dialogHeader}>Customer Info</Typography>\n        <Divider/>\n        <div className={classes.dialogDiv}>\n            <Typography>{location.state.customerName}</Typography>\n            <Typography>{location.state.customerAddress}</Typography>\n        </div>\n        <br/>\n        <Divider/>\n        <Typography align=\"center\" className={classes.dialogHeader}>Room Details</Typography>\n        <Divider/>\n        <div className={classes.dialogDiv}>\n            <Typography>Room type: {roomToBook.title}</Typography>\n            <Typography>{checkInDateToBook} to {checkOutDateToBook}</Typography>\n            <Typography>Amenities: {roomToBook.amenities.join(', ')}</Typography>\n            <Typography>View: {roomToBook.view}</Typography>\n            <Typography>\n                Extendable: {roomToBook.is_extendable ? \"Yes\" : \"No\"}\n            </Typography>\n        </div>\n        <br/>\n        <DialogActions>\n            <Button disabled={disableBookRoomButton} onClick={() => bookRoom(roomToBook.type_id)} variant=\"contained\"\n                    color=\"primary\">\n                Book Room\n            </Button>\n            <Button onClick={() => setDialogOpen(false)} variant=\"contained\" color=\"secondary\">\n                Cancel\n            </Button>\n        </DialogActions>\n    </Dialog>\n};\n\nexport default function Rooms() {\n    const classes = useStyles();\n    const location = useLocation<{\n        address: string;\n        customerSIN: string,\n        customerName: string,\n        customerAddress: string,\n        response: Room[],\n        brandName: string,\n        hotelID: string\n    }>();\n\n    const buttonStateValues: boolean[] = []\n    for (let i = 0; i < location.state.response.length; i++) {\n        buttonStateValues.push(true)\n    }\n\n    const [checkInDate, setCheckInDate]: [Date, any] = useState(new Date());\n    const tomorrow: MaterialUiPickersDate = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1)\n    const [checkOutDate, setCheckOutDate]: [Date, any] = useState(tomorrow);\n    const [checkInDateToBook, setCheckInDateToBook]: [string, any] = useState(\"\");\n    const [checkOutDateToBook, setCheckOutDateToBook]: [string, any] = useState(\"\");\n    const [numPeople, setNumPeople]: [number, any] = useState(1);\n    const [availability, setAvailability]: [boolean, any] = useState(false);\n    const [disableAvailability, setDisableAvailability]: [boolean, any] = useState(false);\n    const [roomData, setRoomData]: [Room[], any] = useState(location.state.response);\n    const [numRooms, setNumRooms]: [number, any] = useState(location.state.response.length);\n    const [dialogOpen, setDialogOpen]: [boolean, any] = useState(false);\n    const [roomToBook, setRoomToBook]: [Room, any] = useState(location.state.response[0]);\n    const [disableBookRoomButton, setDisableBookRoomButton]: [boolean, any] = useState(false);\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertStatus, setAlertStatus]: [Severity, any] = useState(\"success\");\n\n    const past: [Date, Date, number] = [tomorrow, tomorrow, -1]\n\n    location.state.response.forEach((room: Room) => {\n        room.enabled = true;\n        room.tooltip = \"\";\n    })\n\n    function confirmBookRoom(room: Room) {\n        setRoomToBook(room);\n        setDialogOpen(true);\n    }\n\n    async function bookRoom(typeID: number) {\n        setDisableBookRoomButton(true);\n        try {\n            let response = await fetch(process.env.REACT_APP_SERVER_URL + \"/customers/\" + location.state.customerSIN + \"/reservations\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    type_id: typeID,\n                    check_in: checkInDateToBook,\n                    check_out: checkOutDateToBook\n                })\n            })\n            if (response.status === 201) {\n                await checkAvailability();\n                openAlert('Successfully booked room', 'success');\n                setDialogOpen(false);\n            } else {\n                openAlert('Error: Unable to book room', 'error');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            openAlert('Error: Unable to book room', 'error');\n        }\n        setDisableBookRoomButton(false);\n    }\n\n    function openAlert(message: string, status: string) {\n        setAlertMessage(message);\n        setAlertStatus(status);\n        setAlertOpen(true);\n    }\n\n    function closeAlert() {\n        setAlertOpen(false);\n    }\n\n    async function checkAvailability() {\n        //Only check availability if filters have been changed\n        if (past[0] !== checkInDate || past[1] !== checkOutDate || past[2] !== numPeople) {\n            setDisableAvailability(true);\n            try {\n                let url: string = process.env.REACT_APP_SERVER_URL + \"/hotels/\" + location.state.hotelID + \"/rooms/availability\"\n                url += \"?check-in=\" + dateToString(checkInDate) + \"&check-out=\" + dateToString(checkOutDate) + \"&people=\" + numPeople;\n\n                let response: Response = await fetch(url);\n                if (response.status !== 200) {\n                    return;\n                }\n                const availableRooms: AvailableRoom[] = await response.json();\n                const newRoomData: Room[] = JSON.parse(JSON.stringify(roomData));\n                let roomNum: number = newRoomData.length;\n                newRoomData.forEach(room => {\n                    const roomInfo = getRoom(room.type_id, availableRooms);\n                    room.enabled = true;\n                    room.tooltip = \"\";\n                    room.rooms_available = room.total_number_rooms - roomInfo.occupancy;\n                    //Room capacity is too small; disable\n                    if (roomInfo.type_id === -1) {\n                        room.enabled = false;\n                        room.tooltip = \"Room capacity is too small\";\n                        roomNum--;\n                    }\n                    if (room.rooms_available <= 0) {\n                        room.enabled = false;\n                        room.tooltip = \"Room is booked up over these dates\"\n                        roomNum--;\n                    }\n                });\n                newRoomData.sort((r1: Room, r2: Room) => {\n                    if (r1.enabled && !r2.enabled) {\n                        return -1;\n                    }\n                    if (!r1.enabled && r2.enabled) {\n                        return 1;\n                    }\n                    return r1.type_id > r2.type_id ? -1 : 1;\n                })\n                setRoomData(newRoomData);\n                setNumRooms(roomNum);\n                setCheckInDateToBook(dateToString(checkInDate));\n                setCheckOutDateToBook(dateToString(checkOutDate));\n            } catch (error) {\n                console.error('Error:', error);\n            }\n            setDisableAvailability(false);\n        }\n        if (!availability) {\n            setAvailability(true);\n        }\n    }\n\n    function getRoom(typeID: number, roomData: AvailableRoom[]): AvailableRoom {\n        for (let i = 0; i < roomData.length; i++) {\n            if (roomData[i].type_id === typeID) {\n                return roomData[i];\n            }\n        }\n        return {\n            type_id: -1,\n            occupancy: -1\n        }\n    }\n\n    function setNumberOfPeople(num: number) {\n        if (num > 0) {\n            setNumPeople(num);\n            setAvailability(false);\n        }\n    }\n\n    function setCheckOut(date: MaterialUiPickersDate) {\n        if (date !== null && checkInDate !== null) {\n            if (date.getTime() <= checkInDate.getTime()) {\n                const checkIn: MaterialUiPickersDate = new Date();\n                checkIn.setMonth(date.getMonth())\n                checkIn.setDate(date.getDate() - 1)\n                setCheckInDate(checkIn);\n            }\n            setAvailability(false);\n            setCheckOutDate(date);\n        }\n    }\n\n    function setCheckIn(date: MaterialUiPickersDate) {\n        if (date !== null && checkOutDate !== null) {\n            if (date.getTime() >= checkOutDate.getTime()) {\n                const checkOut: MaterialUiPickersDate = new Date();\n                checkOut.setMonth(date.getMonth())\n                checkOut.setDate(date.getDate() + 1)\n                setCheckOutDate(checkOut);\n            }\n            setAvailability(false);\n            setCheckInDate(date);\n        }\n    }\n\n    function dateToString(date: Date): string {\n        let year: string = date.getFullYear().toString();\n        let month: string = '' + (date.getMonth() + 1);\n        let day: string = '' + date.getDate();\n\n        if (month.length < 2) {\n            month = '0' + month;\n        }\n        if (day.length < 2) {\n            day = '0' + day;\n        }\n        return year + '-' + month + '-' + day;\n    }\n\n    function getRoomAvailabilityMessage(numAvailable: number, total: number): string {\n        return numAvailable + '/' + total + ' rooms available';\n    }\n\n    return (\n        <div className={classes.root}>\n            <TitleBarCustomer/>\n            <Typography className={classes.centreTitle}>{location.state.brandName}</Typography>\n            <Typography className={classes.centreTitleNoSpace}>{location.state.address}</Typography>\n            <GridList className={classes.gridParent}>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <Typography>Enter booking info to select a room:</Typography>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"check-in-dialog\"\n                            label=\"Check in date\"\n                            format=\"yyyy-MM-dd\"\n                            minDate={new Date()}\n                            value={checkInDate}\n                            onChange={(date: MaterialUiPickersDate) => setCheckIn(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"check-out-dialog\"\n                            label=\"Check out date\"\n                            format=\"yyyy-MM-dd\"\n                            minDate={tomorrow}\n                            value={checkOutDate}\n                            onChange={(date: MaterialUiPickersDate) => setCheckOut(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <TextField\n                        id=\"capacity-number\"\n                        label=\"# of people\"\n                        type=\"number\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        variant=\"outlined\"\n                        value={numPeople}\n                        onChange={e => setNumberOfPeople(parseInt(e.target.value))}\n                    />\n                </Grid>\n                <Grid container item alignItems=\"center\" xs={2} className={classes.dateGrid}>\n                    <Button variant=\"contained\" onClick={checkAvailability} disabled={disableAvailability}>Check\n                        Availability</Button>\n                </Grid>\n            </GridList>\n            <Typography className={classes.smallerTitle}>{numRooms} Rooms Found</Typography>\n            <div className={classes.outsideGrid}>\n                <GridList cols={1} cellHeight={190} className={classes.grid}>\n                    <div style={{height: '1em'}}/>\n                    {\n                        roomData.map((room: Room) => {\n                            return (\n                                <GridListTile key={room.type_id} cols={1}>\n                                    <BootstrapTooltip title={room.tooltip} aria-label=\"add\" placement=\"top\">\n                                        <Paper elevation={3} key={room.type_id} className={classes.brandPaper}\n                                               style={room.enabled ? {} : {\n                                                   backgroundColor: 'grey'\n                                               }}>\n                                            <div style={room.enabled ? {opacity: '1'} : {\n                                                opacity: '0.40'\n                                            }}>\n                                                <Grid container spacing={2} alignItems=\"center\">\n                                                    <Grid className={classes.hotelGrid}>\n                                                        <Typography\n                                                            className={classes.hotelTitle}>{room.title}</Typography>\n                                                        <Typography>Amenities: {room.amenities.length === 0 ? \"None\" : room.amenities.join(', ')}</Typography>\n                                                        <Typography>Max\n                                                            capacity: {room.room_capacity} adults</Typography>\n                                                        <Typography>View: {room.view}</Typography>\n                                                        <Typography>Extendable: {room.is_extendable ? \"Yes\" : \"No\"}</Typography>\n                                                    </Grid>\n                                                    <Divider orientation=\"vertical\" flexItem\n                                                             className={classes.divider}/>\n                                                    <Grid container item xs={3} alignItems=\"center\">\n                                                        <Grid container className={classes.priceDiv}>\n                                                            <Typography\n                                                                className={classes.hotelTitle}>${room.price}/night</Typography>\n                                                            <Typography>{getRoomAvailabilityMessage(room.rooms_available, room.total_number_rooms)}</Typography>\n                                                            <br/>\n                                                            <BootstrapTooltip\n                                                                title={(!availability && room.enabled) ? \"Check availability to book a room\" : \"\"}\n                                                                aria-label=\"add\" placement=\"top\">\n                                                                <div>\n                                                                    <Button variant='contained'\n                                                                            onClick={() => confirmBookRoom(room)}\n                                                                            disabled={!room.enabled || !availability}>\n                                                                        Book Room\n                                                                    </Button>\n                                                                </div>\n                                                            </BootstrapTooltip>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </div>\n                                        </Paper>\n                                    </BootstrapTooltip>\n                                </GridListTile>\n                            );\n                        })\n                    }\n                </GridList>\n            </div>\n            <ConfirmationDialog dialogOpen={dialogOpen} setDialogOpen={setDialogOpen} roomToBook={roomToBook}\n                                classes={classes} location={location} checkInDateToBook={checkInDateToBook}\n                                bookRoom={bookRoom} checkOutDateToBook={checkOutDateToBook}\n                                disableBookRoomButton={disableBookRoomButton}/>\n            <Snackbar open={alertOpen} autoHideDuration={6000} onClose={closeAlert}>\n                <Alert onClose={closeAlert} severity={alertStatus}>\n                    {alertMessage}\n                </Alert>\n            </Snackbar>\n        </div>\n    )\n}","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Employee from \"./employee/Employee\";\nimport Customer from \"./customer/Customer\";\nimport {AppBar, makeStyles, Typography} from \"@material-ui/core\";\nimport Name from \"./customer/Name\";\nimport Welcome from \"./customer/Welcome\";\nimport HotelBrand from \"./customer/HotelBrand\";\nimport Hotel from \"./customer/Hotel\";\nimport Reservations from \"./customer/Reservations\";\nimport Rooms from \"./customer/Rooms\";\n\nrequire('dotenv').config()\n\nconst useTitleStyles = makeStyles(() => ({\n    title: {\n        fontSize: \"2.5em\",\n        fontWeight: \"bold\",\n        paddingLeft: \"1em\"\n    }\n}));\n\nexport function TitleBarCustomer() {\n    const classes = useTitleStyles();\n    return <AppBar position=\"static\">\n        <Typography className={classes.title}>ExpressBook Customer Portal</Typography>\n    </AppBar>\n}\n\nexport function TitleBarEmployee() {\n    const classes = useTitleStyles();\n    return <AppBar position=\"static\">\n        <Typography className={classes.title}>ExpressBook Employee Portal</Typography>\n    </AppBar>\n}\n\nReactDOM.render(\n    <>\n        <Router>\n            <Switch>\n                <Route exact path=\"/ui/employee\" component={Employee}/>\n                <Route exact path=\"/ui/customer\" component={Customer}/>\n                <Route exact path=\"/ui/customer/name\" component={Name}/>\n                <Route exact path=\"/ui/customer/welcome\" component={Welcome}/>\n                <Route exact path=\"/ui/customer/brands\" component={HotelBrand}/>\n                <Route exact path=\"/ui/customer/hotels\" component={Hotel}/>\n                <Route exact path=\"/ui/customer/reservations\" component={Reservations}/>\n                <Route exact path=\"/ui/customer/rooms\" component={Rooms}/>\n            </Switch>\n        </Router>\n    </>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}